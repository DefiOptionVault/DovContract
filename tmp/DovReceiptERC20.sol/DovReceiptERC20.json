{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expiry",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dov",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isPut",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_strike",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_underlyingSymbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_collateralSymbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_expirySymbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPut",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strike",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060408051602080820183526000808352835191820190935291825290818160056200003e8382620002b8565b5060066200004d8282620002b8565b50506007805460ff191690555062000067600033620000c7565b620000937f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620000c7565b620000bf7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33620000c7565b505062000384565b620000d38282620000d7565b5050565b620000e3828262000102565b6000828152600160205260409020620000fd9082620001a2565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620000d3576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200015e3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001b9836001600160a01b038416620001c2565b90505b92915050565b60008181526001830160205260408120546200020b57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620001bc565b506000620001bc565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200023f57607f821691505b6020821081036200026057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000fd57600081815260208120601f850160051c810160208610156200028f5750805b601f850160051c820191505b81811015620002b0578281556001016200029b565b505050505050565b81516001600160401b03811115620002d457620002d462000214565b620002ec81620002e584546200022a565b8462000266565b602080601f8311600181146200032457600084156200030b5750858301515b600019600386901b1c1916600185901b178555620002b0565b600085815260208120601f198616915b82811015620003555788860151825594840194600190910190840162000334565b5085821015620003745787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611fdd80620003946000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c806379cc679011610125578063bf911794116100ad578063d90a730e1161007c578063d90a730e1461046d578063dd62ed3e14610475578063e184c9be14610488578063e63ab1e914610491578063f3c274a6146104a657600080fd5b8063bf91179414610418578063ca15c87314610420578063d539139314610433578063d547741f1461045a57600080fd5b806395d89b41116100f457806395d89b41146103d9578063a217fddf146103e1578063a457c2d7146103e9578063a9059cbb146103fc578063ad8f50081461040f57600080fd5b806379cc6790146103985780638456cb59146103ab5780639010d07c146103b357806391d14854146103c657600080fd5b8063313ce567116101a857806340c10f191161017757806340c10f191461032b57806342966c681461033e5780635c975abb146103515780635edabd8b1461035c57806370a082311461036f57600080fd5b8063313ce567146102ee57806336568abe146102fd57806339509351146103105780633f4ba83a1461032357600080fd5b806318160ddd116101e457806318160ddd1461029157806323b872dd146102a3578063248a9ca3146102b65780632f2ff15d146102d957600080fd5b806301ffc9a71461021657806306fdde031461023e578063095ea7b3146102535780630af0ebf714610266575b600080fd5b6102296102243660046119cd565b6104b8565b60405190151581526020015b60405180910390f35b6102466104e3565b6040516102359190611a1b565b610229610261366004611a6a565b610575565b600a54610279906001600160a01b031681565b6040516001600160a01b039091168152602001610235565b6004545b604051908152602001610235565b6102296102b1366004611a94565b61058d565b6102956102c4366004611ad0565b60009081526020819052604090206001015490565b6102ec6102e7366004611ae9565b6105b1565b005b60405160128152602001610235565b6102ec61030b366004611ae9565b6105db565b61022961031e366004611a6a565b61065e565b6102ec610680565b6102ec610339366004611a6a565b610714565b6102ec61034c366004611ad0565b6107b3565b60075460ff16610229565b6102ec61036a366004611bb8565b6107c0565b61029561037d366004611c7c565b6001600160a01b031660009081526002602052604090205490565b6102ec6103a6366004611a6a565b610994565b6102ec6109a9565b6102796103c1366004611c97565b610a3b565b6102296103d4366004611ae9565b610a5a565b610246610a83565b610295600081565b6102296103f7366004611a6a565b610a92565b61022961040a366004611a6a565b610b0d565b61029560085481565b610246610b1b565b61029561042e366004611ad0565b610ba9565b6102957f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102ec610468366004611ae9565b610bc0565b610246610be5565b610295610483366004611cb9565b610bf2565b61029560095481565b610295600080516020611f8883398151915281565b60075461022990610100900460ff1681565b60006001600160e01b03198216635a05180f60e01b14806104dd57506104dd82610c1d565b92915050565b6060600580546104f290611ce3565b80601f016020809104026020016040519081016040528092919081815260200182805461051e90611ce3565b801561056b5780601f106105405761010080835404028352916020019161056b565b820191906000526020600020905b81548152906001019060200180831161054e57829003601f168201915b5050505050905090565b600033610583818585610c52565b5060019392505050565b60003361059b858285610d76565b6105a6858585610df0565b506001949350505050565b6000828152602081905260409020600101546105cc81610fa6565b6105d68383610fb0565b505050565b6001600160a01b03811633146106505760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61065a8282610fd2565b5050565b6000336105838185856106718383610bf2565b61067b9190611d33565b610c52565b610698600080516020611f8883398151915233610a5a565b61070a5760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e7061757365000000000000006064820152608401610647565b610712610ff4565b565b61073e7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610a5a565b6107a95760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b6064820152608401610647565b61065a8282611046565b6107bd3382611113565b50565b83421061080f5760405162461bcd60e51b815260206004820181905260248201527f43616e2774206465706c6f7920616e206578706972656420636f6e74726163746044820152606401610647565b600a80546001600160a01b0319166001600160a01b038916179055600b6108368482611d94565b50600c6108438382611d94565b506007805461ff00191661010088151502179055600885905560098490556040805180820190915260018152602d60f81b6020820152600090610887908590611253565b90506108938183611253565b90506108b881604051806040016040528060018152602001602d60f81b815250611253565b90506108e1816108dc670de0b6b3a76400006008546108d79190611e54565b61127f565b611253565b905061093b81600760019054906101000a900460ff1661091b57604051806040016040528060028152602001612d4360f01b815250611253565b6040518060400160405280600281526020016102d560f41b815250611253565b9050610948600033611312565b6109727f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633611312565b61098a600080516020611f8883398151915233611312565b5050505050505050565b61099f823383610d76565b61065a8282611113565b6109c1600080516020611f8883398151915233610a5a565b610a335760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f2070617573650000000000000000006064820152608401610647565b61071261131c565b6000828152600160205260408120610a539083611359565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546104f290611ce3565b60003381610aa08286610bf2565b905083811015610b005760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610647565b6105a68286868403610c52565b600033610583818585610df0565b600c8054610b2890611ce3565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5490611ce3565b8015610ba15780601f10610b7657610100808354040283529160200191610ba1565b820191906000526020600020905b815481529060010190602001808311610b8457829003601f168201915b505050505081565b60008181526001602052604081206104dd90611365565b600082815260208190526040902060010154610bdb81610fa6565b6105d68383610fd2565b600b8054610b2890611ce3565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60006001600160e01b03198216637965db0b60e01b14806104dd57506301ffc9a760e01b6001600160e01b03198316146104dd565b6001600160a01b038316610cb45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610647565b6001600160a01b038216610d155760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610647565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d828484610bf2565b90506000198114610dea5781811015610ddd5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610647565b610dea8484848403610c52565b50505050565b6001600160a01b038316610e545760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610647565b6001600160a01b038216610eb65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610647565b610ec183838361136f565b6001600160a01b03831660009081526002602052604090205481811015610f395760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610647565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f999086815260200190565b60405180910390a3610dea565b6107bd813361137a565b610fba82826113d3565b60008281526001602052604090206105d69082611457565b610fdc828261146c565b60008281526001602052604090206105d690826114d1565b610ffc6114e6565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661109c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610647565b6110a86000838361136f565b80600460008282546110ba9190611d33565b90915550506001600160a01b0382166000818152600260209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166111735760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610647565b61117f8260008361136f565b6001600160a01b038216600090815260026020526040902054818110156111f35760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610647565b6001600160a01b03831660008181526002602090815260408083208686039055600480548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60608282604051602001611268929190611e76565b604051602081830303815290604052905092915050565b6060600061128c8361152f565b600101905060008167ffffffffffffffff8111156112ac576112ac611b15565b6040519080825280601f01601f1916602001820160405280156112d6576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846112e057509392505050565b61065a8282610fb0565b611324611607565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110293390565b6000610a53838361164d565b60006104dd825490565b6105d6838383611677565b6113848282610a5a565b61065a57611391816116dd565b61139c8360206116ef565b6040516020016113ad929190611ea5565b60408051601f198184030181529082905262461bcd60e51b825261064791600401611a1b565b6113dd8282610a5a565b61065a576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556114133390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610a53836001600160a01b03841661188b565b6114768282610a5a565b1561065a576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610a53836001600160a01b0384166118da565b60075460ff166107125760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610647565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061156e5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061159a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106115b857662386f26fc10000830492506010015b6305f5e10083106115d0576305f5e100830492506008015b61271083106115e457612710830492506004015b606483106115f6576064830492506002015b600a83106104dd5760010192915050565b60075460ff16156107125760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610647565b600082600001828154811061166457611664611f1a565b9060005260206000200154905092915050565b60075460ff16156105d65760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610647565b60606104dd6001600160a01b03831660145b606060006116fe836002611f30565b611709906002611d33565b67ffffffffffffffff81111561172157611721611b15565b6040519080825280601f01601f19166020018201604052801561174b576020820181803683370190505b509050600360fc1b8160008151811061176657611766611f1a565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061179557611795611f1a565b60200101906001600160f81b031916908160001a90535060006117b9846002611f30565b6117c4906001611d33565b90505b600181111561183c576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106117f8576117f8611f1a565b1a60f81b82828151811061180e5761180e611f1a565b60200101906001600160f81b031916908160001a90535060049490941c9361183581611f47565b90506117c7565b508315610a535760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610647565b60008181526001830160205260408120546118d2575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104dd565b5060006104dd565b600081815260018301602052604081205480156119c35760006118fe600183611f5e565b855490915060009061191290600190611f5e565b905081811461197757600086600001828154811061193257611932611f1a565b906000526020600020015490508087600001848154811061195557611955611f1a565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061198857611988611f71565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104dd565b60009150506104dd565b6000602082840312156119df57600080fd5b81356001600160e01b031981168114610a5357600080fd5b60005b83811015611a125781810151838201526020016119fa565b50506000910152565b6020815260008251806020840152611a3a8160408501602087016119f7565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611a6557600080fd5b919050565b60008060408385031215611a7d57600080fd5b611a8683611a4e565b946020939093013593505050565b600080600060608486031215611aa957600080fd5b611ab284611a4e565b9250611ac060208501611a4e565b9150604084013590509250925092565b600060208284031215611ae257600080fd5b5035919050565b60008060408385031215611afc57600080fd5b82359150611b0c60208401611a4e565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611b3c57600080fd5b813567ffffffffffffffff80821115611b5757611b57611b15565b604051601f8301601f19908116603f01168101908282118183101715611b7f57611b7f611b15565b81604052838152866020858801011115611b9857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600060e0888a031215611bd357600080fd5b611bdc88611a4e565b965060208801358015158114611bf157600080fd5b95506040880135945060608801359350608088013567ffffffffffffffff80821115611c1c57600080fd5b611c288b838c01611b2b565b945060a08a0135915080821115611c3e57600080fd5b611c4a8b838c01611b2b565b935060c08a0135915080821115611c6057600080fd5b50611c6d8a828b01611b2b565b91505092959891949750929550565b600060208284031215611c8e57600080fd5b610a5382611a4e565b60008060408385031215611caa57600080fd5b50508035926020909101359150565b60008060408385031215611ccc57600080fd5b611cd583611a4e565b9150611b0c60208401611a4e565b600181811c90821680611cf757607f821691505b602082108103611d1757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104dd576104dd611d1d565b601f8211156105d657600081815260208120601f850160051c81016020861015611d6d5750805b601f850160051c820191505b81811015611d8c57828155600101611d79565b505050505050565b815167ffffffffffffffff811115611dae57611dae611b15565b611dc281611dbc8454611ce3565b84611d46565b602080601f831160018114611df75760008415611ddf5750858301515b600019600386901b1c1916600185901b178555611d8c565b600085815260208120601f198616915b82811015611e2657888601518255948401946001909101908401611e07565b5085821015611e445787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082611e7157634e487b7160e01b600052601260045260246000fd5b500490565b60008351611e888184602088016119f7565b835190830190611e9c8183602088016119f7565b01949350505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611edd8160178501602088016119f7565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611f0e8160288401602088016119f7565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176104dd576104dd611d1d565b600081611f5657611f56611d1d565b506000190190565b818103818111156104dd576104dd611d1d565b634e487b7160e01b600052603160045260246000fdfe65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862aa26469706673582212207bf66db47d8304edc9b1c21710de9b9134c046e5ce4b3cd35d2ff671073fd68f64736f6c63430008130033",
    "sourceMap": "283:1766:48:-:0;;;708:52;;;;;;;;;-1:-1:-1;1424:230:31;;;;;;;;;-1:-1:-1;1424:230:31;;;;;;;;;;;;;;;;;2046:5:26;:13;1424:230:31;2046:5:26;:13;:::i;:::-;-1:-1:-1;2069:7:26;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;;996:7:25;:15;;-1:-1:-1;;996:15:25;;;-1:-1:-1;1508:44:31::1;-1:-1:-1::0;719:10:38;1508::31::1;:44::i;:::-;1563:37;1148:24;719:10:38::0;1508::31::1;:44::i;1563:37::-;1610;1216:24;719:10:38::0;1508::31::1;:44::i;1610:37::-;1424:230:::0;;283:1766:48;;6937:110:20;7015:25;7026:4;7032:7;7015:10;:25::i;:::-;6937:110;;:::o;1978:166:21:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106:18;;;;:12;:18;;;;;:31;;2129:7;2106:22;:31::i;:::-;;1978:166;;:::o;7587:233:20:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:20;;;;;;;;;;;;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:20;;;;;;;;;:36;;-1:-1:-1;;7708:36:20;7740:4;7708:36;;;7790:12;719:10:38;;640:96;7790:12:20;-1:-1:-1;;;;;7763:40:20;7781:7;-1:-1:-1;;;;;7763:40:20;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;8305:150:44:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:44;;8398:4;:50::i;:::-;8391:57;;8305:150;;;;;:::o;2214:404::-;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:44;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:44;2589:12;;14:127:55;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:55;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:55;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:55;;;2580:26;2531:89;-1:-1:-1;;1335:1:55;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:55;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:55;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:55;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:55:o;:::-;283:1766:48;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102115760003560e01c806379cc679011610125578063bf911794116100ad578063d90a730e1161007c578063d90a730e1461046d578063dd62ed3e14610475578063e184c9be14610488578063e63ab1e914610491578063f3c274a6146104a657600080fd5b8063bf91179414610418578063ca15c87314610420578063d539139314610433578063d547741f1461045a57600080fd5b806395d89b41116100f457806395d89b41146103d9578063a217fddf146103e1578063a457c2d7146103e9578063a9059cbb146103fc578063ad8f50081461040f57600080fd5b806379cc6790146103985780638456cb59146103ab5780639010d07c146103b357806391d14854146103c657600080fd5b8063313ce567116101a857806340c10f191161017757806340c10f191461032b57806342966c681461033e5780635c975abb146103515780635edabd8b1461035c57806370a082311461036f57600080fd5b8063313ce567146102ee57806336568abe146102fd57806339509351146103105780633f4ba83a1461032357600080fd5b806318160ddd116101e457806318160ddd1461029157806323b872dd146102a3578063248a9ca3146102b65780632f2ff15d146102d957600080fd5b806301ffc9a71461021657806306fdde031461023e578063095ea7b3146102535780630af0ebf714610266575b600080fd5b6102296102243660046119cd565b6104b8565b60405190151581526020015b60405180910390f35b6102466104e3565b6040516102359190611a1b565b610229610261366004611a6a565b610575565b600a54610279906001600160a01b031681565b6040516001600160a01b039091168152602001610235565b6004545b604051908152602001610235565b6102296102b1366004611a94565b61058d565b6102956102c4366004611ad0565b60009081526020819052604090206001015490565b6102ec6102e7366004611ae9565b6105b1565b005b60405160128152602001610235565b6102ec61030b366004611ae9565b6105db565b61022961031e366004611a6a565b61065e565b6102ec610680565b6102ec610339366004611a6a565b610714565b6102ec61034c366004611ad0565b6107b3565b60075460ff16610229565b6102ec61036a366004611bb8565b6107c0565b61029561037d366004611c7c565b6001600160a01b031660009081526002602052604090205490565b6102ec6103a6366004611a6a565b610994565b6102ec6109a9565b6102796103c1366004611c97565b610a3b565b6102296103d4366004611ae9565b610a5a565b610246610a83565b610295600081565b6102296103f7366004611a6a565b610a92565b61022961040a366004611a6a565b610b0d565b61029560085481565b610246610b1b565b61029561042e366004611ad0565b610ba9565b6102957f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102ec610468366004611ae9565b610bc0565b610246610be5565b610295610483366004611cb9565b610bf2565b61029560095481565b610295600080516020611f8883398151915281565b60075461022990610100900460ff1681565b60006001600160e01b03198216635a05180f60e01b14806104dd57506104dd82610c1d565b92915050565b6060600580546104f290611ce3565b80601f016020809104026020016040519081016040528092919081815260200182805461051e90611ce3565b801561056b5780601f106105405761010080835404028352916020019161056b565b820191906000526020600020905b81548152906001019060200180831161054e57829003601f168201915b5050505050905090565b600033610583818585610c52565b5060019392505050565b60003361059b858285610d76565b6105a6858585610df0565b506001949350505050565b6000828152602081905260409020600101546105cc81610fa6565b6105d68383610fb0565b505050565b6001600160a01b03811633146106505760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61065a8282610fd2565b5050565b6000336105838185856106718383610bf2565b61067b9190611d33565b610c52565b610698600080516020611f8883398151915233610a5a565b61070a5760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e7061757365000000000000006064820152608401610647565b610712610ff4565b565b61073e7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610a5a565b6107a95760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b6064820152608401610647565b61065a8282611046565b6107bd3382611113565b50565b83421061080f5760405162461bcd60e51b815260206004820181905260248201527f43616e2774206465706c6f7920616e206578706972656420636f6e74726163746044820152606401610647565b600a80546001600160a01b0319166001600160a01b038916179055600b6108368482611d94565b50600c6108438382611d94565b506007805461ff00191661010088151502179055600885905560098490556040805180820190915260018152602d60f81b6020820152600090610887908590611253565b90506108938183611253565b90506108b881604051806040016040528060018152602001602d60f81b815250611253565b90506108e1816108dc670de0b6b3a76400006008546108d79190611e54565b61127f565b611253565b905061093b81600760019054906101000a900460ff1661091b57604051806040016040528060028152602001612d4360f01b815250611253565b6040518060400160405280600281526020016102d560f41b815250611253565b9050610948600033611312565b6109727f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633611312565b61098a600080516020611f8883398151915233611312565b5050505050505050565b61099f823383610d76565b61065a8282611113565b6109c1600080516020611f8883398151915233610a5a565b610a335760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f2070617573650000000000000000006064820152608401610647565b61071261131c565b6000828152600160205260408120610a539083611359565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546104f290611ce3565b60003381610aa08286610bf2565b905083811015610b005760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610647565b6105a68286868403610c52565b600033610583818585610df0565b600c8054610b2890611ce3565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5490611ce3565b8015610ba15780601f10610b7657610100808354040283529160200191610ba1565b820191906000526020600020905b815481529060010190602001808311610b8457829003601f168201915b505050505081565b60008181526001602052604081206104dd90611365565b600082815260208190526040902060010154610bdb81610fa6565b6105d68383610fd2565b600b8054610b2890611ce3565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60006001600160e01b03198216637965db0b60e01b14806104dd57506301ffc9a760e01b6001600160e01b03198316146104dd565b6001600160a01b038316610cb45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610647565b6001600160a01b038216610d155760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610647565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d828484610bf2565b90506000198114610dea5781811015610ddd5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610647565b610dea8484848403610c52565b50505050565b6001600160a01b038316610e545760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610647565b6001600160a01b038216610eb65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610647565b610ec183838361136f565b6001600160a01b03831660009081526002602052604090205481811015610f395760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610647565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f999086815260200190565b60405180910390a3610dea565b6107bd813361137a565b610fba82826113d3565b60008281526001602052604090206105d69082611457565b610fdc828261146c565b60008281526001602052604090206105d690826114d1565b610ffc6114e6565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661109c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610647565b6110a86000838361136f565b80600460008282546110ba9190611d33565b90915550506001600160a01b0382166000818152600260209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166111735760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610647565b61117f8260008361136f565b6001600160a01b038216600090815260026020526040902054818110156111f35760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610647565b6001600160a01b03831660008181526002602090815260408083208686039055600480548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60608282604051602001611268929190611e76565b604051602081830303815290604052905092915050565b6060600061128c8361152f565b600101905060008167ffffffffffffffff8111156112ac576112ac611b15565b6040519080825280601f01601f1916602001820160405280156112d6576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846112e057509392505050565b61065a8282610fb0565b611324611607565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110293390565b6000610a53838361164d565b60006104dd825490565b6105d6838383611677565b6113848282610a5a565b61065a57611391816116dd565b61139c8360206116ef565b6040516020016113ad929190611ea5565b60408051601f198184030181529082905262461bcd60e51b825261064791600401611a1b565b6113dd8282610a5a565b61065a576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556114133390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610a53836001600160a01b03841661188b565b6114768282610a5a565b1561065a576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610a53836001600160a01b0384166118da565b60075460ff166107125760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610647565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061156e5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061159a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106115b857662386f26fc10000830492506010015b6305f5e10083106115d0576305f5e100830492506008015b61271083106115e457612710830492506004015b606483106115f6576064830492506002015b600a83106104dd5760010192915050565b60075460ff16156107125760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610647565b600082600001828154811061166457611664611f1a565b9060005260206000200154905092915050565b60075460ff16156105d65760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610647565b60606104dd6001600160a01b03831660145b606060006116fe836002611f30565b611709906002611d33565b67ffffffffffffffff81111561172157611721611b15565b6040519080825280601f01601f19166020018201604052801561174b576020820181803683370190505b509050600360fc1b8160008151811061176657611766611f1a565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061179557611795611f1a565b60200101906001600160f81b031916908160001a90535060006117b9846002611f30565b6117c4906001611d33565b90505b600181111561183c576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106117f8576117f8611f1a565b1a60f81b82828151811061180e5761180e611f1a565b60200101906001600160f81b031916908160001a90535060049490941c9361183581611f47565b90506117c7565b508315610a535760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610647565b60008181526001830160205260408120546118d2575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104dd565b5060006104dd565b600081815260018301602052604081205480156119c35760006118fe600183611f5e565b855490915060009061191290600190611f5e565b905081811461197757600086600001828154811061193257611932611f1a565b906000526020600020015490508087600001848154811061195557611955611f1a565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061198857611988611f71565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104dd565b60009150506104dd565b6000602082840312156119df57600080fd5b81356001600160e01b031981168114610a5357600080fd5b60005b83811015611a125781810151838201526020016119fa565b50506000910152565b6020815260008251806020840152611a3a8160408501602087016119f7565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611a6557600080fd5b919050565b60008060408385031215611a7d57600080fd5b611a8683611a4e565b946020939093013593505050565b600080600060608486031215611aa957600080fd5b611ab284611a4e565b9250611ac060208501611a4e565b9150604084013590509250925092565b600060208284031215611ae257600080fd5b5035919050565b60008060408385031215611afc57600080fd5b82359150611b0c60208401611a4e565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611b3c57600080fd5b813567ffffffffffffffff80821115611b5757611b57611b15565b604051601f8301601f19908116603f01168101908282118183101715611b7f57611b7f611b15565b81604052838152866020858801011115611b9857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600060e0888a031215611bd357600080fd5b611bdc88611a4e565b965060208801358015158114611bf157600080fd5b95506040880135945060608801359350608088013567ffffffffffffffff80821115611c1c57600080fd5b611c288b838c01611b2b565b945060a08a0135915080821115611c3e57600080fd5b611c4a8b838c01611b2b565b935060c08a0135915080821115611c6057600080fd5b50611c6d8a828b01611b2b565b91505092959891949750929550565b600060208284031215611c8e57600080fd5b610a5382611a4e565b60008060408385031215611caa57600080fd5b50508035926020909101359150565b60008060408385031215611ccc57600080fd5b611cd583611a4e565b9150611b0c60208401611a4e565b600181811c90821680611cf757607f821691505b602082108103611d1757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104dd576104dd611d1d565b601f8211156105d657600081815260208120601f850160051c81016020861015611d6d5750805b601f850160051c820191505b81811015611d8c57828155600101611d79565b505050505050565b815167ffffffffffffffff811115611dae57611dae611b15565b611dc281611dbc8454611ce3565b84611d46565b602080601f831160018114611df75760008415611ddf5750858301515b600019600386901b1c1916600185901b178555611d8c565b600085815260208120601f198616915b82811015611e2657888601518255948401946001909101908401611e07565b5085821015611e445787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082611e7157634e487b7160e01b600052601260045260246000fd5b500490565b60008351611e888184602088016119f7565b835190830190611e9c8183602088016119f7565b01949350505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611edd8160178501602088016119f7565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611f0e8160288401602088016119f7565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176104dd576104dd611d1d565b600081611f5657611f56611d1d565b506000190190565b818103818111156104dd576104dd611d1d565b634e487b7160e01b600052603160045260246000fdfe65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862aa26469706673582212207bf66db47d8304edc9b1c21710de9b9134c046e5ce4b3cd35d2ff671073fd68f64736f6c63430008130033",
    "sourceMap": "283:1766:48:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:212:21;;;;;;:::i;:::-;;:::i;:::-;;;470:14:55;;463:22;445:41;;433:2;418:18;634:212:21;;;;;;;;2158:98:26;;;:::i;:::-;;;;;;;:::i;4444:197::-;;;;;;:::i;:::-;;:::i;557:18:48:-;;;;;-1:-1:-1;;;;;557:18:48;;;;;;-1:-1:-1;;;;;1754:32:55;;;1736:51;;1724:2;1709:18;557::48;1590:203:55;3255:106:26;3342:12;;3255:106;;;1944:25:55;;;1932:2;1917:18;3255:106:26;1798:177:55;5203:256:26;;;;;;:::i;:::-;;:::i;4504:129:20:-;;;;;;:::i;:::-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129;4929:145;;;;;;:::i;:::-;;:::i;:::-;;3104:91:26;;;3186:2;3081:36:55;;3069:2;3054:18;3104:91:26;2939:184:55;6038:214:20;;;;;;:::i;:::-;;:::i;5854:234:26:-;;;;;;:::i;:::-;;:::i;2624:175:31:-;;;:::i;1843:202::-;;;;;;:::i;:::-;;:::i;578:89:28:-;;;;;;:::i;:::-;;:::i;1615:84:25:-;1685:7;;;;1615:84;;766:961:48;;;;;;:::i;:::-;;:::i;3419:125:26:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:26;3493:7;3519:18;;;:9;:18;;;;;;;3419:125;973:161:28;;;;;;:::i;:::-;;:::i;2248:169:31:-;;;:::i;1431:151:21:-;;;;;;:::i;:::-;;:::i;3021:145:20:-;;;;;;:::i;:::-;;:::i;2369:102:26:-;;;:::i;2153:49:20:-;;2198:4;2153:49;;6575:427:26;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;438:21:48:-;;;;;;671:30;;;:::i;1750:140:21:-;;;;;;:::i;:::-;;:::i;1110:62:31:-;;1148:24;1110:62;;5354:147:20;;;;;;:::i;:::-;;:::i;611:30:48:-;;;:::i;3987:149:26:-;;;;;;:::i;:::-;;:::i;489:21:48:-;;;;;;1178:62:31;;-1:-1:-1;;;;;;;;;;;1178:62:31;;391:17:48;;;;;;;;;;;;634:212:21;719:4;-1:-1:-1;;;;;;742:57:21;;-1:-1:-1;;;742:57:21;;:97;;;803:36;827:11;803:23;:36::i;:::-;735:104;634:212;-1:-1:-1;;634:212:21:o;2158:98:26:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:38;4581:32:26;719:10:38;4597:7:26;4606:6;4581:8;:32::i;:::-;-1:-1:-1;4630:4:26;;4444:197;-1:-1:-1;;;4444:197:26:o;5203:256::-;5300:4;719:10:38;5356:38:26;5372:4;719:10:38;5387:6:26;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:26;;5203:256;-1:-1:-1;;;;5203:256:26:o;4929:145:20:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;-1:-1:-1;;;;;6133:23:20;;719:10:38;6133:23:20;6125:83;;;;-1:-1:-1;;;6125:83:20;;6588:2:55;6125:83:20;;;6570:21:55;6627:2;6607:18;;;6600:30;6666:34;6646:18;;;6639:62;-1:-1:-1;;;6717:18:55;;;6710:45;6772:19;;6125:83:20;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;5854:234:26:-;5942:4;719:10:38;5996:64:26;719:10:38;6012:7:26;6049:10;6021:25;719:10:38;6012:7:26;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2624:175:31:-;2676:34;-1:-1:-1;;;;;;;;;;;719:10:38;3021:145:20;:::i;2676:34:31:-;2668:104;;;;-1:-1:-1;;;2668:104:31;;7266:2:55;2668:104:31;;;7248:21:55;7305:2;7285:18;;;7278:30;7344:34;7324:18;;;7317:62;7415:27;7395:18;;;7388:55;7460:19;;2668:104:31;7064:421:55;2668:104:31;2782:10;:8;:10::i;:::-;2624:175::o;1843:202::-;1918:34;1148:24;719:10:38;3021:145:20;:::i;1918:34:31:-;1910:101;;;;-1:-1:-1;;;1910:101:31;;7692:2:55;1910:101:31;;;7674:21:55;7731:2;7711:18;;;7704:30;7770:34;7750:18;;;7743:62;-1:-1:-1;;;7821:18:55;;;7814:52;7883:19;;1910:101:31;7490:418:55;1910:101:31;2021:17;2027:2;2031:6;2021:5;:17::i;578:89:28:-;633:27;719:10:38;653:6:28;633:5;:27::i;:::-;578:89;:::o;766:961:48:-;1047:7;1029:15;:25;1021:70;;;;-1:-1:-1;;;1021:70:48;;8115:2:55;1021:70:48;;;8097:21:55;;;8134:18;;;8127:30;8193:34;8173:18;;;8166:62;8245:18;;1021:70:48;7913:356:55;1021:70:48;1102:3;:10;;-1:-1:-1;;;;;;1102:10:48;-1:-1:-1;;;;;1102:10:48;;;;;1122:16;:36;1141:17;1122:16;:36;:::i;:::-;-1:-1:-1;1168:16:48;:36;1187:17;1168:16;:36;:::i;:::-;-1:-1:-1;1214:5:48;:14;;-1:-1:-1;;1214:14:48;;;;;;;;;1238:6;:16;;;1264:6;:16;;;1314:35;;;;;;;;;-1:-1:-1;1314:35:48;;-1:-1:-1;;;1314:35:48;;;;-1:-1:-1;;1314:35:48;;1326:17;;1314:11;:35::i;:::-;1291:58;;1368:34;1380:6;1388:13;1368:11;:34::i;:::-;1359:43;;1421:24;1433:6;1421:24;;;;;;;;;;;;;-1:-1:-1;;;1421:24:48;;;:11;:24::i;:::-;1412:33;;1464:47;1476:6;1484:26;1494:4;1485:6;;:13;;;;:::i;:::-;1484:24;:26::i;:::-;1464:11;:47::i;:::-;1455:56;;1530:40;1542:6;1550:5;;;;;;;;;;;:19;;;;;;;;;;;;;;;-1:-1:-1;;;1550:19:48;;;1464:11;:47::i;1550:19::-;;;;;;;;;;;;;;-1:-1:-1;;;1550:19:48;;;1530:11;:40::i;:::-;1521:49;-1:-1:-1;1581:44:48;2198:4:20;719:10:38;1581::48;:44::i;:::-;1636:37;1148:24:31;719:10:38;1581::48;:44::i;1636:37::-;1683;-1:-1:-1;;;;;;;;;;;719:10:38;1581::48;:44::i;1683:37::-;1011:716;766:961;;;;;;;:::o;973:161:28:-;1049:46;1065:7;719:10:38;1088:6:28;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;2248:169:31:-;2298:34;-1:-1:-1;;;;;;;;;;;719:10:38;3021:145:20;:::i;2298:34:31:-;2290:102;;;;-1:-1:-1;;;2290:102:31;;11034:2:55;2290:102:31;;;11016:21:55;11073:2;11053:18;;;11046:30;11112:34;11092:18;;;11085:62;11183:25;11163:18;;;11156:53;11226:19;;2290:102:31;10832:419:55;2290:102:31;2402:8;:6;:8::i;1431:151:21:-;1521:7;1547:18;;;:12;:18;;;;;:28;;1569:5;1547:21;:28::i;:::-;1540:35;1431:151;-1:-1:-1;;;1431:151:21:o;3021:145:20:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:20;;;;;;;;;;;;;;;3021:145::o;2369:102:26:-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:38;6668:4:26;6749:25;719:10:38;6766:7:26;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:26;;11458:2:55;6784:85:26;;;11440:21:55;11497:2;11477:18;;;11470:30;11536:34;11516:18;;;11509:62;-1:-1:-1;;;11587:18:55;;;11580:35;11632:19;;6784:85:26;11256:401:55;6784:85:26;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:38;3873:28:26;719:10:38;3890:2:26;3894:6;3873:9;:28::i;671:30:48:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1750:140:21:-;1830:7;1856:18;;;:12;:18;;;;;:27;;:25;:27::i;5354:147:20:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;611:30:48:-:0;;;;;;;:::i;3987:149:26:-;-1:-1:-1;;;;;4102:18:26;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;2732:202:20:-;2817:4;-1:-1:-1;;;;;;2840:47:20;;-1:-1:-1;;;2840:47:20;;:87;;-1:-1:-1;;;;;;;;;;937:40:40;;;2891:36:20;829:155:40;10457:340:26;-1:-1:-1;;;;;10558:19:26;;10550:68;;;;-1:-1:-1;;;10550:68:26;;11864:2:55;10550:68:26;;;11846:21:55;11903:2;11883:18;;;11876:30;11942:34;11922:18;;;11915:62;-1:-1:-1;;;11993:18:55;;;11986:34;12037:19;;10550:68:26;11662:400:55;10550:68:26;-1:-1:-1;;;;;10636:21:26;;10628:68;;;;-1:-1:-1;;;10628:68:26;;12269:2:55;10628:68:26;;;12251:21:55;12308:2;12288:18;;;12281:30;12347:34;12327:18;;;12320:62;-1:-1:-1;;;12398:18:55;;;12391:32;12440:19;;10628:68:26;12067:398:55;10628:68:26;-1:-1:-1;;;;;10707:18:26;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1944:25:55;;;10758:32:26;;1917:18:55;10758:32:26;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:26;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:26;;12672:2:55;11297:68:26;;;12654:21:55;12711:2;12691:18;;;12684:30;12750:31;12730:18;;;12723:59;12799:18;;11297:68:26;12470:353:55;11297:68:26;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:26;;7544:68;;;;-1:-1:-1;;;7544:68:26;;13030:2:55;7544:68:26;;;13012:21:55;13069:2;13049:18;;;13042:30;13108:34;13088:18;;;13081:62;-1:-1:-1;;;13159:18:55;;;13152:35;13204:19;;7544:68:26;12828:401:55;7544:68:26;-1:-1:-1;;;;;7630:16:26;;7622:64;;;;-1:-1:-1;;;7622:64:26;;13436:2:55;7622:64:26;;;13418:21:55;13475:2;13455:18;;;13448:30;13514:34;13494:18;;;13487:62;-1:-1:-1;;;13565:18:55;;;13558:33;13608:19;;7622:64:26;13234:399:55;7622:64:26;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;-1:-1:-1;;;;;7768:15:26;;7746:19;7768:15;;;:9;:15;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:26;;13840:2:55;7793:72:26;;;13822:21:55;13879:2;13859:18;;;13852:30;13918:34;13898:18;;;13891:62;-1:-1:-1;;;13969:18:55;;;13962:36;14015:19;;7793:72:26;13638:402:55;7793:72:26;-1:-1:-1;;;;;7899:15:26;;;;;;;:9;:15;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;;;;;7931:6;1944:25:55;;1932:2;1917:18;;1798:177;8163:26:26;;;;;;;;8200:37;4929:145:20;3460:103;3526:30;3537:4;719:10:38;3526::20;:30::i;1978:166:21:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106:18;;;;:12;:18;;;;;:31;;2129:7;2106:22;:31::i;2233:171::-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:18;;;;:12;:18;;;;;:34;;2389:7;2363:25;:34::i;2433:117:25:-;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:25::1;::::0;;2521:22:::1;719:10:38::0;2530:12:25::1;2521:22;::::0;-1:-1:-1;;;;;1754:32:55;;;1736:51;;1724:2;1709:18;2521:22:25::1;;;;;;;2433:117::o:0;8520:535:26:-;-1:-1:-1;;;;;8603:21:26;;8595:65;;;;-1:-1:-1;;;8595:65:26;;14247:2:55;8595:65:26;;;14229:21:55;14286:2;14266:18;;;14259:30;14325:33;14305:18;;;14298:61;14376:18;;8595:65:26;14045:355:55;8595:65:26;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:26;;;;;;:9;:18;;;;;;;;:28;;;;;;8952:37;1944:25:55;;;8952:37:26;;1917:18:55;8952:37:26;;;;;;;6038:214:20;;:::o;9375:659:26:-;-1:-1:-1;;;;;9458:21:26;;9450:67;;;;-1:-1:-1;;;9450:67:26;;14607:2:55;9450:67:26;;;14589:21:55;14646:2;14626:18;;;14619:30;14685:34;14665:18;;;14658:62;-1:-1:-1;;;14736:18:55;;;14729:31;14777:19;;9450:67:26;14405:397:55;9450:67:26;9528:49;9549:7;9566:1;9570:6;9528:20;:49::i;:::-;-1:-1:-1;;;;;9613:18:26;;9588:22;9613:18;;;:9;:18;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:26;;15009:2:55;9641:71:26;;;14991:21:55;15048:2;15028:18;;;15021:30;15087:34;15067:18;;;15060:62;-1:-1:-1;;;15138:18:55;;;15131:32;15180:19;;9641:71:26;14807:398:55;9641:71:26;-1:-1:-1;;;;;9746:18:26;;;;;;:9;:18;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1944:25:55;;;9746:18:26;;;9931:37;;1917:18:55;9931:37:26;;;;;;;4929:145:20;;;:::o;1880:167:48:-;1972:13;2032:2;2036;2015:24;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2001:39;;1880:167;;;;:::o;447:696:39:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:39;-1:-1:-1;604:41:39;-1:-1:-1;765:28:39;;;781:2;765:28;820:280;-1:-1:-1;;851:5:39;-1:-1:-1;;;985:2:39;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:39;820:280;1064:21;-1:-1:-1;1120:6:39;447:696;-1:-1:-1;;;447:696:39:o;6937:110:20:-;7015:25;7026:4;7032:7;7015:10;:25::i;2186:115:25:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:25::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:38::0;;640:96;9563:156:44;9637:7;9687:22;9691:3;9703:5;9687:3;:22::i;9106:115::-;9169:7;9195:19;9203:3;4545:18;;4463:107;2805:211:31;2965:44;2992:4;2998:2;3002:6;2965:26;:44::i;3844:479:20:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:20;;;;;;;;;;-1:-1:-1;;;3970:336:20;;;;;;;:::i;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:20;;;;;;;;;:36;;-1:-1:-1;;7708:36:20;7740:4;7708:36;;;7790:12;719:10:38;;640:96;7790:12:20;-1:-1:-1;;;;;7763:40:20;7781:7;-1:-1:-1;;;;;7763:40:20;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;8305:150:44:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:44;;8398:4;:50::i;7991:234:20:-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:20;;;;;;;;;;:37;;-1:-1:-1;;8112:37:20;;;8168:40;719:10:38;;8112:12:20;;8168:40;;8144:5;8168:40;7991:234;;:::o;8623:156:44:-;8696:4;8719:53;8727:3;-1:-1:-1;;;;;8747:23:44;;8719:7;:53::i;1945:106:25:-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:25;;16730:2:55;2003:41:25;;;16712:21:55;16769:2;16749:18;;;16742:30;-1:-1:-1;;;16788:18:55;;;16781:50;16848:18;;2003:41:25;16528:344:55;10139:916:42;10192:7;;-1:-1:-1;;;10267:17:42;;10263:103;;-1:-1:-1;;;10304:17:42;;;-1:-1:-1;10349:2:42;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:42;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:42;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:42;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:42;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:42;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:42:o;1767:106:25:-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:25;;17079:2:55;1828:38:25;;;17061:21:55;17118:2;17098:18;;;17091:30;-1:-1:-1;;;17137:18:55;;;17130:46;17193:18;;1828:38:25;16877:340:55;4912:118:44;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;4998:25;;4912:118;;;;:::o;1046:234:29:-;1685:7:25;;;;1217:9:29;1209:64;;;;-1:-1:-1;;;1209:64:29;;17556:2:55;1209:64:29;;;17538:21:55;17595:2;17575:18;;;17568:30;17634:34;17614:18;;;17607:62;-1:-1:-1;;;17685:18:55;;;17678:40;17735:19;;1209:64:29;17354:406:55;2407:149:39;2465:13;2497:52;-1:-1:-1;;;;;2509:22:39;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:39;;1918:47;;-1:-1:-1;;;1975:6:39;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:39;;;;;;;;;-1:-1:-1;;;2000:6:39;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:39;;;;;;;;-1:-1:-1;2030:9:39;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:39;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:39;;;;;;;;-1:-1:-1;2141:1:39;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:39;;2162:55;;;;-1:-1:-1;;;2162:55:39;;18281:2:55;2162:55:39;;;18263:21:55;;;18300:18;;;18293:30;18359:34;18339:18;;;18332:62;18411:18;;2162:55:39;18079:356:55;2214:404:44;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:44;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:44;2589:12;;2786:1388;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:44;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;14:286:55;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:55;;209:43;;199:71;;266:1;263;256:12;497:250;582:1;592:113;606:6;603:1;600:13;592:113;;;682:11;;;676:18;663:11;;;656:39;628:2;621:10;592:113;;;-1:-1:-1;;739:1:55;721:16;;714:27;497:250::o;752:396::-;901:2;890:9;883:21;864:4;933:6;927:13;976:6;971:2;960:9;956:18;949:34;992:79;1064:6;1059:2;1048:9;1044:18;1039:2;1031:6;1027:15;992:79;:::i;:::-;1132:2;1111:15;-1:-1:-1;;1107:29:55;1092:45;;;;1139:2;1088:54;;752:396;-1:-1:-1;;752:396:55:o;1153:173::-;1221:20;;-1:-1:-1;;;;;1270:31:55;;1260:42;;1250:70;;1316:1;1313;1306:12;1250:70;1153:173;;;:::o;1331:254::-;1399:6;1407;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;1499:29;1518:9;1499:29;:::i;:::-;1489:39;1575:2;1560:18;;;;1547:32;;-1:-1:-1;;;1331:254:55:o;1980:328::-;2057:6;2065;2073;2126:2;2114:9;2105:7;2101:23;2097:32;2094:52;;;2142:1;2139;2132:12;2094:52;2165:29;2184:9;2165:29;:::i;:::-;2155:39;;2213:38;2247:2;2236:9;2232:18;2213:38;:::i;:::-;2203:48;;2298:2;2287:9;2283:18;2270:32;2260:42;;1980:328;;;;;:::o;2313:180::-;2372:6;2425:2;2413:9;2404:7;2400:23;2396:32;2393:52;;;2441:1;2438;2431:12;2393:52;-1:-1:-1;2464:23:55;;2313:180;-1:-1:-1;2313:180:55:o;2680:254::-;2748:6;2756;2809:2;2797:9;2788:7;2784:23;2780:32;2777:52;;;2825:1;2822;2815:12;2777:52;2861:9;2848:23;2838:33;;2890:38;2924:2;2913:9;2909:18;2890:38;:::i;:::-;2880:48;;2680:254;;;;;:::o;3313:127::-;3374:10;3369:3;3365:20;3362:1;3355:31;3405:4;3402:1;3395:15;3429:4;3426:1;3419:15;3445:719;3488:5;3541:3;3534:4;3526:6;3522:17;3518:27;3508:55;;3559:1;3556;3549:12;3508:55;3595:6;3582:20;3621:18;3658:2;3654;3651:10;3648:36;;;3664:18;;:::i;:::-;3739:2;3733:9;3707:2;3793:13;;-1:-1:-1;;3789:22:55;;;3813:2;3785:31;3781:40;3769:53;;;3837:18;;;3857:22;;;3834:46;3831:72;;;3883:18;;:::i;:::-;3923:10;3919:2;3912:22;3958:2;3950:6;3943:18;4004:3;3997:4;3992:2;3984:6;3980:15;3976:26;3973:35;3970:55;;;4021:1;4018;4011:12;3970:55;4085:2;4078:4;4070:6;4066:17;4059:4;4051:6;4047:17;4034:54;4132:1;4125:4;4120:2;4112:6;4108:15;4104:26;4097:37;4152:6;4143:15;;;;;;3445:719;;;;:::o;4169:1118::-;4309:6;4317;4325;4333;4341;4349;4357;4410:3;4398:9;4389:7;4385:23;4381:33;4378:53;;;4427:1;4424;4417:12;4378:53;4450:29;4469:9;4450:29;:::i;:::-;4440:39;;4529:2;4518:9;4514:18;4501:32;4576:5;4569:13;4562:21;4555:5;4552:32;4542:60;;4598:1;4595;4588:12;4542:60;4621:5;-1:-1:-1;4673:2:55;4658:18;;4645:32;;-1:-1:-1;4724:2:55;4709:18;;4696:32;;-1:-1:-1;4779:3:55;4764:19;;4751:33;4803:18;4833:14;;;4830:34;;;4860:1;4857;4850:12;4830:34;4883:50;4925:7;4916:6;4905:9;4901:22;4883:50;:::i;:::-;4873:60;;4986:3;4975:9;4971:19;4958:33;4942:49;;5016:2;5006:8;5003:16;5000:36;;;5032:1;5029;5022:12;5000:36;5055:52;5099:7;5088:8;5077:9;5073:24;5055:52;:::i;:::-;5045:62;;5160:3;5149:9;5145:19;5132:33;5116:49;;5190:2;5180:8;5177:16;5174:36;;;5206:1;5203;5196:12;5174:36;;5229:52;5273:7;5262:8;5251:9;5247:24;5229:52;:::i;:::-;5219:62;;;4169:1118;;;;;;;;;;:::o;5292:186::-;5351:6;5404:2;5392:9;5383:7;5379:23;5375:32;5372:52;;;5420:1;5417;5410:12;5372:52;5443:29;5462:9;5443:29;:::i;5483:248::-;5551:6;5559;5612:2;5600:9;5591:7;5587:23;5583:32;5580:52;;;5628:1;5625;5618:12;5580:52;-1:-1:-1;;5651:23:55;;;5721:2;5706:18;;;5693:32;;-1:-1:-1;5483:248:55:o;5736:260::-;5804:6;5812;5865:2;5853:9;5844:7;5840:23;5836:32;5833:52;;;5881:1;5878;5871:12;5833:52;5904:29;5923:9;5904:29;:::i;:::-;5894:39;;5952:38;5986:2;5975:9;5971:18;5952:38;:::i;6001:380::-;6080:1;6076:12;;;;6123;;;6144:61;;6198:4;6190:6;6186:17;6176:27;;6144:61;6251:2;6243:6;6240:14;6220:18;6217:38;6214:161;;6297:10;6292:3;6288:20;6285:1;6278:31;6332:4;6329:1;6322:15;6360:4;6357:1;6350:15;6214:161;;6001:380;;;:::o;6802:127::-;6863:10;6858:3;6854:20;6851:1;6844:31;6894:4;6891:1;6884:15;6918:4;6915:1;6908:15;6934:125;6999:9;;;7020:10;;;7017:36;;;7033:18;;:::i;8400:545::-;8502:2;8497:3;8494:11;8491:448;;;8538:1;8563:5;8559:2;8552:17;8608:4;8604:2;8594:19;8678:2;8666:10;8662:19;8659:1;8655:27;8649:4;8645:38;8714:4;8702:10;8699:20;8696:47;;;-1:-1:-1;8737:4:55;8696:47;8792:2;8787:3;8783:12;8780:1;8776:20;8770:4;8766:31;8756:41;;8847:82;8865:2;8858:5;8855:13;8847:82;;;8910:17;;;8891:1;8880:13;8847:82;;;8851:3;;;8400:545;;;:::o;9121:1352::-;9247:3;9241:10;9274:18;9266:6;9263:30;9260:56;;;9296:18;;:::i;:::-;9325:97;9415:6;9375:38;9407:4;9401:11;9375:38;:::i;:::-;9369:4;9325:97;:::i;:::-;9477:4;;9541:2;9530:14;;9558:1;9553:663;;;;10260:1;10277:6;10274:89;;;-1:-1:-1;10329:19:55;;;10323:26;10274:89;-1:-1:-1;;9078:1:55;9074:11;;;9070:24;9066:29;9056:40;9102:1;9098:11;;;9053:57;10376:81;;9523:944;;9553:663;8347:1;8340:14;;;8384:4;8371:18;;-1:-1:-1;;9589:20:55;;;9707:236;9721:7;9718:1;9715:14;9707:236;;;9810:19;;;9804:26;9789:42;;9902:27;;;;9870:1;9858:14;;;;9737:19;;9707:236;;;9711:3;9971:6;9962:7;9959:19;9956:201;;;10032:19;;;10026:26;-1:-1:-1;;10115:1:55;10111:14;;;10127:3;10107:24;10103:37;10099:42;10084:58;10069:74;;9956:201;-1:-1:-1;;;;;10203:1:55;10187:14;;;10183:22;10170:36;;-1:-1:-1;9121:1352:55:o;10610:217::-;10650:1;10676;10666:132;;10720:10;10715:3;10711:20;10708:1;10701:31;10755:4;10752:1;10745:15;10783:4;10780:1;10773:15;10666:132;-1:-1:-1;10812:9:55;;10610:217::o;15210:496::-;15389:3;15427:6;15421:13;15443:66;15502:6;15497:3;15490:4;15482:6;15478:17;15443:66;:::i;:::-;15572:13;;15531:16;;;;15594:70;15572:13;15531:16;15641:4;15629:17;;15594:70;:::i;:::-;15680:20;;15210:496;-1:-1:-1;;;;15210:496:55:o;15711:812::-;16122:25;16117:3;16110:38;16092:3;16177:6;16171:13;16193:75;16261:6;16256:2;16251:3;16247:12;16240:4;16232:6;16228:17;16193:75;:::i;:::-;-1:-1:-1;;;16327:2:55;16287:16;;;16319:11;;;16312:40;16377:13;;16399:76;16377:13;16461:2;16453:11;;16446:4;16434:17;;16399:76;:::i;:::-;16495:17;16514:2;16491:26;;15711:812;-1:-1:-1;;;;15711:812:55:o;17222:127::-;17283:10;17278:3;17274:20;17271:1;17264:31;17314:4;17311:1;17304:15;17338:4;17335:1;17328:15;17765:168;17838:9;;;17869;;17886:15;;;17880:22;;17866:37;17856:71;;17907:18;;:::i;17938:136::-;17977:3;18005:5;17995:39;;18014:18;;:::i;:::-;-1:-1:-1;;;18050:18:55;;17938:136::o;18440:128::-;18507:9;;;18528:11;;;18525:37;;;18542:18;;:::i;18573:127::-;18634:10;18629:3;18625:20;18622:1;18615:31;18665:4;18662:1;18655:15;18689:4;18686:1;18679:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "MINTER_ROLE()": "d5391393",
    "PAUSER_ROLE()": "e63ab1e9",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "collateralSymbol()": "bf911794",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "dov()": "0af0ebf7",
    "expiry()": "e184c9be",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,bool,uint256,uint256,string,string,string)": "5edabd8b",
    "isPut()": "f3c274a6",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "strike()": "ad8f5008",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "underlyingSymbol()": "d90a730e",
    "unpause()": "3f4ba83a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expiry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dov\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isPut\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_strike\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_underlyingSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_collateralSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_expirySymbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPut\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strike\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/DovReceiptERC20.sol\":\"DovReceiptERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b\",\"dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"src/DovReceiptERC20.sol\":{\"keccak256\":\"0x79d19b31e424f66fd14793f46209a56d55cc4374352e0e852ad17943fbfc513f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://24a60e6f950c7ec951f547b1152e31662f26c59a76634cce0a191b972c4655fc\",\"dweb:/ipfs/QmUE3PmxogkxBSUpBJgm9dPAgEu1ufQ6hNFDsCbZAikvmU\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PAUSER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralSymbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dov",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "expiry",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_dov",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isPut",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "_strike",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_expiry",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_underlyingSymbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_collateralSymbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_expirySymbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isPut",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strike",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingSymbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "mint(address,uint256)": {
            "details": "Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "pause()": {
            "details": "Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "unpause()": {
            "details": "Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/DovReceiptERC20.sol": "DovReceiptERC20"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol": {
        "keccak256": "0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247",
        "urls": [
          "bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b",
          "dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
        "urls": [
          "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
          "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
        "keccak256": "0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b",
        "urls": [
          "bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d",
          "dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol": {
        "keccak256": "0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa",
        "urls": [
          "bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b",
          "dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
        "urls": [
          "bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
          "dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
        ],
        "license": "MIT"
      },
      "src/DovReceiptERC20.sol": {
        "keccak256": "0x79d19b31e424f66fd14793f46209a56d55cc4374352e0e852ad17943fbfc513f",
        "urls": [
          "bzz-raw://24a60e6f950c7ec951f547b1152e31662f26c59a76634cce0a191b972c4655fc",
          "dweb:/ipfs/QmUE3PmxogkxBSUpBJgm9dPAgEu1ufQ6hNFDsCbZAikvmU"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/DovReceiptERC20.sol",
    "id": 50332,
    "exportedSymbols": {
      "AccessControl": [
        43674
      ],
      "AccessControlEnumerable": [
        43799
      ],
      "Context": [
        46462
      ],
      "DovReceiptERC20": [
        50331
      ],
      "ERC165": [
        46715
      ],
      "ERC20": [
        44672
      ],
      "ERC20Burnable": [
        44794
      ],
      "ERC20Pausable": [
        44831
      ],
      "ERC20PresetMinterPauser": [
        44992
      ],
      "EnumerableSet": [
        48311
      ],
      "IAccessControl": [
        43872
      ],
      "IAccessControlEnumerable": [
        43897
      ],
      "IERC165": [
        46727
      ],
      "IERC20": [
        44750
      ],
      "IERC20Metadata": [
        44856
      ],
      "Math": [
        47593
      ],
      "Pausable": [
        44085
      ],
      "SignedMath": [
        47698
      ],
      "Strings": [
        46691
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2011:48",
    "nodes": [
      {
        "id": 50172,
        "nodeType": "PragmaDirective",
        "src": "39:23:48",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 50173,
        "nodeType": "ImportDirective",
        "src": "64:90:48",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50332,
        "sourceUnit": 44993,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50174,
        "nodeType": "ImportDirective",
        "src": "155:60:48",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "openzeppelin-contracts/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50332,
        "sourceUnit": 46692,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50331,
        "nodeType": "ContractDefinition",
        "src": "283:1766:48",
        "nodes": [
          {
            "id": 50179,
            "nodeType": "UsingForDirective",
            "src": "341:26:48",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 50177,
              "name": "Strings",
              "nameLocations": [
                "347:7:48"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46691,
              "src": "347:7:48"
            },
            "typeName": {
              "id": 50178,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "359:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 50181,
            "nodeType": "VariableDeclaration",
            "src": "391:17:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "f3c274a6",
            "mutability": "mutable",
            "name": "isPut",
            "nameLocation": "403:5:48",
            "scope": 50331,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 50180,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "391:4:48",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50183,
            "nodeType": "VariableDeclaration",
            "src": "438:21:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "ad8f5008",
            "mutability": "mutable",
            "name": "strike",
            "nameLocation": "453:6:48",
            "scope": 50331,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50182,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "438:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50185,
            "nodeType": "VariableDeclaration",
            "src": "489:21:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "e184c9be",
            "mutability": "mutable",
            "name": "expiry",
            "nameLocation": "504:6:48",
            "scope": 50331,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50184,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "489:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50187,
            "nodeType": "VariableDeclaration",
            "src": "557:18:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "0af0ebf7",
            "mutability": "mutable",
            "name": "dov",
            "nameLocation": "572:3:48",
            "scope": 50331,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 50186,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "557:7:48",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50189,
            "nodeType": "VariableDeclaration",
            "src": "611:30:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "d90a730e",
            "mutability": "mutable",
            "name": "underlyingSymbol",
            "nameLocation": "625:16:48",
            "scope": 50331,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 50188,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "611:6:48",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50191,
            "nodeType": "VariableDeclaration",
            "src": "671:30:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "bf911794",
            "mutability": "mutable",
            "name": "collateralSymbol",
            "nameLocation": "685:16:48",
            "scope": 50331,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 50190,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "671:6:48",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50199,
            "nodeType": "FunctionDefinition",
            "src": "708:52:48",
            "nodes": [],
            "body": {
              "id": 50198,
              "nodeType": "Block",
              "src": "753:7:48",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "",
                    "id": 50194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "746:2:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  {
                    "hexValue": "",
                    "id": 50195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "750:2:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  }
                ],
                "id": 50196,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 50193,
                  "name": "ERC20PresetMinterPauser",
                  "nameLocations": [
                    "722:23:48"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44992,
                  "src": "722:23:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "722:31:48"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 50192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "719:2:48"
            },
            "returnParameters": {
              "id": 50197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "753:0:48"
            },
            "scope": 50331,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50310,
            "nodeType": "FunctionDefinition",
            "src": "766:961:48",
            "nodes": [],
            "body": {
              "id": 50309,
              "nodeType": "Block",
              "src": "1011:716:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 50217,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1029:5:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 50218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1035:9:48",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1029:15:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 50219,
                          "name": "_expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50207,
                          "src": "1047:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1029:25:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e2774206465706c6f7920616e206578706972656420636f6e7472616374",
                        "id": 50221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1056:34:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94ce9c546633aa0dbfda18d179e4cbb55d5dc68cdf9dae3630c36f60558f75bd",
                          "typeString": "literal_string \"Can't deploy an expired contract\""
                        },
                        "value": "Can't deploy an expired contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94ce9c546633aa0dbfda18d179e4cbb55d5dc68cdf9dae3630c36f60558f75bd",
                          "typeString": "literal_string \"Can't deploy an expired contract\""
                        }
                      ],
                      "id": 50216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1021:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1021:70:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50223,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:70:48"
                },
                {
                  "expression": {
                    "id": 50226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50224,
                      "name": "dov",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50187,
                      "src": "1102:3:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50225,
                      "name": "_dov",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50201,
                      "src": "1108:4:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1102:10:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50227,
                  "nodeType": "ExpressionStatement",
                  "src": "1102:10:48"
                },
                {
                  "expression": {
                    "id": 50230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50228,
                      "name": "underlyingSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50189,
                      "src": "1122:16:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50229,
                      "name": "_underlyingSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50209,
                      "src": "1141:17:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1122:36:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 50231,
                  "nodeType": "ExpressionStatement",
                  "src": "1122:36:48"
                },
                {
                  "expression": {
                    "id": 50234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50232,
                      "name": "collateralSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50191,
                      "src": "1168:16:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50233,
                      "name": "_collateralSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50211,
                      "src": "1187:17:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1168:36:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 50235,
                  "nodeType": "ExpressionStatement",
                  "src": "1168:36:48"
                },
                {
                  "expression": {
                    "id": 50238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50236,
                      "name": "isPut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50181,
                      "src": "1214:5:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50237,
                      "name": "_isPut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50203,
                      "src": "1222:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1214:14:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50239,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:14:48"
                },
                {
                  "expression": {
                    "id": 50242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50240,
                      "name": "strike",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50183,
                      "src": "1238:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50241,
                      "name": "_strike",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50205,
                      "src": "1247:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1238:16:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50243,
                  "nodeType": "ExpressionStatement",
                  "src": "1238:16:48"
                },
                {
                  "expression": {
                    "id": 50246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50244,
                      "name": "expiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50185,
                      "src": "1264:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50245,
                      "name": "_expiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50207,
                      "src": "1273:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1264:16:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50247,
                  "nodeType": "ExpressionStatement",
                  "src": "1264:16:48"
                },
                {
                  "assignments": [
                    50249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50249,
                      "mutability": "mutable",
                      "name": "symbol",
                      "nameLocation": "1305:6:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 50309,
                      "src": "1291:20:48",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 50248,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1291:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50254,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50251,
                        "name": "_underlyingSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50209,
                        "src": "1326:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "2d",
                        "id": 50252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1345:3:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                          "typeString": "literal_string \"-\""
                        },
                        "value": "-"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                          "typeString": "literal_string \"-\""
                        }
                      ],
                      "id": 50250,
                      "name": "concatenate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50330,
                      "src": "1314:11:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 50253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:35:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1291:58:48"
                },
                {
                  "expression": {
                    "id": 50260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50255,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50249,
                      "src": "1359:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50257,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50249,
                          "src": "1380:6:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 50258,
                          "name": "_expirySymbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50213,
                          "src": "1388:13:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 50256,
                        "name": "concatenate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50330,
                        "src": "1368:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (string memory,string memory) pure returns (string memory)"
                        }
                      },
                      "id": 50259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1368:34:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1359:43:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 50261,
                  "nodeType": "ExpressionStatement",
                  "src": "1359:43:48"
                },
                {
                  "expression": {
                    "id": 50267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50262,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50249,
                      "src": "1412:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50264,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50249,
                          "src": "1433:6:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "2d",
                          "id": 50265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1441:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                            "typeString": "literal_string \"-\""
                          },
                          "value": "-"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                            "typeString": "literal_string \"-\""
                          }
                        ],
                        "id": 50263,
                        "name": "concatenate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50330,
                        "src": "1421:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (string memory,string memory) pure returns (string memory)"
                        }
                      },
                      "id": 50266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1421:24:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1412:33:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 50268,
                  "nodeType": "ExpressionStatement",
                  "src": "1412:33:48"
                },
                {
                  "expression": {
                    "id": 50279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50269,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50249,
                      "src": "1455:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50271,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50249,
                          "src": "1476:6:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 50274,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 50272,
                                    "name": "strike",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 50183,
                                    "src": "1485:6:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "31653138",
                                    "id": 50273,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1494:4:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    },
                                    "value": "1e18"
                                  },
                                  "src": "1485:13:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 50275,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1484:15:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 50276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1500:8:48",
                            "memberName": "toString",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46521,
                            "src": "1484:24:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (string memory)"
                            }
                          },
                          "id": 50277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1484:26:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 50270,
                        "name": "concatenate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50330,
                        "src": "1464:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (string memory,string memory) pure returns (string memory)"
                        }
                      },
                      "id": 50278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1464:47:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1455:56:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 50280,
                  "nodeType": "ExpressionStatement",
                  "src": "1455:56:48"
                },
                {
                  "expression": {
                    "id": 50289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50281,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50249,
                      "src": "1521:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50283,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50249,
                          "src": "1542:6:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "condition": {
                            "id": 50284,
                            "name": "isPut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50181,
                            "src": "1550:5:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "hexValue": "2d43",
                            "id": 50286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1565:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_918d0ec067b619f97b58d18aad125733e1dfc44d150334bdf311f32a528091d5",
                              "typeString": "literal_string \"-C\""
                            },
                            "value": "-C"
                          },
                          "id": 50287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "1550:19:48",
                          "trueExpression": {
                            "hexValue": "2d50",
                            "id": 50285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1558:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_fe19239903a590c749ef5962492b9217b0ac5fd19b2e5c772d1200e99b979c85",
                              "typeString": "literal_string \"-P\""
                            },
                            "value": "-P"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 50282,
                        "name": "concatenate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50330,
                        "src": "1530:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (string memory,string memory) pure returns (string memory)"
                        }
                      },
                      "id": 50288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1530:40:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1521:49:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 50290,
                  "nodeType": "ExpressionStatement",
                  "src": "1521:49:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50292,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43386,
                        "src": "1592:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 50293,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46452,
                          "src": "1612:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 50294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1612:12:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50291,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43582,
                      "src": "1581:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 50295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1581:44:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50296,
                  "nodeType": "ExpressionStatement",
                  "src": "1581:44:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50298,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44877,
                        "src": "1647:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 50299,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46452,
                          "src": "1660:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 50300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1660:12:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50297,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43582,
                      "src": "1636:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 50301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1636:37:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50302,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:37:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50304,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44882,
                        "src": "1694:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 50305,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46452,
                          "src": "1707:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 50306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1707:12:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50303,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43582,
                      "src": "1683:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 50307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1683:37:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50308,
                  "nodeType": "ExpressionStatement",
                  "src": "1683:37:48"
                }
              ]
            },
            "functionSelector": "5edabd8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "775:10:48",
            "parameters": {
              "id": 50214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50201,
                  "mutability": "mutable",
                  "name": "_dov",
                  "nameLocation": "803:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 50310,
                  "src": "795:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50203,
                  "mutability": "mutable",
                  "name": "_isPut",
                  "nameLocation": "822:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 50310,
                  "src": "817:11:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 50202,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "817:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50205,
                  "mutability": "mutable",
                  "name": "_strike",
                  "nameLocation": "846:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 50310,
                  "src": "838:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50207,
                  "mutability": "mutable",
                  "name": "_expiry",
                  "nameLocation": "871:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 50310,
                  "src": "863:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50209,
                  "mutability": "mutable",
                  "name": "_underlyingSymbol",
                  "nameLocation": "902:17:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 50310,
                  "src": "888:31:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50208,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50211,
                  "mutability": "mutable",
                  "name": "_collateralSymbol",
                  "nameLocation": "943:17:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 50310,
                  "src": "929:31:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50210,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50213,
                  "mutability": "mutable",
                  "name": "_expirySymbol",
                  "nameLocation": "984:13:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 50310,
                  "src": "970:27:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50212,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "785:218:48"
            },
            "returnParameters": {
              "id": 50215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1011:0:48"
            },
            "scope": 50331,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50330,
            "nodeType": "FunctionDefinition",
            "src": "1880:167:48",
            "nodes": [],
            "body": {
              "id": 50329,
              "nodeType": "Block",
              "src": "1991:56:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50324,
                            "name": "_a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50313,
                            "src": "2032:2:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 50325,
                            "name": "_b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50315,
                            "src": "2036:2:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 50322,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2015:3:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 50323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2019:12:48",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2015:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 50326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2015:24:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 50321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2008:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 50320,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2008:6:48",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 50327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2008:32:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 50319,
                  "id": 50328,
                  "nodeType": "Return",
                  "src": "2001:39:48"
                }
              ]
            },
            "documentation": {
              "id": 50311,
              "nodeType": "StructuredDocumentation",
              "src": "1733:142:48",
              "text": " code from dopex\n @notice Returns a concatenated string of a and b\n @param _a string a\n @param _b string b"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "concatenate",
            "nameLocation": "1889:11:48",
            "parameters": {
              "id": 50316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50313,
                  "mutability": "mutable",
                  "name": "_a",
                  "nameLocation": "1915:2:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 50330,
                  "src": "1901:16:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50312,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1901:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50315,
                  "mutability": "mutable",
                  "name": "_b",
                  "nameLocation": "1933:2:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 50330,
                  "src": "1919:16:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50314,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1919:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1900:36:48"
            },
            "returnParameters": {
              "id": 50319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50318,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50330,
                  "src": "1972:13:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50317,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1972:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1971:15:48"
            },
            "scope": 50331,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50175,
              "name": "ERC20PresetMinterPauser",
              "nameLocations": [
                "311:23:48"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44992,
              "src": "311:23:48"
            },
            "id": 50176,
            "nodeType": "InheritanceSpecifier",
            "src": "311:23:48"
          }
        ],
        "canonicalName": "DovReceiptERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50331,
          44992,
          44831,
          44085,
          44794,
          44672,
          44856,
          44750,
          43799,
          43674,
          46715,
          46727,
          43897,
          43872,
          46462
        ],
        "name": "DovReceiptERC20",
        "nameLocation": "292:15:48",
        "scope": 50332,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 48
}