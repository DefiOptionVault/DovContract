{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyer1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyer2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyer3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dov",
      "outputs": [
        {
          "internalType": "contract DovForTest",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "contract DovReceiptERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBootstrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCreation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testPurchase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSettle_1400",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSettle_1600",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdraw_1400",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdraw_1600",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "writer1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "writer2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "writer3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6007805460ff199081166001908117909255600b805490911682179055601e80546001600160a01b031990811673af88d065e77c8cc2239327c5edb3a432268e583117909155601f805482169092179091556020805482166002179055602180548216600390811790915560228054831660111790556023805483166012179055602480548316601317905560258054909216301790915560c060405260809081526208aa8960eb1b60a052602690620000ba90826200019f565b506040805180820190915260048152635553444360e01b6020820152602790620000e590826200019f565b50348015620000f357600080fd5b506200026b565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200012557607f821691505b6020821081036200014657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200019a57600081815260208120601f850160051c81016020861015620001755750805b601f850160051c820191505b81811015620001965782815560010162000181565b5050505b505050565b81516001600160401b03811115620001bb57620001bb620000fa565b620001d381620001cc845462000110565b846200014c565b602080601f8311600181146200020b5760008415620001f25750858301515b600019600386901b1c1916600185901b17855562000196565b600085815260208120601f198616915b828110156200023c578886015182559484019460019091019084016200021b565b50858210156200025b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61ccdb806200027b6000396000f3fe60806040523480156200001157600080fd5b5060043610620002195760003560e01c806389a302711162000125578063dc5eb6cb11620000af578063f711b162116200007a578063f711b1621462000401578063f851a4401462000415578063fa7626d41462000429578063fa7dfe77146200043757600080fd5b8063dc5eb6cb14620003d9578063e20c9f7114620003e3578063ecb9a10314620003ed578063f080676414620003f757600080fd5b8063bf91179411620000f0578063bf9117941462000398578063c3de84a414620003b1578063cacab1dd14620003c5578063d90a730e14620003cf57600080fd5b806389a302711462000355578063916a17c61462000369578063b5508aa91462000373578063ba414fa6146200037d57600080fd5b80634674f19b11620001a75780636e6e1d4611620001725780636e6e1d46146200031e57806373add44b14620003285780637f924c4e146200033257806385226c81146200033c57600080fd5b80634674f19b14620002c957806350f3057314620002dd5780635c60da1b14620002f157806366d9a9a0146200030557600080fd5b80631ed7831c11620001e85780631ed7831c14620002835780632ade3880146200029c5780633e5e3c2314620002b55780633f7286f414620002bf57600080fd5b80630a9254e4146200021e5780630af0ebf7146200022a57806317e26c59146200025b57806319a7681f146200026f575b600080fd5b6200022862000441565b005b601c546200023e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6023546200023e906001600160a01b031681565b6020546200023e906001600160a01b031681565b6200028d62000879565b60405162000252919062006496565b620002a6620008dd565b60405162000252919062006539565b6200028d62000a2b565b6200028d62000a8d565b601f546200023e906001600160a01b031681565b6024546200023e906001600160a01b031681565b601d546200023e906001600160a01b031681565b6200030f62000aef565b604051620002529190620065ff565b6200022862000bd9565b62000228620011a9565b62000228620017b8565b6200034662001bdc565b604051620002529190620066b6565b601e546200023e906001600160a01b031681565b6200030f62001cb6565b6200034662001da0565b6200038762001e7a565b604051901515815260200162000252565b620003a262001fad565b6040516200025291906200671c565b6022546200023e906001600160a01b031681565b6200022862002043565b620003a2620026bd565b62000228620026cc565b6200028d62002ccf565b6200022862002d31565b6200022862003043565b6021546200023e906001600160a01b031681565b6025546200023e906001600160a01b031681565b600754620003879060ff1681565b62000228620030a1565b601e546040516026916027916001600160a01b0390911690620004649062006453565b620004729392919062006819565b604051809103906000f0801580156200048f573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b03928316179055601f5460405163c88a5e6d60e01b81526000805160206200cbd58339815191529263c88a5e6d92620004f09291169069152d02c7e14af680000090600401620068b8565b600060405180830381600087803b1580156200050b57600080fd5b505af115801562000520573d6000803e3d6000fd5b505060205460405163c88a5e6d60e01b81526000805160206200cbd5833981519152935063c88a5e6d92506200056f916001600160a01b03169069152d02c7e14af680000090600401620068b8565b600060405180830381600087803b1580156200058a57600080fd5b505af11580156200059f573d6000803e3d6000fd5b505060215460405163c88a5e6d60e01b81526000805160206200cbd5833981519152935063c88a5e6d9250620005ee916001600160a01b03169069152d02c7e14af680000090600401620068b8565b600060405180830381600087803b1580156200060957600080fd5b505af11580156200061e573d6000803e3d6000fd5b505060225460405163c88a5e6d60e01b81526000805160206200cbd5833981519152935063c88a5e6d92506200066d916001600160a01b03169069152d02c7e14af680000090600401620068b8565b600060405180830381600087803b1580156200068857600080fd5b505af11580156200069d573d6000803e3d6000fd5b505060235460405163c88a5e6d60e01b81526000805160206200cbd5833981519152935063c88a5e6d9250620006ec916001600160a01b03169069152d02c7e14af680000090600401620068b8565b600060405180830381600087803b1580156200070757600080fd5b505af11580156200071c573d6000803e3d6000fd5b505060245460405163c88a5e6d60e01b81526000805160206200cbd5833981519152935063c88a5e6d92506200076b916001600160a01b03169069152d02c7e14af680000090600401620068b8565b600060405180830381600087803b1580156200078657600080fd5b505af11580156200079b573d6000803e3d6000fd5b5050601e54601f54620007c393506001600160a01b0391821692501664174876e80062003668565b601e54602054620007e7916001600160a01b03908116911664174876e80062003668565b601e546021546200080b916001600160a01b03908116911664174876e80062003668565b601e546022546200082f916001600160a01b03908116911664174876e80062003668565b601e5460235462000853916001600160a01b03908116911664174876e80062003668565b601e5460245462000877916001600160a01b03908116911664174876e80062003668565b565b60606014805480602002602001604051908101604052809291908181526020018280548015620008d357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620008b4575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101562000a2257600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000a0a578382906000526020600020018054620009769062006731565b80601f0160208091040260200160405190810160405280929190818152602001828054620009a49062006731565b8015620009f55780601f10620009c957610100808354040283529160200191620009f5565b820191906000526020600020905b815481529060010190602001808311620009d757829003601f168201915b50505050508152602001906001019062000954565b50505050815250508152602001906001019062000901565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015620008d3576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620008b4575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015620008d3576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620008b4575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101562000a225760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000bc057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000b815790505b5050505050815250508152602001906001019062000b13565b60408051808201825260158152742932b1b2b4b83a10383937bc3c903a30b933b2ba1d60591b602080830191909152601c548351631e6c722760e31b8152935162000c7d946001600160a01b039092169263f363913892600480820193918290030181865afa15801562000c51573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c779190620068e9565b6200367c565b6040805180820190915260118152703237bb1037b83a37b4b7103b30bab63a1d60791b6020820152601c5462000cbd91906001600160a01b03166200367c565b60408051808201825260118152703ab73232b9363cb4b733a9bcb6b137b61d60791b6020820152601c548251636c85398760e11b8152925162000d61936001600160a01b039092169163d90a730e9160048083019260009291908290030181865afa15801562000d31573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000d5b91908101906200697d565b620036c5565b604080518082018252601181527031b7b63630ba32b930b629bcb6b137b61d60791b6020820152601c548251632fe445e560e21b8152925162000dd5936001600160a01b039092169163bf9117949160048083019260009291908290030181865afa15801562000d31573d6000803e3d6000fd5b60408051808201825260138152722222a320aaa62a1020a226a4a7102a292aa29d60691b6020820152601c549151632474521560e21b81526000600482015230602482015262000e7c926001600160a01b0316906391d1485490604401602060405180830381865afa15801562000e50573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e76919062006a2d565b6200370e565b62000fc26026805462000e8f9062006731565b80601f016020809104026020016040519081016040528092919081815260200182805462000ebd9062006731565b801562000f0e5780601f1062000ee25761010080835404028352916020019162000f0e565b820191906000526020600020905b81548152906001019060200180831162000ef057829003601f168201915b5050601c5460408051636c85398760e11b815290516001600160a01b03909216945063d90a730e935060048082019350600092918290030181865afa15801562000f5c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000f8691908101906200697d565b6040518060400160405280601b81526020017f756e6465726c79696e672073796d626f6c206e6f74206d61746368000000000081525062003757565b620011086027805462000fd59062006731565b80601f0160208091040260200160405190810160405280929190818152602001828054620010039062006731565b8015620010545780601f10620010285761010080835404028352916020019162001054565b820191906000526020600020905b8154815290600101906020018083116200103657829003601f168201915b5050601c5460408051632fe445e560e21b815290516001600160a01b03909216945063bf911794935060048082019350600092918290030181865afa158015620010a2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620010cc91908101906200697d565b6040518060400160405280601b81526020017f636f6c6c61746572616c2073796d626f6c206e6f74206d61746368000000000081525062003757565b601c54604051632474521560e21b81526000600482015230602482015262000877916001600160a01b0316906391d1485490604401602060405180830381865afa1580156200115b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001181919062006a2d565b604051806040016040528060098152602001682737b71030b236b4b760b91b815250620037e3565b601e54601f546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562001209573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200122f919062006a4b565b60066040516200124192919062006a65565b60405180910390a1601e546020546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa158015620012a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012cf919062006a4b565b6006604051620012e192919062006aa9565b60405180910390a1601e546021546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562001349573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200136f919062006a4b565b60066040516200138192919062006aed565b60405180910390a16200139d684be4e7267b6ae000006200381c565b601c5460405163ce7fa75d60e01b815260016004820152600060248201819052916001600160a01b03169063ce7fa75d9060440160a060405180830381865afa158015620013ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001415919062006b31565b60200151601f5490915060009062001437906001600160a01b03168262003907565b9050620014a48164e8d4a5100060066200145b688cf23f909c0fa000008762006bc2565b62001467919062006bd8565b62001473919062006bd8565b14604051806040016040528060118152602001700e0dcd840c8decae6dc4ee840dac2e8c6d607b1b815250620037e3565b602054620014bd906001600160a01b0316600162003907565b9050620014ee8164e8d4a510006006620014e1688cf23f909c0fa000008762006bc2565b6200145b90600262006bfb565b60215462001507906001600160a01b0316600262003907565b9050620015388164e8d4a5100060066200152b688cf23f909c0fa000008762006bc2565b6200145b90600362006bfb565b601e54601f546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562001598573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015be919062006a4b565b6040805160608082526017908201527f6166746572207772697465723127732062616c616e63650000000000000000006080820152602081019290925260069082015260a00160405180910390a1601e546020546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa1580156200166c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001692919062006a4b565b6040805160608082526017908201527f6166746572207772697465723227732062616c616e63650000000000000000006080820152602081019290925260069082015260a00160405180910390a1601e546021546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562001740573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001766919062006a4b565b6040805160608082526017908201527f6166746572207772697465723327732062616c616e63650000000000000000006080820152602081019290925260069082015260a00160405180910390a15050565b620017c262003a63565b601e54601f546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562001822573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001848919062006a4b565b6040805160608082526021908201527f4265666f7265204465706f736974207772697465723127732062616c616e63656080820152601d60f91b60a0820152602081019290925260069082015260c00160405180910390a1601f54600090620018c4906001600160a01b031668056bc75e2d6310000062003a77565b601e54601f546040516370a0823160e01b81526001600160a01b0391821660048201529293506000805160206200cbb5833981519152929116906370a0823190602401602060405180830381865afa15801562001925573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200194b919062006a4b565b60408051606080825260209082018190527f4166746572204465706f736974207772697465723127732062616c616e63653a608083015281019290925260069082015260a00160405180910390a1601c546040516303e6695360e11b8152600481018390526000916001600160a01b0316906307ccd2a690602401608060405180830381865afa158015620019e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a0a919062006c15565b905062001a48604051806040016040528060148152602001733bb934ba32a837b9b4ba34b7b7173937bab7321d60611b815250826000015162003c11565b602081810151604080516060808252601590820152743bb934ba32a837b9b4ba34b7b71739ba3934b5b29d60591b608082015292830191909152601282820152516000805160206200cbb58339815191529181900360a00190a16000805160206200cbb58339815191528160400151601260405162001b079291906060808252601f908201527f7772697465506f736974696f6e2e636f6c6c61746572616c416d6f756e743a0060808201526020810192909252604082015260a00190565b60405180910390a162001b56816000015160016040518060400160405280601a81526020017f4552524f523a205772697465506f736974696f6e20726f756e6400000000000081525062003c5a565b62001ba581602001516856bc75e2d6310000006040518060400160405280601b81526020017f4552524f523a205772697465506f736974696f6e20737472696b65000000000081525062003c5a565b62001bd8816040015168056bc75e2d631000006040518060600160405280602581526020016200cc816025913962003c5a565b5050565b60606018805480602002602001604051908101604052809291908181526020016000905b8282101562000a2257838290600052602060002001805462001c229062006731565b80601f016020809104026020016040519081016040528092919081815260200182805462001c509062006731565b801562001ca15780601f1062001c755761010080835404028352916020019162001ca1565b820191906000526020600020905b81548152906001019060200180831162001c8357829003601f168201915b50505050508152602001906001019062001c00565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101562000a225760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562001d8757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162001d485790505b5050505050815250508152602001906001019062001cda565b60606017805480602002602001604051908101604052809291908181526020016000905b8282101562000a2257838290600052602060002001805462001de69062006731565b80601f016020809104026020016040519081016040528092919081815260200182805462001e149062006731565b801562001e655780601f1062001e395761010080835404028352916020019162001e65565b820191906000526020600020905b81548152906001019060200180831162001e4757829003601f168201915b50505050508152602001906001019062001dc4565b600754600090610100900460ff161562001e9d5750600754610100900460ff1690565b60006000805160206200cbd58339815191523b1562001fa8576040516000906000805160206200cbd5833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062001f0a9083906519985a5b195960d21b90602001620068b8565b60408051601f198184030181529082905262001f2a929160200162006c7f565b60408051601f198184030181529082905262001f469162006cb2565b6000604051808303816000865af19150503d806000811462001f85576040519150601f19603f3d011682016040523d82523d6000602084013e62001f8a565b606091505b509150508080602001905181019062001fa4919062006a2d565b9150505b919050565b6027805462001fbc9062006731565b80601f016020809104026020016040519081016040528092919081815260200182805462001fea9062006731565b80156200203b5780601f106200200f576101008083540402835291602001916200203b565b820191906000526020600020905b8154815290600101906020018083116200201d57829003601f168201915b505050505081565b60408051600480825260a08201909252600091602082016080803683370190505090506856bc75e2d6310000008160008151811062002086576200208662006cd0565b60200260200101818152505068537bcb10baf590000081600181518110620020b257620020b262006cd0565b602002602001018181525050685150ae84a8cdf0000081600281518110620020de57620020de62006cd0565b602002602001018181525050684f2591f896a6500000816003815181106200210a576200210a62006cd0565b60209081029190910101526000620021264262093a8062006ce6565b604080518082018252600781526630354f4354323360c81b6020820152601c549151631d47ad9760e21b8152929350916001600160a01b039091169063751eb65c906200217c9086908690869060040162006d39565b600060405180830381600087803b1580156200219757600080fd5b505af1158015620021ac573d6000803e3d6000fd5b505050506000601c60009054906101000a90046001600160a01b03166001600160a01b0316638a19c8bc6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002206573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200222c919062006a4b565b601c546040516303906d2960e11b8152600481018390529192506000916001600160a01b0390911690630720da5290602401600060405180830381865afa1580156200227c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620022a6919081019062006d99565b601c5460405163ce7fa75d60e01b815260048101859052600160248201529192506000916001600160a01b039091169063ce7fa75d9060440160a060405180830381865afa158015620022fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002323919062006b31565b9050620023576040518060400160405280600e81526020016d31bab93932b73a103937bab7321d60911b8152508462003c11565b6200238f6040518060400160405280601081526020016f3937bab7321039ba30b93a2a34b6b29d60811b815250836020015162003c11565b620023c46040518060400160405280600d81526020016c3937bab7321032bc3834b93c9d60991b815250836040015162003c11565b620023f78360016040518060400160405280600d81526020016c1c9bdd5b99081b9bdd081cd95d609a1b81525062003c5a565b620024338260200151426040518060400160405280601381526020017273746172742054696d65206e6f742073616d6560681b81525062003c5a565b60408201516200247f906200244c4262093a8062006ce6565b604051806040016040528060148152602001736578706972792054696d65206e6f742073616d6560601b81525062003c5a565b8160a0015195506000805160206200cbb583398151915286600081518110620024ac57620024ac62006cd0565b60200260200101516012604051620024f19291906060808252600a9082015269737472696b65735b305d60b01b60808201526020810192909252604082015260a00190565b60405180910390a16000805160206200cbb5833981519152866001815181106200251f576200251f62006cd0565b60200260200101516012604051620025649291906060808252600a9082015269737472696b65735b315d60b01b60808201526020810192909252604082015260a00190565b60405180910390a16000805160206200cbb58339815191528660028151811062002592576200259262006cd0565b60200260200101516012604051620025d79291906060808252600a9082015269737472696b65735b325d60b01b60808201526020810192909252604082015260a00190565b60405180910390a16000805160206200cbb58339815191528660038151811062002605576200260562006cd0565b602002602001015160126040516200264a9291906060808252600a9082015269737472696b65735b335d60b01b60808201526020810192909252604082015260a00190565b60405180910390a18051604080516060810190915260238082526200267a91906200cc156020830139826200367c565b620026b460006001600160a01b0316826001600160a01b0316146040518060600160405280602981526020016200cc586029913962003c96565b50505050505050565b6026805462001fbc9062006731565b601e546022546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa1580156200272c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002752919062006a4b565b6040805160608082526017908201527f6265666f72652062757965723127732062616c616e63650000000000000000006080820152602081019290925260069082015260a00160405180910390a1601e546023546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562002800573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002826919062006a4b565b6040805160608082526017908201527f6265666f72652062757965723227732062616c616e63650000000000000000006080820152602081019290925260069082015260a00160405180910390a1601e54602480546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529391909116916370a082319101602060405180830381865afa158015620028d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028f9919062006a4b565b6040805160608082526017908201527f6265666f72652062757965723327732062616c616e63650000000000000000006080820152602081019290925260069082015260a00160405180910390a16200295b684be4e7267b6ae000006200381c565b60225460009062002975906001600160a01b031662003ca3565b9050620029b681680ad78ebc5ac6200000604051806040016040528060118152602001700e0dcd840c8decae6dc4ee840dac2e8c6d607b1b81525062003c5a565b602354620029cd906001600160a01b031662003ca3565b905062002a0e816815af1d78b58c400000604051806040016040528060118152602001700e0dcd840c8decae6dc4ee840dac2e8c6d607b1b81525062003c5a565b60245462002a25906001600160a01b031662003ca3565b905062002a6681686c6b935b8bbd400000604051806040016040528060118152602001700e0dcd840c8decae6dc4ee840dac2e8c6d607b1b81525062003c5a565b601e546022546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562002ac6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002aec919062006a4b565b6040805160608082526016908201527561667465722062757965723127732062616c616e636560501b6080820152602081019290925260069082015260a00160405180910390a1601e546023546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562002b93573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002bb9919062006a4b565b6040805160608082526016908201527561667465722062757965723227732062616c616e636560501b6080820152602081019290925260069082015260a00160405180910390a1601e54602480546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529391909116916370a082319101602060405180830381865afa15801562002c5f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c85919062006a4b565b6040805160608082526016908201527561667465722062757965723327732062616c616e636560501b6080820152602081019290925260069082015260a00160405180910390a150565b60606013805480602002602001604051908101604052809291908181526020018280548015620008d3576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620008b4575050505050905090565b601e54601f546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562002d91573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002db7919062006a4b565b600660405162002dc992919062006a65565b60405180910390a1601e546020546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562002e31573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e57919062006a4b565b600660405162002e6992919062006aa9565b60405180910390a1601e546021546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562002ed1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ef7919062006a4b565b600660405162002f0992919062006aed565b60405180910390a162002f256856bc75e2d6310000006200381c565b601c5460405163ce7fa75d60e01b815260016004820152600060248201819052916001600160a01b03169063ce7fa75d9060440160a060405180830381865afa15801562002f77573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f9d919062006b31565b60200151601f5490915060009062002fbf906001600160a01b03168262003907565b905062002fd98164e8d4a510006200146760068662006bd8565b60205462002ff2906001600160a01b0316600162003907565b90506200300e8164e8d4a5100060066200145b86600262006bfb565b60215462003027906001600160a01b0316600262003907565b9050620015388164e8d4a5100060066200145b86600362006bfb565b620030576856ca569989d86400006200381c565b6022546200306e906001600160a01b031662003f7c565b5060235462003086906001600160a01b031662003f7c565b506024546200309e906001600160a01b031662003f7c565b50565b620030ab62003a63565b601f54620030cd906001600160a01b03166903635c9adc5dea00000062003a77565b50602054620030f0906001600160a01b03166906c6b935b8bbd400000062003a77565b5060215462003113906001600160a01b0316690a2a15d09519be00000062003a77565b5060225460009062003131906001600160a01b03166001836200420b565b90506000805160206200cbb58339815191528160126040516200315692919062006eaa565b60405180910390a1620031a4816802f64846813f5800006040518060400160405280601881526020017708aa4a49ea47440e0e4cadad2eada40dcdee840dac2e8c6d60431b81525062003c5a565b602354620031bf906001600160a01b0316600260006200420b565b90506000805160206200cbb5833981519152816012604051620031e492919062006eaa565b60405180910390a162003232816805ec908d027eb000006040518060400160405280601881526020017708aa4a49ea47440e0e4cadad2eada40dcdee840dac2e8c6d60431b81525062003c5a565b6024546200324d906001600160a01b0316600a60006200420b565b90506000805160206200cbb58339815191528160126040516200327292919062006eaa565b60405180910390a1620032c081681d9ed2c10c797000006040518060400160405280601881526020017708aa4a49ea47440e0e4cadad2eada40dcdee840dac2e8c6d60431b81525062003c5a565b601c5460405163ce7fa75d60e01b815260016004820152600060248201819052916001600160a01b03169063ce7fa75d9060440160a060405180830381865afa15801562003312573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003338919062006b31565b516022546040516370a0823160e01b81526001600160a01b039182166004820152919250600091908316906370a0823190602401602060405180830381865afa1580156200338a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620033b0919062006a4b565b6023546040516370a0823160e01b81526001600160a01b039182166004820152919250600091908416906370a0823190602401602060405180830381865afa15801562003401573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003427919062006a4b565b602480546040516370a0823160e01b81526001600160a01b039182166004820152929350600092908616916370a082319101602060405180830381865afa15801562003477573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200349d919062006a4b565b90506000805160206200cbb5833981519152836012604051620034f392919060608082526010908201526f189d5e595c8c49dcc81c9958d95a5c1d60821b60808201526020810192909252604082015260a00190565b60405180910390a16040805160608082526010908201526f189d5e595c8c89dcc81c9958d95a5c1d60821b60808201526020810184905260128183015290516000805160206200cbb58339815191529181900360a00190a16040805160608082526010908201526f189d5e595c8cc9dcc81c9958d95a5c1d60821b60808201526020810183905260128183015290516000805160206200cbb58339815191529181900360a00190a1620035dd83670de0b6b3a7640000604051806040016040528060158152602001740e4cac6cad2e0e840c8decae6dc4ee840dac2e8c6d605b1b81525062003c5a565b6200361f82671bc16d674ec80000604051806040016040528060158152602001740e4cac6cad2e0e840c8decae6dc4ee840dac2e8c6d605b1b81525062003c5a565b6200366181678ac7230489e80000604051806040016040528060158152602001740e4cac6cad2e0e840c8decae6dc4ee840dac2e8c6d605b1b81525062003c5a565b5050505050565b62003677838383600062004473565b505050565b62001bd882826040516024016200369592919062006edf565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b17905262004678565b62001bd88282604051602401620036de92919062006f0b565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905262004678565b62001bd882826040516024016200372792919062006f3d565b60408051601f198184030181529190526020810180516001600160e01b031663c3b5563560e01b17905262004678565b816040516020016200376a919062006cb2565b604051602081830303815290604052805190602001208360405160200162003793919062006cb2565b604051602081830303815290604052805190602001201462003677576000805160206200cbf583398151915281604051620037cf919062006f63565b60405180910390a162003677838362004699565b8162001bd8576000805160206200cbf58339815191528160405162003809919062006f63565b60405180910390a162001bd882620047c0565b6200382662004838565b601c546040516303906d2960e11b8152600160048201526000916001600160a01b031690630720da5290602401600060405180830381865afa15801562003871573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200389b919081019062006d99565b604090810151601c54915163bf81bf4360e01b8152600481018590529092506001600160a01b039091169063bf81bf4390602401600060405180830381600087803b158015620038ea57600080fd5b505af1158015620038ff573d6000803e3d6000fd5b505050505050565b6040516308b6ac0f60e31b81526001600160a01b0383166004820181905260248201526000906000805160206200cbd5833981519152906345b5607890604401600060405180830381600087803b1580156200396257600080fd5b505af115801562003977573d6000803e3d6000fd5b5050601c54604051627b8a6760e11b8152600481018690526001600160a01b038781166024830152909116925062f714ce91506044015b6020604051808303816000875af1158015620039ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620039f4919062006a4b565b90506000805160206200cc3883398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003a4457600080fd5b505af115801562003a59573d6000803e3d6000fd5b5050505092915050565b62003a6d620048fe565b6200087762004a67565b6040516308b6ac0f60e31b81526001600160a01b0383166004820181905260248201526000906000805160206200cbd5833981519152906345b5607890604401600060405180830381600087803b15801562003ad257600080fd5b505af115801562003ae7573d6000803e3d6000fd5b5050601e54601c546040516370a0823160e01b81526001600160a01b038881166004830152928316945063095ea7b3935091169083906370a0823190602401602060405180830381865afa15801562003b44573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003b6a919062006a4b565b6040518363ffffffff1660e01b815260040162003b89929190620068b8565b6020604051808303816000875af115801562003ba9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003bcf919062006a2d565b50601c54604051638dbdbe6d60e01b815260006004820152602481018490526001600160a01b03858116604483015290911690638dbdbe6d90606401620039ae565b62001bd8828260405160240162003c2a92919062006f94565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b17905262004678565b81831462003677576000805160206200cbf58339815191528160405162003c82919062006f63565b60405180910390a162003677838362004f0a565b62001bd8821582620037e3565b6040516308b6ac0f60e31b81526001600160a01b0382166004820181905260248201526000906000805160206200cbd5833981519152906345b5607890604401600060405180830381600087803b15801562003cfe57600080fd5b505af115801562003d13573d6000803e3d6000fd5b5050601c5460405163ce7fa75d60e01b81526001600482015260006024820181905293506001600160a01b03909116915063ce7fa75d9060440160a060405180830381865afa15801562003d6b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003d91919062006b31565b516040516370a0823160e01b81526001600160a01b0385811660048301529192506000918316906370a0823190602401602060405180830381865afa15801562003ddf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003e05919062006a4b565b601c5460405163095ea7b360e01b81529192506001600160a01b038085169263095ea7b39262003e3c9216908590600401620068b8565b6020604051808303816000875af115801562003e5c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003e82919062006a2d565b50601c54604051631235dd3560e31b81526000600482015260248101839052600160448201526001600160a01b038681166064830152909116906391aee9a8906084015b6020604051808303816000875af115801562003ee6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003f0c919062006a4b565b92506000805160206200cc3883398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003f5c57600080fd5b505af115801562003f71573d6000803e3d6000fd5b505050505050919050565b6040516308b6ac0f60e31b81526001600160a01b0382166004820181905260248201526000906000805160206200cbd5833981519152906345b5607890604401600060405180830381600087803b15801562003fd757600080fd5b505af115801562003fec573d6000803e3d6000fd5b5050601c5460405163ce7fa75d60e01b81526001600482015260006024820181905293506001600160a01b03909116915063ce7fa75d9060440160a060405180830381865afa15801562004044573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200406a919062006b31565b516040516370a0823160e01b81526001600160a01b0385811660048301529192506000918316906370a0823190602401602060405180830381865afa158015620040b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620040de919062006a4b565b601c5460405163095ea7b360e01b81529192506001600160a01b038085169263095ea7b392620041159216908590600401620068b8565b6020604051808303816000875af115801562004135573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200415b919062006a2d565b506000805160206200cc3883398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620041aa57600080fd5b505af1158015620041bf573d6000803e3d6000fd5b5050601c54604051631235dd3560e31b81526000600482015260248101859052600160448201526001600160a01b03888116606483015290911692506391aee9a8915060840162003ec6565b6040516308b6ac0f60e31b81526001600160a01b0384166004820181905260248201526000906000805160206200cbd5833981519152906345b5607890604401600060405180830381600087803b1580156200426657600080fd5b505af11580156200427b573d6000803e3d6000fd5b5050601e54601c546040516370a0823160e01b81526001600160a01b038981166004830152928316945063095ea7b3935091169083906370a0823190602401602060405180830381865afa158015620042d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620042fe919062006a4b565b6040518363ffffffff1660e01b81526004016200431d929190620068b8565b6020604051808303816000875af11580156200433d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004363919062006a2d565b50601c546001600160a01b031663ea3bd5df836200438a86670de0b6b3a764000062006bfb565b6040516001600160e01b031960e085901b168152600481019290925260248201526001600160a01b03871660448201526064016020604051808303816000875af1158015620043dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004403919062006a4b565b90506000805160206200cc3883398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200445357600080fd5b505af115801562004468573d6000803e3d6000fd5b505050509392505050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b1790529151600092871691620044c99162006cb2565b600060405180830381855afa9150503d806000811462004506576040519150601f19603f3d011682016040523d82523d6000602084013e6200450b565b606091505b5091505060008180602001905181019062004527919062006a4b565b905062004561846200455a87620045536370a0823160e01b6200454c600c8d62004fef565b9062005019565b9062005037565b9062005060565b8215620038ff5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691620045ac919062006cb2565b600060405180830381855afa9150503d8060008114620045e9576040519150601f19603f3d011682016040523d82523d6000602084013e620045ee565b606091505b509150506000818060200190518101906200460a919062006a4b565b905082861015620046355762004621868462006bc2565b6200462d908262006bc2565b905062004650565b62004641838762006bc2565b6200464d908262006ce6565b90505b6200466e816200455a6318160ddd60e01b6200454c600c8d62004fef565b5050505050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80604051602001620046ac919062006cb2565b6040516020818303038152906040528051906020012082604051602001620046d5919062006cb2565b604051602081830303815290604052805190602001201462001bd8577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200475e9060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a16000805160206200cbf58339815191528260405162004786919062006fb8565b60405180910390a16000805160206200cbf583398151915281604051620047ae919062006fff565b60405180910390a162001bd86200506c565b806200309e577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620048269060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16200309e6200506c565b6200484262003a63565b601f5462004864906001600160a01b03166903635c9adc5dea00000062003a77565b5060205462004887906001600160a01b03166906c6b935b8bbd400000062003a77565b50602154620048aa906001600160a01b0316690a2a15d09519be00000062003a77565b50602254620048c6906001600160a01b0316600160006200420b565b50602354620048e2906001600160a01b0316600260006200420b565b506024546200309e906001600160a01b0316600a60006200420b565b60408051600480825260a08201909252600091602082016080803683370190505090506856bc75e2d6310000008160008151811062004941576200494162006cd0565b60200260200101818152505068537bcb10baf5900000816001815181106200496d576200496d62006cd0565b602002602001018181525050685150ae84a8cdf000008160028151811062004999576200499962006cd0565b602002602001018181525050684f2591f896a650000081600381518110620049c557620049c562006cd0565b60209081029190910101526000620049e14262093a8062006ce6565b604080518082018252600781526630354f4354323360c81b6020820152601c549151631d47ad9760e21b8152929350916001600160a01b039091169063751eb65c9062004a379086908690869060040162006d39565b600060405180830381600087803b15801562004a5257600080fd5b505af1158015620026b4573d6000803e3d6000fd5b60408051600480825260a08201909252600091602082016080803683370190505090506802f64846813f5800008160008151811062004aaa5762004aaa62006cd0565b602002602001018181525050680202969f8aaf7c00008160018151811062004ad65762004ad662006cd0565b60200260200101818152505068019f5cb86c8f7100008160028151811062004b025762004b0262006cd0565b6020026020010181815250506801473cfd115bb600008160038151811062004b2e5762004b2e62006cd0565b6020908102919091010152601c546040516351ab1b4760e11b81526001600160a01b039091169063a356368e9062004b6b9084906004016200702a565b600060405180830381600087803b15801562004b8657600080fd5b505af115801562004b9b573d6000803e3d6000fd5b5050601c5460405163ce7fa75d60e01b815260016004820181905260006024830181905290945092506001600160a01b039091169063ce7fa75d9060440160a060405180830381865afa15801562004bf7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004c1d919062006b31565b60800151601c5460405163ce7fa75d60e01b815260048101859052600160248201529192506000916001600160a01b039091169063ce7fa75d9060440160a060405180830381865afa15801562004c78573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004c9e919062006b31565b60800151601c5460405163ce7fa75d60e01b815260048101869052600260248201529192506000916001600160a01b039091169063ce7fa75d9060440160a060405180830381865afa15801562004cf9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004d1f919062006b31565b60800151601c5460405163ce7fa75d60e01b815260048101879052600360248201529192506000916001600160a01b039091169063ce7fa75d9060440160a060405180830381865afa15801562004d7a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004da0919062006b31565b60800151905062004dff8660008151811062004dc05762004dc062006cd0565b6020026020010151856040518060400160405280601781526020017611549493d48e881bdc1d1a5bdb88141c9a58d9481cd95d604a1b81525062003c5a565b62004e588660018151811062004e195762004e1962006cd0565b6020026020010151846040518060400160405280601781526020017611549493d48e881bdc1d1a5bdb88141c9a58d9481cd95d604a1b81525062003c5a565b62004eb18660028151811062004e725762004e7262006cd0565b6020026020010151836040518060400160405280601781526020017611549493d48e881bdc1d1a5bdb88141c9a58d9481cd95d604a1b81525062003c5a565b620038ff8660038151811062004ecb5762004ecb62006cd0565b6020026020010151826040518060400160405280601781526020017611549493d48e881bdc1d1a5bdb88141c9a58d9481cd95d604a1b81525062003c5a565b80821462001bd8577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162004f7d9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162004fb691906200703f565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620047ae919062007078565b6005820180546001600160a01b0319166001600160a01b0383161790556000825b90505b92915050565b60038201805463ffffffff191660e083901c17905560008262005010565b6002820180546001810182556000918252602082206001600160a01b0384169101558262005010565b62001bd8828262005170565b6000805160206200cbd58339815191523b156200515f576040516000906000805160206200cbd5833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620050da9083906519985a5b195960d21b90600190602001620070a3565b60408051601f1981840301815290829052620050fa929160200162006c7f565b60408051601f1981840301815290829052620051169162006cb2565b6000604051808303816000865af19150503d806000811462005155576040519150601f19603f3d011682016040523d82523d6000602084013e6200515a565b606091505b505050505b6007805461ff001916610100179055565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b9460009390929091830182828015620051e357602002820191906000526020600020905b815481526020019060010190808311620051ce575b50505050509050600083620051f883620054e0565b6040516020016200520b92919062006c7f565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916200525f918691889101620070c4565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200529a57620052988762005594565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391620052db918791899101620070c4565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162005322919062006cb2565b600060405180830381855afa9150503d80600081146200535f576040519150601f19603f3d011682016040523d82523d6000602084013e62005364565b606091505b509150620053819050816200537b88602062006bfb565b620055a1565b604051630667f9d760e41b8152909250600091506000805160206200cbd58339815191529063667f9d7090620053be908b908790600401620068b8565b602060405180830381865afa158015620053dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005402919062006a4b565b90508082146200542f5760405162461bcd60e51b8152600401620054269062007100565b60405180910390fd5b6040516370ca10bb60e01b81526000805160206200cbd5833981519152906370ca10bb9062005467908b9087908e90600401620070a3565b600060405180830381600087803b1580156200548257600080fd5b505af115801562005497573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff19169055620054cc60028b01600062006461565b896004016000905550505050505050505050565b6060600082516020620054f4919062006bfb565b67ffffffffffffffff8111156200550f576200550f62006907565b6040519080825280601f01601f1916602001820160405280156200553a576020820181803683370190505b50905060005b83518110156200558d57600084828151811062005561576200556162006cd0565b60200260200101519050808260200260200184015250808062005584906200719b565b91505062005540565b5092915050565b600062005013826200562b565b60008060006020855111620055b8578451620055bb565b60205b905060005b818110156200562157620055d681600862006bfb565b86620055e3838862006ce6565b81518110620055f657620055f662006cd0565b01602001516001600160f81b031916901c92909217918062005618816200719b565b915050620055c0565b5090949350505050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200569d57602002820191906000526020600020905b81548152602001906001019080831162005688575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620056e992508591879101620070c4565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562005788576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929162005758918591879101620070c4565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620057968362006326565b604051602001620057a992919062006c7f565b60405160208183030381529060405290506000805160206200cc3883398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200580857600080fd5b505af11580156200581d573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516200583e919062006cb2565b600060405180830381855afa9150503d80600081146200587b576040519150601f19603f3d011682016040523d82523d6000602084013e62005880565b606091505b5091506200589d9050816200589787602062006bfb565b620063d3565b6040516365bc948160e01b81526001600160a01b0389166004820152909250600091506000805160206200cbd5833981519152906365bc9481906024016000604051808303816000875af1158015620058fa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262005924919081019062007224565b509050805160010362005beb5760006000805160206200cc3883398151915260001c6001600160a01b031663667f9d7089846000815181106200596b576200596b62006cd0565b60200260200101516040518363ffffffff1660e01b815260040162005992929190620068b8565b602060405180830381865afa158015620059b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620059d6919062006a4b565b90508062005a3a577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062005a165762005a1662006cd0565b602002602001015160001c60405162005a31929190620068b8565b60405180910390a15b80831462005a5c5760405162461bcd60e51b8152600401620054269062007100565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162005a94929190620070c4565b604051602081830303815290604052805190602001208560008151811062005ac05762005ac062006cd0565b602002602001015160001c60405162005add94939291906200728f565b60405180910390a18160008151811062005afb5762005afb62006cd0565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262005b46918a918c9101620070c4565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162005bb0918a918c9101620070c4565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550620061a9565b600181511115620061385760005b8151811015620061315760006000805160206200cc3883398151915260001c6001600160a01b031663667f9d708a85858151811062005c3c5762005c3c62006cd0565b60200260200101516040518363ffffffff1660e01b815260040162005c63929190620068b8565b602060405180830381865afa15801562005c81573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005ca7919062006a4b565b90508062005d0a577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062005ce65762005ce662006cd0565b602002602001015160001c60405162005d01929190620068b8565b60405180910390a15b83811462005d1957506200611c565b82518119906000805160206200cbd5833981519152906370ca10bb908c9087908790811062005d4c5762005d4c62006cd0565b6020026020010151846040518463ffffffff1660e01b815260040162005d7593929190620070a3565b600060405180830381600087803b15801562005d9057600080fd5b505af115801562005da5573d6000803e3d6000fd5b50505050600060608b6001600160a01b03168860405162005dc7919062006cb2565b600060405180830381855afa9150503d806000811462005e04576040519150601f19603f3d011682016040523d82523d6000602084013e62005e09565b606091505b50909250905062005e2181620058978c602062006bfb565b96505080801562005e3157508186145b1562006084577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162005e6f929190620070c4565b6040516020818303038152906040528051906020012088888151811062005e9a5762005e9a62006cd0565b602002602001015160001c60405162005eb794939291906200728f565b60405180910390a184848151811062005ed45762005ed462006cd0565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262005f1f918d918f9101620070c4565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c60405160200162005fac929190620070c4565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206200cc3883398151915260001c6001600160a01b03166370ca10bb8c8787815181106200601e576200601e62006cd0565b6020026020010151866040518463ffffffff1660e01b81526004016200604793929190620070a3565b600060405180830381600087803b1580156200606257600080fd5b505af115801562006077573d6000803e3d6000fd5b5050505050505062006131565b6000805160206200cc3883398151915260001c6001600160a01b03166370ca10bb8c878781518110620060bb57620060bb62006cd0565b6020026020010151866040518463ffffffff1660e01b8152600401620060e493929190620070a3565b600060405180830381600087803b158015620060ff57600080fd5b505af115801562006114573d6000803e3d6000fd5b505050505050505b8062006128816200719b565b91505062005bf9565b50620061a9565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162005426565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620061ed9188918a9101620070c4565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200627c5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162005426565b6005890180546001600160a01b031916905560038901805463ffffffff19169055620062ad60028a01600062006461565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620062f39188918a9101620070c4565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b60606000825160206200633a919062006bfb565b67ffffffffffffffff81111562006355576200635562006907565b6040519080825280601f01601f19166020018201604052801562006380576020820181803683370190505b50905060005b83518110156200558d576000848281518110620063a757620063a762006cd0565b602002602001015190508082602002602001840152508080620063ca906200719b565b91505062006386565b60008060006020855111620063ea578451620063ed565b60205b905060005b8181101562005621576200640881600862006bfb565b8662006415838862006ce6565b8151811062006428576200642862006cd0565b01602001516001600160f81b031916901c9290921791806200644a816200719b565b915050620063f2565b6158f580620072c083390190565b50805460008255906000526020600020908101906200309e91905b808211156200649257600081556001016200647c565b5090565b6020808252825182820181905260009190848201906040850190845b81811015620064d95783516001600160a01b031683529284019291840191600101620064b2565b50909695505050505050565b60005b8381101562006502578181015183820152602001620064e8565b50506000910152565b6000815180845262006525816020860160208601620064e5565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015620065ef57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015620065d857605f19898503018352620065c58486516200650b565b948e01949350918d0191600101620065a6565b505050978a01979450509188019160010162006560565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620066a757898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620066915783516001600160e01b0319168252928b019260019290920191908b019062006665565b50978a0197955050509187019160010162006627565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200670f57603f19888603018452620066fc8583516200650b565b94509285019290850190600101620066dd565b5092979650505050505050565b6020815260006200501060208301846200650b565b600181811c908216806200674657607f821691505b6020821081036200676757634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c90808316806200678857607f831692505b60208084108203620067aa57634e487b7160e01b600052602260045260246000fd5b83885260208801828015620067c85760018114620067df576200680c565b60ff198716825285151560051b820197506200680c565b60008981526020902060005b878110156200680657815484820152908601908401620067eb565b83019850505b5050505050505092915050565b60a08152601960a08201527f446f76205765656b6c792045544820507574204f7074696f6e0000000000000060c082015260e06020820152600e60e08201526d15d15152d3164b5155120b54155560921b610100820152600061012080604084015262006889818401876200676d565b905082810360608401526200689f81866200676d565b91505060018060a01b0383166080830152949350505050565b6001600160a01b03929092168252602082015260400190565b80516001600160a01b038116811462001fa857600080fd5b600060208284031215620068fc57600080fd5b6200501082620068d1565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171562006943576200694362006907565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171562006975576200697562006907565b604052919050565b6000602082840312156200699057600080fd5b815167ffffffffffffffff80821115620069a957600080fd5b818401915084601f830112620069be57600080fd5b815181811115620069d357620069d362006907565b620069e8601f8201601f191660200162006949565b915080825285602082850101111562006a0057600080fd5b62006a13816020840160208601620064e5565b50949350505050565b8051801515811462001fa857600080fd5b60006020828403121562006a4057600080fd5b620050108262006a1c565b60006020828403121562006a5e57600080fd5b5051919050565b60608082526018908201527f6265666f7265207772697465723127732062616c616e6365000000000000000060808201526020810192909252604082015260a00190565b60608082526018908201527f6265666f7265207772697465723227732062616c616e6365000000000000000060808201526020810192909252604082015260a00190565b60608082526018908201527f6265666f7265207772697465723327732062616c616e6365000000000000000060808201526020810192909252604082015260a00190565b600060a0828403121562006b4457600080fd5b60405160a0810181811067ffffffffffffffff8211171562006b6a5762006b6a62006907565b60405262006b7883620068d1565b8152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b634e487b7160e01b600052601160045260246000fd5b8181038181111562005013576200501362006bac565b60008262006bf657634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141762005013576200501362006bac565b60006080828403121562006c2857600080fd5b6040516080810181811067ffffffffffffffff8211171562006c4e5762006c4e62006907565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b6001600160e01b031983168152815160009062006ca4816004850160208701620064e5565b919091016004019392505050565b6000825162006cc6818460208701620064e5565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b8082018082111562005013576200501362006bac565b600081518084526020808501945080840160005b8381101562006d2e5781518752958201959082019060010162006d10565b509495945050505050565b60608152600062006d4e606083018662006cfc565b846020840152828103604084015262006d6881856200650b565b9695505050505050565b600067ffffffffffffffff82111562006d8f5762006d8f62006907565b5060051b60200190565b6000602080838503121562006dad57600080fd5b825167ffffffffffffffff8082111562006dc657600080fd5b9084019060c0828703121562006ddb57600080fd5b62006de56200691d565b62006df08362006a1c565b8152838301518482015260408301516040820152606083015160608201526080830151608082015260a08301518281111562006e2b57600080fd5b80840193505086601f84011262006e4157600080fd5b8251915062006e5a62006e548362006d72565b62006949565b82815260059290921b8301840191848101908884111562006e7a57600080fd5b938501935b8385101562006e9a5784518252938501939085019062006e7f565b60a0830152509695505050505050565b6060808252600e908201526d3830b4b2b210383932b6b4bab69d60911b60808201526020810192909252604082015260a00190565b60408152600062006ef460408301856200650b565b905060018060a01b03831660208301529392505050565b60408152600062006f2060408301856200650b565b828103602084015262006f3481856200650b565b95945050505050565b60408152600062006f5260408301856200650b565b905082151560208301529392505050565b60408152600560408201526422b93937b960d91b60608201526080602082015260006200501060808301846200650b565b60408152600062006fa960408301856200650b565b90508260208301529392505050565b60408152600062006fe360408301600a8152690808080808081319599d60b21b602082015260400190565b828103602084015262006ff781856200650b565b949350505050565b60408152600062006fe360408301600a8152690808080808149a59da1d60b21b602082015260400190565b60208152600062005010602083018462006cfc565b6040815260006200706a60408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b6040815260006200706a60408301600a8152690808080808149a59da1d60b21b602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b825160009082906020808701845b83811015620070f057815185529382019390820190600101620070d2565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b600060018201620071b057620071b062006bac565b5060010190565b600082601f830112620071c957600080fd5b81516020620071dc62006e548362006d72565b82815260059290921b84018101918181019086841115620071fc57600080fd5b8286015b8481101562007219578051835291830191830162007200565b509695505050505050565b600080604083850312156200723857600080fd5b825167ffffffffffffffff808211156200725157600080fd5b6200725f86838701620071b7565b935060208501519150808211156200727657600080fd5b506200728585828601620071b7565b9150509250929050565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60806040523480156200001157600080fd5b50604051620058f5380380620058f583398101604081905262000034916200027d565b84846000620000448382620003e9565b506001620000538282620003e9565b506200006591506000905033620000f6565b6008620000738482620003e9565b506009620000828382620003e9565b50600780546001600160a01b0319166001600160a01b038316179055604051620000ac90620001aa565b604051809103906000f080158015620000c9573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039290921691909117905550620004b59350505050565b62000102828262000106565b5050565b60008281526006602090815260408083206001600160a01b038516845290915290205460ff16620001025760008281526006602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620001663390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b612371806200358483390190565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001e057600080fd5b81516001600160401b0380821115620001fd57620001fd620001b8565b604051601f8301601f19908116603f01168101908282118183101715620002285762000228620001b8565b816040528381526020925086838588010111156200024557600080fd5b600091505b838210156200026957858201830151818301840152908201906200024a565b600093810190920192909252949350505050565b600080600080600060a086880312156200029657600080fd5b85516001600160401b0380821115620002ae57600080fd5b620002bc89838a01620001ce565b96506020880151915080821115620002d357600080fd5b620002e189838a01620001ce565b95506040880151915080821115620002f857600080fd5b6200030689838a01620001ce565b945060608801519150808211156200031d57600080fd5b506200032c88828901620001ce565b608088015190935090506001600160a01b03811681146200034c57600080fd5b809150509295509295909350565b600181811c908216806200036f57607f821691505b6020821081036200039057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003e457600081815260208120601f850160051c81016020861015620003bf5750805b601f850160051c820191505b81811015620003e057828155600101620003cb565b5050505b505050565b81516001600160401b03811115620004055762000405620001b8565b6200041d816200041684546200035a565b8462000396565b602080601f8311600181146200045557600084156200043c5750858301515b600019600386901b1c1916600185901b178555620003e0565b600085815260208120601f198616915b82811015620004865788860151825594840194600190910190840162000465565b5085821015620004a55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6130bf80620004c56000396000f3fe608060405234801561001057600080fd5b50600436106102105760003560e01c80638dbdbe6d11610125578063bf81bf43116100ad578063d547741f1161007c578063d547741f146104f9578063d90a730e1461050c578063e985e9c514610514578063ea3bd5df14610550578063f36391381461056357600080fd5b8063bf81bf4314610472578063bf91179414610485578063c87b56dd1461048d578063ce7fa75d146104a057600080fd5b8063a217fddf116100f4578063a217fddf1461041e578063a22cb46514610426578063a356368e14610439578063b2016bd41461044c578063b88d4fde1461045f57600080fd5b80638dbdbe6d146103dd57806391aee9a8146103f057806391d148541461040357806395d89b411461041657600080fd5b8063248a9ca3116101a857806342966c681161017757806342966c68146103885780636352211e1461039b57806370a08231146103ae578063751eb65c146103c15780638a19c8bc146103d457600080fd5b8063248a9ca31461032c5780632f2ff15d1461034f57806336568abe1461036257806342842e0e1461037557600080fd5b806307ccd2a6116101e457806307ccd2a614610293578063081812fc146102d9578063095ea7b31461030457806323b872dd1461031957600080fd5b8062f714ce1461021557806301ffc9a71461023b57806306fdde031461025e5780630720da5214610273575b600080fd5b610228610223366004612736565b610576565b6040519081526020015b60405180910390f35b61024e610249366004612778565b610765565b6040519015158152602001610232565b610266610776565b60405161023291906127e5565b6102866102813660046127f8565b610808565b6040516102329190612811565b6102a66102a13660046127f8565b6108eb565b60405161023291908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b6102ec6102e73660046127f8565b61095b565b6040516001600160a01b039091168152602001610232565b610317610312366004612898565b610982565b005b6103176103273660046128c2565b610a9c565b61022861033a3660046127f8565b60009081526006602052604090206001015490565b61031761035d366004612736565b610ace565b610317610370366004612736565b610af3565b6103176103833660046128c2565b610b71565b6103176103963660046127f8565b610b8c565b6102ec6103a93660046127f8565b610bbd565b6102286103bc3660046128fe565b610c1d565b6103176103cf366004612a38565b610ca3565b610228600b5481565b6102286103eb366004612ab9565b610e30565b6102286103fe366004612aee565b611008565b61024e610411366004612736565b611251565b61026661127c565b610228600081565b610317610434366004612b3b565b61128b565b610317610447366004612b72565b611296565b6007546102ec906001600160a01b031681565b61031761046d366004612ba7565b611304565b6103176104803660046127f8565b61133c565b610266611379565b61026661049b3660046127f8565b611407565b6104b36104ae366004612c23565b61147b565b604051610232919081516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080918201519181019190915260a00190565b610317610507366004612736565b611515565b61026661153a565b61024e610522366004612c45565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61022861055e366004612ab9565b611547565b600a546102ec906001600160a01b031681565b600061058061186a565b6000838152600e602090815260408083208054600180830154600380850154600295860154858a52600c8952878a208084015490880154600d8b52898c20848d52909a52979099209384015491840154939095015493979196949591949193919290916105ec886118cd565b6105f5856118cd565b6105fe8c610b8c565b600061060a8385612c85565b61061c88670de0b6b3a7640000612c98565b6106269190612caf565b905060008987101561067f5760008a610647670de0b6b3a764000086612c98565b6106519190612caf565b9050670de0b6b3a7640000816106678a8e612c85565b6106719190612c98565b61067b9190612caf565b9150505b64e8d4a51000670de0b6b3a7640000836106998489612c85565b6106a39190612c98565b6106ad9190612caf565b6106b79190612caf565b9b50600760009054906101000a90046001600160a01b03166001600160a01b031663a9059cbb8e8e6040518363ffffffff1660e01b81526004016107109291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af115801561072f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107539190612cd1565b50505050505050505050505092915050565b60006107708261191d565b92915050565b60606000805461078590612cee565b80601f01602080910402602001604051908101604052809291908181526020018280546107b190612cee565b80156107fe5780601f106107d3576101008083540402835291602001916107fe565b820191906000526020600020905b8154815290600101906020018083116107e157829003601f168201915b5050505050905090565b6108436040518060c0016040528060001515815260200160008152602001600081526020016000815260200160008152602001606081525090565b6000828152600c6020908152604091829020825160c081018452815460ff161515815260018201548184015260028201548185015260038201546060820152600482015460808201526005820180548551818602810186019096528086529194929360a086019392908301828280156108db57602002820191906000526020600020905b8154815260200190600101908083116108c7575b5050505050815250509050919050565b6109166040518060800160405280600081526020016000815260200160008152602001600081525090565b506000908152600e6020908152604091829020825160808101845281548152600182015492810192909252600281015492820192909252600390910154606082015290565b600061096682611942565b506000908152600460205260409020546001600160a01b031690565b600061098d82610bbd565b9050806001600160a01b0316836001600160a01b0316036109ff5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610a1b5750610a1b8133610522565b610a8d5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016109f6565b610a9783836119a1565b505050565b610aa7335b82611a0f565b610ac35760405162461bcd60e51b81526004016109f690612d28565b610a97838383611a8e565b600082815260066020526040902060010154610ae981611bf2565b610a978383611bfc565b6001600160a01b0381163314610b635760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016109f6565b610b6d8282611c82565b5050565b610a9783838360405180602001604052806000815250611304565b610b9533610aa1565b610bb15760405162461bcd60e51b81526004016109f690612d28565b610bba81611ce9565b50565b6000818152600260205260408120546001600160a01b0316806107705760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016109f6565b60006001600160a01b038216610c875760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016109f6565b506001600160a01b031660009081526003602052604090205490565b6000610cae81611bf2565b6000600b546001610cbf9190612d75565b600b5490915015610ce857600b546000908152600c6020526040902054610ce89060ff16611d7e565b6000818152600c602090815260409091208651610d0d926005909201918801906126bf565b506000818152600c60205260408120426001820155600201859055600b82905580805b8751811015610e2657878181518110610d4b57610d4b612d88565b6020908102919091010151600a54909250610d6e906001600160a01b0316611dcb565b604051635edabd8b60e01b81529093506001600160a01b03841690635edabd8b90610dac90309060019087908d906008906009908f90600401612e42565b600060405180830381600087803b158015610dc657600080fd5b505af1158015610dda573d6000803e3d6000fd5b5050600b546000908152600d60209081526040808320868452909152902080546001600160a01b0319166001600160a01b03871617905550819050610e1e81612eab565b915050610d30565b5050505050505050565b6000610e3a611e65565b610e4261186a565b610e4b836118cd565b600b546000908152600c60205260408120600501805486908110610e7157610e71612d88565b90600052602060002001549050610e87816118cd565b6007546001600160a01b03166323b872dd3330670de0b6b3a7640000610eb089620f4240612c98565b610eba9190612caf565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610f0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f329190612cd1565b50600b546000908152600c602052604081206004018054869290610f57908490612d75565b9091555050600b546000908152600d6020908152604080832088845290915281206001018054869290610f8b908490612d75565b9091555050600f805492506001906000610fa58386612d75565b90915550610fb590508383611ebc565b60408051608081018252600b5481526020808201938452818301968752606082019788526000858152600e9091529190912090518155905160018201559251600284015592516003909201919091555090565b600061101261186a565b6000838152600c6020526040812060050180548790811061103557611035612d88565b600091825260208083209190910154868352600d825260408084208a8552909252918190205490516370a0823160e01b81523360048201529192506001600160a01b0316906110d390879083906370a0823190602401602060405180830381865afa1580156110a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cc9190612ec4565b1015611d7e565b60405163079cc67960e41b8152336004820152602481018790526001600160a01b038216906379cc679090604401600060405180830381600087803b15801561111b57600080fd5b505af115801561112f573d6000803e3d6000fd5b5050506000868152600c6020526040902060030154905082811061118a5760405162461bcd60e51b81526020600482015260126024820152710444f563a20596f757220706e6c20697320360741b60448201526064016109f6565b670de0b6b3a76400008761119e8386612c85565b6111a89190612c98565b6111b29190612caf565b6007549094506001600160a01b031663a9059cbb866111d664e8d4a5100088612caf565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611221573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112459190612cd1565b50505050949350505050565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606001805461078590612cee565b610b6d338383611ed6565b60006112a181611bf2565b6112a9611e65565b60005b8251811015610a97578281815181106112c7576112c7612d88565b602090810291909101810151600b546000908152600d835260408082208583529093529190912060040155806112fc81612eab565b9150506112ac565b61130e3383611a0f565b61132a5760405162461bcd60e51b81526004016109f690612d28565b61133684848484611fa4565b50505050565b600061134781611bf2565b61134f611e65565b50600b80546000908152600c6020526040808220805460ff19166001179055915481522060030155565b6009805461138690612cee565b80601f01602080910402602001604051908101604052809291908181526020018280546113b290612cee565b80156113ff5780601f106113d4576101008083540402835291602001916113ff565b820191906000526020600020905b8154815290600101906020018083116113e257829003601f168201915b505050505081565b606061141282611942565b600061142960408051602081019091526000815290565b905060008151116114495760405180602001604052806000815250611474565b8061145384611fd7565b604051602001611464929190612edd565b6040516020818303038152906040525b9392505050565b6114b66040518060a0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b506000918252600d6020908152604080842092845291815291819020815160a08101835281546001600160a01b031681526001820154938101939093526002810154918301919091526003810154606083015260040154608082015290565b60008281526006602052604090206001015461153081611bf2565b610a978383611c82565b6008805461138690612cee565b6000611551611e65565b61155961186a565b611562836118cd565b61156b8461206a565b600b546000908152600c602052604081206002810154600590910180549192918790811061159b5761159b612d88565b906000526020600020015490506115b1816118cd565b600b546000908152600d60209081526040808320898452909152812060028101546001909101546115e29190612c85565b90506000670de0b6b3a76400006115f98885612c98565b6116039190612caf565b90508082116116545760405162461bcd60e51b815260206004820152601a60248201527f444f563a206e6f7420656e6f75676820636f6c6c61746572616c00000000000060448201526064016109f6565b600b546000908152600d602090815260408083208b8452909152902060040154670de0b6b3a764000090611689908990612c98565b6116939190612caf565b6007549095506001600160a01b03166323b872dd3330670de0b6b3a76400006116bf8a620f4240612c98565b6116c99190612caf565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af115801561171d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117419190612cd1565b50600b546000908152600d602090815260408083208b845290915281206003018054879290611771908490612d75565b9091555050600b546000908152600d602090815260408083208b8452909152812060020180548392906117a5908490612d75565b9091555050600b546000908152600d602090815260408083208b8452909152812060010180548792906117d9908490612d75565b9091555050600b546000908152600d602090815260408083208b8452909152908190205490516340c10f1960e01b81526001600160a01b038881166004830152602482018a9052909116906340c10f1990604401600060405180830381600087803b15801561184757600080fd5b505af115801561185b573d6000803e3d6000fd5b50505050505050509392505050565b3332146118cb5760405162461bcd60e51b815260206004820152602960248201527f444f563a205468697320636f6e7472616374206f6e6c7920696e746572616374604482015268207769746820454f4160b81b60648201526084016109f6565b565b60008111610bba5760405162461bcd60e51b815260206004820152601e60248201527f444f563a2076616c7565206d7573742067726561746572207468616e2030000060448201526064016109f6565b60006001600160e01b03198216637965db0b60e01b14806107705750610770826120d1565b6000818152600260205260409020546001600160a01b0316610bba5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016109f6565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906119d682610bbd565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080611a1b83610bbd565b9050806001600160a01b0316846001600160a01b03161480611a6257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80611a865750836001600160a01b0316611a7b8461095b565b6001600160a01b0316145b949350505050565b826001600160a01b0316611aa182610bbd565b6001600160a01b031614611ac75760405162461bcd60e51b81526004016109f690612f0c565b6001600160a01b038216611b295760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016109f6565b826001600160a01b0316611b3c82610bbd565b6001600160a01b031614611b625760405162461bcd60e51b81526004016109f690612f0c565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610bba8133612121565b611c068282611251565b610b6d5760008281526006602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611c3e3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b611c8c8282611251565b15610b6d5760008281526006602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000611cf482610bbd565b9050611cff82610bbd565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b80610bba5760405162461bcd60e51b815260206004820152601c60248201527f444f563a20636f6e646974696f6e20646f65736e2774206d617463680000000060448201526064016109f6565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b038116611e605760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b60448201526064016109f6565b919050565b600b546000908152600c602052604090205460ff16156118cb5760405162461bcd60e51b81526020600482015260126024820152711113d58e881c9bdd5b9908195e1c1a5c995960721b60448201526064016109f6565b610b6d82826040518060200160405280600081525061217a565b816001600160a01b0316836001600160a01b031603611f375760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016109f6565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611faf848484611a8e565b611fbb848484846121ad565b6113365760405162461bcd60e51b81526004016109f690612f51565b60606000611fe4836122ae565b600101905060008167ffffffffffffffff81111561200457612004612919565b6040519080825280601f01601f19166020018201604052801561202e576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461203857509392505050565b600b546000908152600d602090815260408083208484529091528120600401549003610bba5760405162461bcd60e51b8152602060048201526016602482015275444f563a20737472696b65206e6f742061637469766560501b60448201526064016109f6565b60006001600160e01b031982166380ac58cd60e01b148061210257506001600160e01b03198216635b5e139f60e01b145b8061077057506301ffc9a760e01b6001600160e01b0319831614610770565b61212b8282611251565b610b6d5761213881612386565b612143836020612398565b604051602001612154929190612fa3565b60408051601f198184030181529082905262461bcd60e51b82526109f6916004016127e5565b6121848383612534565b61219160008484846121ad565b610a975760405162461bcd60e51b81526004016109f690612f51565b60006001600160a01b0384163b156122a357604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906121f1903390899088908890600401613018565b6020604051808303816000875af192505050801561222c575060408051601f3d908101601f1916820190925261222991810190613055565b60015b612289573d80801561225a576040519150601f19603f3d011682016040523d82523d6000602084013e61225f565b606091505b5080516000036122815760405162461bcd60e51b81526004016109f690612f51565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611a86565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106122ed5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310612319576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061233757662386f26fc10000830492506010015b6305f5e100831061234f576305f5e100830492506008015b612710831061236357612710830492506004015b60648310612375576064830492506002015b600a83106107705760010192915050565b60606107706001600160a01b03831660145b606060006123a7836002612c98565b6123b2906002612d75565b67ffffffffffffffff8111156123ca576123ca612919565b6040519080825280601f01601f1916602001820160405280156123f4576020820181803683370190505b509050600360fc1b8160008151811061240f5761240f612d88565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061243e5761243e612d88565b60200101906001600160f81b031916908160001a9053506000612462846002612c98565b61246d906001612d75565b90505b60018111156124e5576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106124a1576124a1612d88565b1a60f81b8282815181106124b7576124b7612d88565b60200101906001600160f81b031916908160001a90535060049490941c936124de81613072565b9050612470565b5083156114745760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016109f6565b6001600160a01b03821661258a5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016109f6565b6000818152600260205260409020546001600160a01b0316156125ef5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016109f6565b6000818152600260205260409020546001600160a01b0316156126545760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016109f6565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280548282559060005260206000209081019282156126fa579160200282015b828111156126fa5782518255916020019190600101906126df565b5061270692915061270a565b5090565b5b80821115612706576000815560010161270b565b80356001600160a01b0381168114611e6057600080fd5b6000806040838503121561274957600080fd5b823591506127596020840161271f565b90509250929050565b6001600160e01b031981168114610bba57600080fd5b60006020828403121561278a57600080fd5b813561147481612762565b60005b838110156127b0578181015183820152602001612798565b50506000910152565b600081518084526127d1816020860160208601612795565b601f01601f19169290920160200192915050565b60208152600061147460208301846127b9565b60006020828403121561280a57600080fd5b5035919050565b6000602080835260e0830184511515828501528185015160408501526040850151606085015260608501516080850152608085015160a085015260a085015160c080860152818151808452610100870191508483019350600092505b8083101561288d578351825292840192600192909201919084019061286d565b509695505050505050565b600080604083850312156128ab57600080fd5b6128b48361271f565b946020939093013593505050565b6000806000606084860312156128d757600080fd5b6128e08461271f565b92506128ee6020850161271f565b9150604084013590509250925092565b60006020828403121561291057600080fd5b6114748261271f565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561295857612958612919565b604052919050565b600082601f83011261297157600080fd5b8135602067ffffffffffffffff82111561298d5761298d612919565b8160051b61299c82820161292f565b92835284810182019282810190878511156129b657600080fd5b83870192505b848310156129d5578235825291830191908301906129bc565b979650505050505050565b600067ffffffffffffffff8311156129fa576129fa612919565b612a0d601f8401601f191660200161292f565b9050828152838383011115612a2157600080fd5b828260208301376000602084830101529392505050565b600080600060608486031215612a4d57600080fd5b833567ffffffffffffffff80821115612a6557600080fd5b612a7187838801612960565b9450602086013593506040860135915080821115612a8e57600080fd5b508401601f81018613612aa057600080fd5b612aaf868235602084016129e0565b9150509250925092565b600080600060608486031215612ace57600080fd5b8335925060208401359150612ae56040850161271f565b90509250925092565b60008060008060808587031215612b0457600080fd5b843593506020850135925060408501359150612b226060860161271f565b905092959194509250565b8015158114610bba57600080fd5b60008060408385031215612b4e57600080fd5b612b578361271f565b91506020830135612b6781612b2d565b809150509250929050565b600060208284031215612b8457600080fd5b813567ffffffffffffffff811115612b9b57600080fd5b611a8684828501612960565b60008060008060808587031215612bbd57600080fd5b612bc68561271f565b9350612bd46020860161271f565b925060408501359150606085013567ffffffffffffffff811115612bf757600080fd5b8501601f81018713612c0857600080fd5b612c17878235602084016129e0565b91505092959194509250565b60008060408385031215612c3657600080fd5b50508035926020909101359150565b60008060408385031215612c5857600080fd5b612c618361271f565b91506127596020840161271f565b634e487b7160e01b600052601160045260246000fd5b8181038181111561077057610770612c6f565b808202811582820484141761077057610770612c6f565b600082612ccc57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215612ce357600080fd5b815161147481612b2d565b600181811c90821680612d0257607f821691505b602082108103612d2257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b8082018082111561077057610770612c6f565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c9080831680612db857607f831692505b60208084108203612dd957634e487b7160e01b600052602260045260246000fd5b83885260208801828015612df45760018114612e0a57612e35565b60ff198716825285151560051b82019750612e35565b60008981526020902060005b87811015612e2f57815484820152908601908401612e16565b83019850505b5050505050505092915050565b60018060a01b0388168152861515602082015285604082015284606082015260e060808201526000612e7760e0830186612d9e565b82810360a0840152612e898186612d9e565b905082810360c0840152612e9d81856127b9565b9a9950505050505050505050565b600060018201612ebd57612ebd612c6f565b5060010190565b600060208284031215612ed657600080fd5b5051919050565b60008351612eef818460208801612795565b835190830190612f03818360208801612795565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612fdb816017850160208801612795565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161300c816028840160208801612795565b01602801949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061304b908301846127b9565b9695505050505050565b60006020828403121561306757600080fd5b815161147481612762565b60008161308157613081612c6f565b50600019019056fea264697066735822122045c7ec77f863af9bf9c1a5c7d0115c44322896ef52da10b156f23eeeeec690cd64736f6c6343000813003360806040523480156200001157600080fd5b5060408051602080820183526000808352835191820190935291825290818160056200003e8382620002b8565b5060066200004d8282620002b8565b50506007805460ff191690555062000067600033620000c7565b620000937f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620000c7565b620000bf7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33620000c7565b505062000384565b620000d38282620000d7565b5050565b620000e3828262000102565b6000828152600160205260409020620000fd9082620001a2565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620000d3576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200015e3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001b9836001600160a01b038416620001c2565b90505b92915050565b60008181526001830160205260408120546200020b57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620001bc565b506000620001bc565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200023f57607f821691505b6020821081036200026057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000fd57600081815260208120601f850160051c810160208610156200028f5750805b601f850160051c820191505b81811015620002b0578281556001016200029b565b505050505050565b81516001600160401b03811115620002d457620002d462000214565b620002ec81620002e584546200022a565b8462000266565b602080601f8311600181146200032457600084156200030b5750858301515b600019600386901b1c1916600185901b178555620002b0565b600085815260208120601f198616915b82811015620003555788860151825594840194600190910190840162000334565b5085821015620003745787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611fdd80620003946000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c806379cc679011610125578063bf911794116100ad578063d90a730e1161007c578063d90a730e1461046d578063dd62ed3e14610475578063e184c9be14610488578063e63ab1e914610491578063f3c274a6146104a657600080fd5b8063bf91179414610418578063ca15c87314610420578063d539139314610433578063d547741f1461045a57600080fd5b806395d89b41116100f457806395d89b41146103d9578063a217fddf146103e1578063a457c2d7146103e9578063a9059cbb146103fc578063ad8f50081461040f57600080fd5b806379cc6790146103985780638456cb59146103ab5780639010d07c146103b357806391d14854146103c657600080fd5b8063313ce567116101a857806340c10f191161017757806340c10f191461032b57806342966c681461033e5780635c975abb146103515780635edabd8b1461035c57806370a082311461036f57600080fd5b8063313ce567146102ee57806336568abe146102fd57806339509351146103105780633f4ba83a1461032357600080fd5b806318160ddd116101e457806318160ddd1461029157806323b872dd146102a3578063248a9ca3146102b65780632f2ff15d146102d957600080fd5b806301ffc9a71461021657806306fdde031461023e578063095ea7b3146102535780630af0ebf714610266575b600080fd5b6102296102243660046119cd565b6104b8565b60405190151581526020015b60405180910390f35b6102466104e3565b6040516102359190611a1b565b610229610261366004611a6a565b610575565b600a54610279906001600160a01b031681565b6040516001600160a01b039091168152602001610235565b6004545b604051908152602001610235565b6102296102b1366004611a94565b61058d565b6102956102c4366004611ad0565b60009081526020819052604090206001015490565b6102ec6102e7366004611ae9565b6105b1565b005b60405160128152602001610235565b6102ec61030b366004611ae9565b6105db565b61022961031e366004611a6a565b61065e565b6102ec610680565b6102ec610339366004611a6a565b610714565b6102ec61034c366004611ad0565b6107b3565b60075460ff16610229565b6102ec61036a366004611bb8565b6107c0565b61029561037d366004611c7c565b6001600160a01b031660009081526002602052604090205490565b6102ec6103a6366004611a6a565b610994565b6102ec6109a9565b6102796103c1366004611c97565b610a3b565b6102296103d4366004611ae9565b610a5a565b610246610a83565b610295600081565b6102296103f7366004611a6a565b610a92565b61022961040a366004611a6a565b610b0d565b61029560085481565b610246610b1b565b61029561042e366004611ad0565b610ba9565b6102957f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102ec610468366004611ae9565b610bc0565b610246610be5565b610295610483366004611cb9565b610bf2565b61029560095481565b610295600080516020611f8883398151915281565b60075461022990610100900460ff1681565b60006001600160e01b03198216635a05180f60e01b14806104dd57506104dd82610c1d565b92915050565b6060600580546104f290611ce3565b80601f016020809104026020016040519081016040528092919081815260200182805461051e90611ce3565b801561056b5780601f106105405761010080835404028352916020019161056b565b820191906000526020600020905b81548152906001019060200180831161054e57829003601f168201915b5050505050905090565b600033610583818585610c52565b5060019392505050565b60003361059b858285610d76565b6105a6858585610df0565b506001949350505050565b6000828152602081905260409020600101546105cc81610fa6565b6105d68383610fb0565b505050565b6001600160a01b03811633146106505760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61065a8282610fd2565b5050565b6000336105838185856106718383610bf2565b61067b9190611d33565b610c52565b610698600080516020611f8883398151915233610a5a565b61070a5760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e7061757365000000000000006064820152608401610647565b610712610ff4565b565b61073e7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610a5a565b6107a95760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b6064820152608401610647565b61065a8282611046565b6107bd3382611113565b50565b83421061080f5760405162461bcd60e51b815260206004820181905260248201527f43616e2774206465706c6f7920616e206578706972656420636f6e74726163746044820152606401610647565b600a80546001600160a01b0319166001600160a01b038916179055600b6108368482611d94565b50600c6108438382611d94565b506007805461ff00191661010088151502179055600885905560098490556040805180820190915260018152602d60f81b6020820152600090610887908590611253565b90506108938183611253565b90506108b881604051806040016040528060018152602001602d60f81b815250611253565b90506108e1816108dc670de0b6b3a76400006008546108d79190611e54565b61127f565b611253565b905061093b81600760019054906101000a900460ff1661091b57604051806040016040528060028152602001612d4360f01b815250611253565b6040518060400160405280600281526020016102d560f41b815250611253565b9050610948600033611312565b6109727f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633611312565b61098a600080516020611f8883398151915233611312565b5050505050505050565b61099f823383610d76565b61065a8282611113565b6109c1600080516020611f8883398151915233610a5a565b610a335760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f2070617573650000000000000000006064820152608401610647565b61071261131c565b6000828152600160205260408120610a539083611359565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546104f290611ce3565b60003381610aa08286610bf2565b905083811015610b005760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610647565b6105a68286868403610c52565b600033610583818585610df0565b600c8054610b2890611ce3565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5490611ce3565b8015610ba15780601f10610b7657610100808354040283529160200191610ba1565b820191906000526020600020905b815481529060010190602001808311610b8457829003601f168201915b505050505081565b60008181526001602052604081206104dd90611365565b600082815260208190526040902060010154610bdb81610fa6565b6105d68383610fd2565b600b8054610b2890611ce3565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60006001600160e01b03198216637965db0b60e01b14806104dd57506301ffc9a760e01b6001600160e01b03198316146104dd565b6001600160a01b038316610cb45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610647565b6001600160a01b038216610d155760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610647565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d828484610bf2565b90506000198114610dea5781811015610ddd5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610647565b610dea8484848403610c52565b50505050565b6001600160a01b038316610e545760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610647565b6001600160a01b038216610eb65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610647565b610ec183838361136f565b6001600160a01b03831660009081526002602052604090205481811015610f395760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610647565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f999086815260200190565b60405180910390a3610dea565b6107bd813361137a565b610fba82826113d3565b60008281526001602052604090206105d69082611457565b610fdc828261146c565b60008281526001602052604090206105d690826114d1565b610ffc6114e6565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661109c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610647565b6110a86000838361136f565b80600460008282546110ba9190611d33565b90915550506001600160a01b0382166000818152600260209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166111735760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610647565b61117f8260008361136f565b6001600160a01b038216600090815260026020526040902054818110156111f35760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610647565b6001600160a01b03831660008181526002602090815260408083208686039055600480548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60608282604051602001611268929190611e76565b604051602081830303815290604052905092915050565b6060600061128c8361152f565b600101905060008167ffffffffffffffff8111156112ac576112ac611b15565b6040519080825280601f01601f1916602001820160405280156112d6576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846112e057509392505050565b61065a8282610fb0565b611324611607565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110293390565b6000610a53838361164d565b60006104dd825490565b6105d6838383611677565b6113848282610a5a565b61065a57611391816116dd565b61139c8360206116ef565b6040516020016113ad929190611ea5565b60408051601f198184030181529082905262461bcd60e51b825261064791600401611a1b565b6113dd8282610a5a565b61065a576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556114133390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610a53836001600160a01b03841661188b565b6114768282610a5a565b1561065a576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610a53836001600160a01b0384166118da565b60075460ff166107125760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610647565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061156e5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061159a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106115b857662386f26fc10000830492506010015b6305f5e10083106115d0576305f5e100830492506008015b61271083106115e457612710830492506004015b606483106115f6576064830492506002015b600a83106104dd5760010192915050565b60075460ff16156107125760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610647565b600082600001828154811061166457611664611f1a565b9060005260206000200154905092915050565b60075460ff16156105d65760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610647565b60606104dd6001600160a01b03831660145b606060006116fe836002611f30565b611709906002611d33565b67ffffffffffffffff81111561172157611721611b15565b6040519080825280601f01601f19166020018201604052801561174b576020820181803683370190505b509050600360fc1b8160008151811061176657611766611f1a565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061179557611795611f1a565b60200101906001600160f81b031916908160001a90535060006117b9846002611f30565b6117c4906001611d33565b90505b600181111561183c576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106117f8576117f8611f1a565b1a60f81b82828151811061180e5761180e611f1a565b60200101906001600160f81b031916908160001a90535060049490941c9361183581611f47565b90506117c7565b508315610a535760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610647565b60008181526001830160205260408120546118d2575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104dd565b5060006104dd565b600081815260018301602052604081205480156119c35760006118fe600183611f5e565b855490915060009061191290600190611f5e565b905081811461197757600086600001828154811061193257611932611f1a565b906000526020600020015490508087600001848154811061195557611955611f1a565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061198857611988611f71565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104dd565b60009150506104dd565b6000602082840312156119df57600080fd5b81356001600160e01b031981168114610a5357600080fd5b60005b83811015611a125781810151838201526020016119fa565b50506000910152565b6020815260008251806020840152611a3a8160408501602087016119f7565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611a6557600080fd5b919050565b60008060408385031215611a7d57600080fd5b611a8683611a4e565b946020939093013593505050565b600080600060608486031215611aa957600080fd5b611ab284611a4e565b9250611ac060208501611a4e565b9150604084013590509250925092565b600060208284031215611ae257600080fd5b5035919050565b60008060408385031215611afc57600080fd5b82359150611b0c60208401611a4e565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611b3c57600080fd5b813567ffffffffffffffff80821115611b5757611b57611b15565b604051601f8301601f19908116603f01168101908282118183101715611b7f57611b7f611b15565b81604052838152866020858801011115611b9857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600060e0888a031215611bd357600080fd5b611bdc88611a4e565b965060208801358015158114611bf157600080fd5b95506040880135945060608801359350608088013567ffffffffffffffff80821115611c1c57600080fd5b611c288b838c01611b2b565b945060a08a0135915080821115611c3e57600080fd5b611c4a8b838c01611b2b565b935060c08a0135915080821115611c6057600080fd5b50611c6d8a828b01611b2b565b91505092959891949750929550565b600060208284031215611c8e57600080fd5b610a5382611a4e565b60008060408385031215611caa57600080fd5b50508035926020909101359150565b60008060408385031215611ccc57600080fd5b611cd583611a4e565b9150611b0c60208401611a4e565b600181811c90821680611cf757607f821691505b602082108103611d1757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104dd576104dd611d1d565b601f8211156105d657600081815260208120601f850160051c81016020861015611d6d5750805b601f850160051c820191505b81811015611d8c57828155600101611d79565b505050505050565b815167ffffffffffffffff811115611dae57611dae611b15565b611dc281611dbc8454611ce3565b84611d46565b602080601f831160018114611df75760008415611ddf5750858301515b600019600386901b1c1916600185901b178555611d8c565b600085815260208120601f198616915b82811015611e2657888601518255948401946001909101908401611e07565b5085821015611e445787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082611e7157634e487b7160e01b600052601260045260246000fd5b500490565b60008351611e888184602088016119f7565b835190830190611e9c8183602088016119f7565b01949350505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611edd8160178501602088016119f7565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611f0e8160288401602088016119f7565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176104dd576104dd611d1d565b600081611f5657611f56611d1d565b506000190190565b818103818111156104dd576104dd611d1d565b634e487b7160e01b600052603160045260246000fdfe65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862aa26469706673582212207bf66db47d8304edc9b1c21710de9b9134c046e5ce4b3cd35d2ff671073fd68f64736f6c63430008130033eb8ba43ced7537421946bd43e828b8b2b8428927aa8f801c13d934bf11aca57b0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583726f756e6420312c20737472696b65203120707572636861736520726563656970743a885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d7075726368617365207265636569707420636f6e7472616374206e6f7420696e697469616c697a65644552524f523a205772697465506f736974696f6e20636f6c6c61746572616c416d6f756e74a2646970667358221220d1bd18528afdfc162143634ec153b41ca4d4ebcbb730e3d13aa94d70722dde7364736f6c63430008130033",
    "sourceMap": "1572:26:0:-:0;;;-1:-1:-1;;1572:26:0;;;1594:4;1572:26;;;;;;3126:44:4;;;;;;;;;;432:69:54;;;-1:-1:-1;;;;;;432:69:54;;;458:42;432:69;;;;539:37;;;;;;;;;;;582;;;;;615:3;582:37;;;625;;;;;658:3;625:37;;;;;;701;;;;;733:4;701:37;;;744;;;;;776:4;744:37;;;787;;;;;819:4;787:37;;;851:36;;;;;;882:4;851:36;;;;894:38;304:8453:53;894:38:54;304:8453:53;894:38:54;;;-1:-1:-1;;;894:38:54;;;;;;;;:::i;:::-;-1:-1:-1;938:39:54;;;;;;;;;;;;-1:-1:-1;;;938:39:54;;;;;;;;;;:::i;:::-;;304:8453:53;;;;;;;;;;;;14:127:55;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:55;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:55;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:55;;;2580:26;2531:89;-1:-1:-1;;1335:1:55;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:55;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:55;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:55;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:55:o;:::-;304:8453:53;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620002195760003560e01c806389a302711162000125578063dc5eb6cb11620000af578063f711b162116200007a578063f711b1621462000401578063f851a4401462000415578063fa7626d41462000429578063fa7dfe77146200043757600080fd5b8063dc5eb6cb14620003d9578063e20c9f7114620003e3578063ecb9a10314620003ed578063f080676414620003f757600080fd5b8063bf91179411620000f0578063bf9117941462000398578063c3de84a414620003b1578063cacab1dd14620003c5578063d90a730e14620003cf57600080fd5b806389a302711462000355578063916a17c61462000369578063b5508aa91462000373578063ba414fa6146200037d57600080fd5b80634674f19b11620001a75780636e6e1d4611620001725780636e6e1d46146200031e57806373add44b14620003285780637f924c4e146200033257806385226c81146200033c57600080fd5b80634674f19b14620002c957806350f3057314620002dd5780635c60da1b14620002f157806366d9a9a0146200030557600080fd5b80631ed7831c11620001e85780631ed7831c14620002835780632ade3880146200029c5780633e5e3c2314620002b55780633f7286f414620002bf57600080fd5b80630a9254e4146200021e5780630af0ebf7146200022a57806317e26c59146200025b57806319a7681f146200026f575b600080fd5b6200022862000441565b005b601c546200023e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6023546200023e906001600160a01b031681565b6020546200023e906001600160a01b031681565b6200028d62000879565b60405162000252919062006496565b620002a6620008dd565b60405162000252919062006539565b6200028d62000a2b565b6200028d62000a8d565b601f546200023e906001600160a01b031681565b6024546200023e906001600160a01b031681565b601d546200023e906001600160a01b031681565b6200030f62000aef565b604051620002529190620065ff565b6200022862000bd9565b62000228620011a9565b62000228620017b8565b6200034662001bdc565b604051620002529190620066b6565b601e546200023e906001600160a01b031681565b6200030f62001cb6565b6200034662001da0565b6200038762001e7a565b604051901515815260200162000252565b620003a262001fad565b6040516200025291906200671c565b6022546200023e906001600160a01b031681565b6200022862002043565b620003a2620026bd565b62000228620026cc565b6200028d62002ccf565b6200022862002d31565b6200022862003043565b6021546200023e906001600160a01b031681565b6025546200023e906001600160a01b031681565b600754620003879060ff1681565b62000228620030a1565b601e546040516026916027916001600160a01b0390911690620004649062006453565b620004729392919062006819565b604051809103906000f0801580156200048f573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b03928316179055601f5460405163c88a5e6d60e01b81526000805160206200cbd58339815191529263c88a5e6d92620004f09291169069152d02c7e14af680000090600401620068b8565b600060405180830381600087803b1580156200050b57600080fd5b505af115801562000520573d6000803e3d6000fd5b505060205460405163c88a5e6d60e01b81526000805160206200cbd5833981519152935063c88a5e6d92506200056f916001600160a01b03169069152d02c7e14af680000090600401620068b8565b600060405180830381600087803b1580156200058a57600080fd5b505af11580156200059f573d6000803e3d6000fd5b505060215460405163c88a5e6d60e01b81526000805160206200cbd5833981519152935063c88a5e6d9250620005ee916001600160a01b03169069152d02c7e14af680000090600401620068b8565b600060405180830381600087803b1580156200060957600080fd5b505af11580156200061e573d6000803e3d6000fd5b505060225460405163c88a5e6d60e01b81526000805160206200cbd5833981519152935063c88a5e6d92506200066d916001600160a01b03169069152d02c7e14af680000090600401620068b8565b600060405180830381600087803b1580156200068857600080fd5b505af11580156200069d573d6000803e3d6000fd5b505060235460405163c88a5e6d60e01b81526000805160206200cbd5833981519152935063c88a5e6d9250620006ec916001600160a01b03169069152d02c7e14af680000090600401620068b8565b600060405180830381600087803b1580156200070757600080fd5b505af11580156200071c573d6000803e3d6000fd5b505060245460405163c88a5e6d60e01b81526000805160206200cbd5833981519152935063c88a5e6d92506200076b916001600160a01b03169069152d02c7e14af680000090600401620068b8565b600060405180830381600087803b1580156200078657600080fd5b505af11580156200079b573d6000803e3d6000fd5b5050601e54601f54620007c393506001600160a01b0391821692501664174876e80062003668565b601e54602054620007e7916001600160a01b03908116911664174876e80062003668565b601e546021546200080b916001600160a01b03908116911664174876e80062003668565b601e546022546200082f916001600160a01b03908116911664174876e80062003668565b601e5460235462000853916001600160a01b03908116911664174876e80062003668565b601e5460245462000877916001600160a01b03908116911664174876e80062003668565b565b60606014805480602002602001604051908101604052809291908181526020018280548015620008d357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620008b4575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101562000a2257600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000a0a578382906000526020600020018054620009769062006731565b80601f0160208091040260200160405190810160405280929190818152602001828054620009a49062006731565b8015620009f55780601f10620009c957610100808354040283529160200191620009f5565b820191906000526020600020905b815481529060010190602001808311620009d757829003601f168201915b50505050508152602001906001019062000954565b50505050815250508152602001906001019062000901565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015620008d3576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620008b4575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015620008d3576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620008b4575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101562000a225760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000bc057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000b815790505b5050505050815250508152602001906001019062000b13565b60408051808201825260158152742932b1b2b4b83a10383937bc3c903a30b933b2ba1d60591b602080830191909152601c548351631e6c722760e31b8152935162000c7d946001600160a01b039092169263f363913892600480820193918290030181865afa15801562000c51573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c779190620068e9565b6200367c565b6040805180820190915260118152703237bb1037b83a37b4b7103b30bab63a1d60791b6020820152601c5462000cbd91906001600160a01b03166200367c565b60408051808201825260118152703ab73232b9363cb4b733a9bcb6b137b61d60791b6020820152601c548251636c85398760e11b8152925162000d61936001600160a01b039092169163d90a730e9160048083019260009291908290030181865afa15801562000d31573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000d5b91908101906200697d565b620036c5565b604080518082018252601181527031b7b63630ba32b930b629bcb6b137b61d60791b6020820152601c548251632fe445e560e21b8152925162000dd5936001600160a01b039092169163bf9117949160048083019260009291908290030181865afa15801562000d31573d6000803e3d6000fd5b60408051808201825260138152722222a320aaa62a1020a226a4a7102a292aa29d60691b6020820152601c549151632474521560e21b81526000600482015230602482015262000e7c926001600160a01b0316906391d1485490604401602060405180830381865afa15801562000e50573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e76919062006a2d565b6200370e565b62000fc26026805462000e8f9062006731565b80601f016020809104026020016040519081016040528092919081815260200182805462000ebd9062006731565b801562000f0e5780601f1062000ee25761010080835404028352916020019162000f0e565b820191906000526020600020905b81548152906001019060200180831162000ef057829003601f168201915b5050601c5460408051636c85398760e11b815290516001600160a01b03909216945063d90a730e935060048082019350600092918290030181865afa15801562000f5c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000f8691908101906200697d565b6040518060400160405280601b81526020017f756e6465726c79696e672073796d626f6c206e6f74206d61746368000000000081525062003757565b620011086027805462000fd59062006731565b80601f0160208091040260200160405190810160405280929190818152602001828054620010039062006731565b8015620010545780601f10620010285761010080835404028352916020019162001054565b820191906000526020600020905b8154815290600101906020018083116200103657829003601f168201915b5050601c5460408051632fe445e560e21b815290516001600160a01b03909216945063bf911794935060048082019350600092918290030181865afa158015620010a2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620010cc91908101906200697d565b6040518060400160405280601b81526020017f636f6c6c61746572616c2073796d626f6c206e6f74206d61746368000000000081525062003757565b601c54604051632474521560e21b81526000600482015230602482015262000877916001600160a01b0316906391d1485490604401602060405180830381865afa1580156200115b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001181919062006a2d565b604051806040016040528060098152602001682737b71030b236b4b760b91b815250620037e3565b601e54601f546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562001209573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200122f919062006a4b565b60066040516200124192919062006a65565b60405180910390a1601e546020546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa158015620012a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012cf919062006a4b565b6006604051620012e192919062006aa9565b60405180910390a1601e546021546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562001349573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200136f919062006a4b565b60066040516200138192919062006aed565b60405180910390a16200139d684be4e7267b6ae000006200381c565b601c5460405163ce7fa75d60e01b815260016004820152600060248201819052916001600160a01b03169063ce7fa75d9060440160a060405180830381865afa158015620013ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001415919062006b31565b60200151601f5490915060009062001437906001600160a01b03168262003907565b9050620014a48164e8d4a5100060066200145b688cf23f909c0fa000008762006bc2565b62001467919062006bd8565b62001473919062006bd8565b14604051806040016040528060118152602001700e0dcd840c8decae6dc4ee840dac2e8c6d607b1b815250620037e3565b602054620014bd906001600160a01b0316600162003907565b9050620014ee8164e8d4a510006006620014e1688cf23f909c0fa000008762006bc2565b6200145b90600262006bfb565b60215462001507906001600160a01b0316600262003907565b9050620015388164e8d4a5100060066200152b688cf23f909c0fa000008762006bc2565b6200145b90600362006bfb565b601e54601f546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562001598573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015be919062006a4b565b6040805160608082526017908201527f6166746572207772697465723127732062616c616e63650000000000000000006080820152602081019290925260069082015260a00160405180910390a1601e546020546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa1580156200166c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001692919062006a4b565b6040805160608082526017908201527f6166746572207772697465723227732062616c616e63650000000000000000006080820152602081019290925260069082015260a00160405180910390a1601e546021546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562001740573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001766919062006a4b565b6040805160608082526017908201527f6166746572207772697465723327732062616c616e63650000000000000000006080820152602081019290925260069082015260a00160405180910390a15050565b620017c262003a63565b601e54601f546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562001822573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001848919062006a4b565b6040805160608082526021908201527f4265666f7265204465706f736974207772697465723127732062616c616e63656080820152601d60f91b60a0820152602081019290925260069082015260c00160405180910390a1601f54600090620018c4906001600160a01b031668056bc75e2d6310000062003a77565b601e54601f546040516370a0823160e01b81526001600160a01b0391821660048201529293506000805160206200cbb5833981519152929116906370a0823190602401602060405180830381865afa15801562001925573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200194b919062006a4b565b60408051606080825260209082018190527f4166746572204465706f736974207772697465723127732062616c616e63653a608083015281019290925260069082015260a00160405180910390a1601c546040516303e6695360e11b8152600481018390526000916001600160a01b0316906307ccd2a690602401608060405180830381865afa158015620019e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a0a919062006c15565b905062001a48604051806040016040528060148152602001733bb934ba32a837b9b4ba34b7b7173937bab7321d60611b815250826000015162003c11565b602081810151604080516060808252601590820152743bb934ba32a837b9b4ba34b7b71739ba3934b5b29d60591b608082015292830191909152601282820152516000805160206200cbb58339815191529181900360a00190a16000805160206200cbb58339815191528160400151601260405162001b079291906060808252601f908201527f7772697465506f736974696f6e2e636f6c6c61746572616c416d6f756e743a0060808201526020810192909252604082015260a00190565b60405180910390a162001b56816000015160016040518060400160405280601a81526020017f4552524f523a205772697465506f736974696f6e20726f756e6400000000000081525062003c5a565b62001ba581602001516856bc75e2d6310000006040518060400160405280601b81526020017f4552524f523a205772697465506f736974696f6e20737472696b65000000000081525062003c5a565b62001bd8816040015168056bc75e2d631000006040518060600160405280602581526020016200cc816025913962003c5a565b5050565b60606018805480602002602001604051908101604052809291908181526020016000905b8282101562000a2257838290600052602060002001805462001c229062006731565b80601f016020809104026020016040519081016040528092919081815260200182805462001c509062006731565b801562001ca15780601f1062001c755761010080835404028352916020019162001ca1565b820191906000526020600020905b81548152906001019060200180831162001c8357829003601f168201915b50505050508152602001906001019062001c00565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101562000a225760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562001d8757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162001d485790505b5050505050815250508152602001906001019062001cda565b60606017805480602002602001604051908101604052809291908181526020016000905b8282101562000a2257838290600052602060002001805462001de69062006731565b80601f016020809104026020016040519081016040528092919081815260200182805462001e149062006731565b801562001e655780601f1062001e395761010080835404028352916020019162001e65565b820191906000526020600020905b81548152906001019060200180831162001e4757829003601f168201915b50505050508152602001906001019062001dc4565b600754600090610100900460ff161562001e9d5750600754610100900460ff1690565b60006000805160206200cbd58339815191523b1562001fa8576040516000906000805160206200cbd5833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062001f0a9083906519985a5b195960d21b90602001620068b8565b60408051601f198184030181529082905262001f2a929160200162006c7f565b60408051601f198184030181529082905262001f469162006cb2565b6000604051808303816000865af19150503d806000811462001f85576040519150601f19603f3d011682016040523d82523d6000602084013e62001f8a565b606091505b509150508080602001905181019062001fa4919062006a2d565b9150505b919050565b6027805462001fbc9062006731565b80601f016020809104026020016040519081016040528092919081815260200182805462001fea9062006731565b80156200203b5780601f106200200f576101008083540402835291602001916200203b565b820191906000526020600020905b8154815290600101906020018083116200201d57829003601f168201915b505050505081565b60408051600480825260a08201909252600091602082016080803683370190505090506856bc75e2d6310000008160008151811062002086576200208662006cd0565b60200260200101818152505068537bcb10baf590000081600181518110620020b257620020b262006cd0565b602002602001018181525050685150ae84a8cdf0000081600281518110620020de57620020de62006cd0565b602002602001018181525050684f2591f896a6500000816003815181106200210a576200210a62006cd0565b60209081029190910101526000620021264262093a8062006ce6565b604080518082018252600781526630354f4354323360c81b6020820152601c549151631d47ad9760e21b8152929350916001600160a01b039091169063751eb65c906200217c9086908690869060040162006d39565b600060405180830381600087803b1580156200219757600080fd5b505af1158015620021ac573d6000803e3d6000fd5b505050506000601c60009054906101000a90046001600160a01b03166001600160a01b0316638a19c8bc6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002206573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200222c919062006a4b565b601c546040516303906d2960e11b8152600481018390529192506000916001600160a01b0390911690630720da5290602401600060405180830381865afa1580156200227c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620022a6919081019062006d99565b601c5460405163ce7fa75d60e01b815260048101859052600160248201529192506000916001600160a01b039091169063ce7fa75d9060440160a060405180830381865afa158015620022fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002323919062006b31565b9050620023576040518060400160405280600e81526020016d31bab93932b73a103937bab7321d60911b8152508462003c11565b6200238f6040518060400160405280601081526020016f3937bab7321039ba30b93a2a34b6b29d60811b815250836020015162003c11565b620023c46040518060400160405280600d81526020016c3937bab7321032bc3834b93c9d60991b815250836040015162003c11565b620023f78360016040518060400160405280600d81526020016c1c9bdd5b99081b9bdd081cd95d609a1b81525062003c5a565b620024338260200151426040518060400160405280601381526020017273746172742054696d65206e6f742073616d6560681b81525062003c5a565b60408201516200247f906200244c4262093a8062006ce6565b604051806040016040528060148152602001736578706972792054696d65206e6f742073616d6560601b81525062003c5a565b8160a0015195506000805160206200cbb583398151915286600081518110620024ac57620024ac62006cd0565b60200260200101516012604051620024f19291906060808252600a9082015269737472696b65735b305d60b01b60808201526020810192909252604082015260a00190565b60405180910390a16000805160206200cbb5833981519152866001815181106200251f576200251f62006cd0565b60200260200101516012604051620025649291906060808252600a9082015269737472696b65735b315d60b01b60808201526020810192909252604082015260a00190565b60405180910390a16000805160206200cbb58339815191528660028151811062002592576200259262006cd0565b60200260200101516012604051620025d79291906060808252600a9082015269737472696b65735b325d60b01b60808201526020810192909252604082015260a00190565b60405180910390a16000805160206200cbb58339815191528660038151811062002605576200260562006cd0565b602002602001015160126040516200264a9291906060808252600a9082015269737472696b65735b335d60b01b60808201526020810192909252604082015260a00190565b60405180910390a18051604080516060810190915260238082526200267a91906200cc156020830139826200367c565b620026b460006001600160a01b0316826001600160a01b0316146040518060600160405280602981526020016200cc586029913962003c96565b50505050505050565b6026805462001fbc9062006731565b601e546022546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa1580156200272c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002752919062006a4b565b6040805160608082526017908201527f6265666f72652062757965723127732062616c616e63650000000000000000006080820152602081019290925260069082015260a00160405180910390a1601e546023546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562002800573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002826919062006a4b565b6040805160608082526017908201527f6265666f72652062757965723227732062616c616e63650000000000000000006080820152602081019290925260069082015260a00160405180910390a1601e54602480546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529391909116916370a082319101602060405180830381865afa158015620028d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028f9919062006a4b565b6040805160608082526017908201527f6265666f72652062757965723327732062616c616e63650000000000000000006080820152602081019290925260069082015260a00160405180910390a16200295b684be4e7267b6ae000006200381c565b60225460009062002975906001600160a01b031662003ca3565b9050620029b681680ad78ebc5ac6200000604051806040016040528060118152602001700e0dcd840c8decae6dc4ee840dac2e8c6d607b1b81525062003c5a565b602354620029cd906001600160a01b031662003ca3565b905062002a0e816815af1d78b58c400000604051806040016040528060118152602001700e0dcd840c8decae6dc4ee840dac2e8c6d607b1b81525062003c5a565b60245462002a25906001600160a01b031662003ca3565b905062002a6681686c6b935b8bbd400000604051806040016040528060118152602001700e0dcd840c8decae6dc4ee840dac2e8c6d607b1b81525062003c5a565b601e546022546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562002ac6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002aec919062006a4b565b6040805160608082526016908201527561667465722062757965723127732062616c616e636560501b6080820152602081019290925260069082015260a00160405180910390a1601e546023546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562002b93573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002bb9919062006a4b565b6040805160608082526016908201527561667465722062757965723227732062616c616e636560501b6080820152602081019290925260069082015260a00160405180910390a1601e54602480546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529391909116916370a082319101602060405180830381865afa15801562002c5f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c85919062006a4b565b6040805160608082526016908201527561667465722062757965723327732062616c616e636560501b6080820152602081019290925260069082015260a00160405180910390a150565b60606013805480602002602001604051908101604052809291908181526020018280548015620008d3576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620008b4575050505050905090565b601e54601f546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562002d91573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002db7919062006a4b565b600660405162002dc992919062006a65565b60405180910390a1601e546020546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562002e31573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e57919062006a4b565b600660405162002e6992919062006aa9565b60405180910390a1601e546021546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200cbb58339815191529291909116906370a0823190602401602060405180830381865afa15801562002ed1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ef7919062006a4b565b600660405162002f0992919062006aed565b60405180910390a162002f256856bc75e2d6310000006200381c565b601c5460405163ce7fa75d60e01b815260016004820152600060248201819052916001600160a01b03169063ce7fa75d9060440160a060405180830381865afa15801562002f77573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f9d919062006b31565b60200151601f5490915060009062002fbf906001600160a01b03168262003907565b905062002fd98164e8d4a510006200146760068662006bd8565b60205462002ff2906001600160a01b0316600162003907565b90506200300e8164e8d4a5100060066200145b86600262006bfb565b60215462003027906001600160a01b0316600262003907565b9050620015388164e8d4a5100060066200145b86600362006bfb565b620030576856ca569989d86400006200381c565b6022546200306e906001600160a01b031662003f7c565b5060235462003086906001600160a01b031662003f7c565b506024546200309e906001600160a01b031662003f7c565b50565b620030ab62003a63565b601f54620030cd906001600160a01b03166903635c9adc5dea00000062003a77565b50602054620030f0906001600160a01b03166906c6b935b8bbd400000062003a77565b5060215462003113906001600160a01b0316690a2a15d09519be00000062003a77565b5060225460009062003131906001600160a01b03166001836200420b565b90506000805160206200cbb58339815191528160126040516200315692919062006eaa565b60405180910390a1620031a4816802f64846813f5800006040518060400160405280601881526020017708aa4a49ea47440e0e4cadad2eada40dcdee840dac2e8c6d60431b81525062003c5a565b602354620031bf906001600160a01b0316600260006200420b565b90506000805160206200cbb5833981519152816012604051620031e492919062006eaa565b60405180910390a162003232816805ec908d027eb000006040518060400160405280601881526020017708aa4a49ea47440e0e4cadad2eada40dcdee840dac2e8c6d60431b81525062003c5a565b6024546200324d906001600160a01b0316600a60006200420b565b90506000805160206200cbb58339815191528160126040516200327292919062006eaa565b60405180910390a1620032c081681d9ed2c10c797000006040518060400160405280601881526020017708aa4a49ea47440e0e4cadad2eada40dcdee840dac2e8c6d60431b81525062003c5a565b601c5460405163ce7fa75d60e01b815260016004820152600060248201819052916001600160a01b03169063ce7fa75d9060440160a060405180830381865afa15801562003312573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003338919062006b31565b516022546040516370a0823160e01b81526001600160a01b039182166004820152919250600091908316906370a0823190602401602060405180830381865afa1580156200338a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620033b0919062006a4b565b6023546040516370a0823160e01b81526001600160a01b039182166004820152919250600091908416906370a0823190602401602060405180830381865afa15801562003401573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003427919062006a4b565b602480546040516370a0823160e01b81526001600160a01b039182166004820152929350600092908616916370a082319101602060405180830381865afa15801562003477573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200349d919062006a4b565b90506000805160206200cbb5833981519152836012604051620034f392919060608082526010908201526f189d5e595c8c49dcc81c9958d95a5c1d60821b60808201526020810192909252604082015260a00190565b60405180910390a16040805160608082526010908201526f189d5e595c8c89dcc81c9958d95a5c1d60821b60808201526020810184905260128183015290516000805160206200cbb58339815191529181900360a00190a16040805160608082526010908201526f189d5e595c8cc9dcc81c9958d95a5c1d60821b60808201526020810183905260128183015290516000805160206200cbb58339815191529181900360a00190a1620035dd83670de0b6b3a7640000604051806040016040528060158152602001740e4cac6cad2e0e840c8decae6dc4ee840dac2e8c6d605b1b81525062003c5a565b6200361f82671bc16d674ec80000604051806040016040528060158152602001740e4cac6cad2e0e840c8decae6dc4ee840dac2e8c6d605b1b81525062003c5a565b6200366181678ac7230489e80000604051806040016040528060158152602001740e4cac6cad2e0e840c8decae6dc4ee840dac2e8c6d605b1b81525062003c5a565b5050505050565b62003677838383600062004473565b505050565b62001bd882826040516024016200369592919062006edf565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b17905262004678565b62001bd88282604051602401620036de92919062006f0b565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905262004678565b62001bd882826040516024016200372792919062006f3d565b60408051601f198184030181529190526020810180516001600160e01b031663c3b5563560e01b17905262004678565b816040516020016200376a919062006cb2565b604051602081830303815290604052805190602001208360405160200162003793919062006cb2565b604051602081830303815290604052805190602001201462003677576000805160206200cbf583398151915281604051620037cf919062006f63565b60405180910390a162003677838362004699565b8162001bd8576000805160206200cbf58339815191528160405162003809919062006f63565b60405180910390a162001bd882620047c0565b6200382662004838565b601c546040516303906d2960e11b8152600160048201526000916001600160a01b031690630720da5290602401600060405180830381865afa15801562003871573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200389b919081019062006d99565b604090810151601c54915163bf81bf4360e01b8152600481018590529092506001600160a01b039091169063bf81bf4390602401600060405180830381600087803b158015620038ea57600080fd5b505af1158015620038ff573d6000803e3d6000fd5b505050505050565b6040516308b6ac0f60e31b81526001600160a01b0383166004820181905260248201526000906000805160206200cbd5833981519152906345b5607890604401600060405180830381600087803b1580156200396257600080fd5b505af115801562003977573d6000803e3d6000fd5b5050601c54604051627b8a6760e11b8152600481018690526001600160a01b038781166024830152909116925062f714ce91506044015b6020604051808303816000875af1158015620039ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620039f4919062006a4b565b90506000805160206200cc3883398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003a4457600080fd5b505af115801562003a59573d6000803e3d6000fd5b5050505092915050565b62003a6d620048fe565b6200087762004a67565b6040516308b6ac0f60e31b81526001600160a01b0383166004820181905260248201526000906000805160206200cbd5833981519152906345b5607890604401600060405180830381600087803b15801562003ad257600080fd5b505af115801562003ae7573d6000803e3d6000fd5b5050601e54601c546040516370a0823160e01b81526001600160a01b038881166004830152928316945063095ea7b3935091169083906370a0823190602401602060405180830381865afa15801562003b44573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003b6a919062006a4b565b6040518363ffffffff1660e01b815260040162003b89929190620068b8565b6020604051808303816000875af115801562003ba9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003bcf919062006a2d565b50601c54604051638dbdbe6d60e01b815260006004820152602481018490526001600160a01b03858116604483015290911690638dbdbe6d90606401620039ae565b62001bd8828260405160240162003c2a92919062006f94565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b17905262004678565b81831462003677576000805160206200cbf58339815191528160405162003c82919062006f63565b60405180910390a162003677838362004f0a565b62001bd8821582620037e3565b6040516308b6ac0f60e31b81526001600160a01b0382166004820181905260248201526000906000805160206200cbd5833981519152906345b5607890604401600060405180830381600087803b15801562003cfe57600080fd5b505af115801562003d13573d6000803e3d6000fd5b5050601c5460405163ce7fa75d60e01b81526001600482015260006024820181905293506001600160a01b03909116915063ce7fa75d9060440160a060405180830381865afa15801562003d6b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003d91919062006b31565b516040516370a0823160e01b81526001600160a01b0385811660048301529192506000918316906370a0823190602401602060405180830381865afa15801562003ddf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003e05919062006a4b565b601c5460405163095ea7b360e01b81529192506001600160a01b038085169263095ea7b39262003e3c9216908590600401620068b8565b6020604051808303816000875af115801562003e5c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003e82919062006a2d565b50601c54604051631235dd3560e31b81526000600482015260248101839052600160448201526001600160a01b038681166064830152909116906391aee9a8906084015b6020604051808303816000875af115801562003ee6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003f0c919062006a4b565b92506000805160206200cc3883398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003f5c57600080fd5b505af115801562003f71573d6000803e3d6000fd5b505050505050919050565b6040516308b6ac0f60e31b81526001600160a01b0382166004820181905260248201526000906000805160206200cbd5833981519152906345b5607890604401600060405180830381600087803b15801562003fd757600080fd5b505af115801562003fec573d6000803e3d6000fd5b5050601c5460405163ce7fa75d60e01b81526001600482015260006024820181905293506001600160a01b03909116915063ce7fa75d9060440160a060405180830381865afa15801562004044573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200406a919062006b31565b516040516370a0823160e01b81526001600160a01b0385811660048301529192506000918316906370a0823190602401602060405180830381865afa158015620040b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620040de919062006a4b565b601c5460405163095ea7b360e01b81529192506001600160a01b038085169263095ea7b392620041159216908590600401620068b8565b6020604051808303816000875af115801562004135573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200415b919062006a2d565b506000805160206200cc3883398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620041aa57600080fd5b505af1158015620041bf573d6000803e3d6000fd5b5050601c54604051631235dd3560e31b81526000600482015260248101859052600160448201526001600160a01b03888116606483015290911692506391aee9a8915060840162003ec6565b6040516308b6ac0f60e31b81526001600160a01b0384166004820181905260248201526000906000805160206200cbd5833981519152906345b5607890604401600060405180830381600087803b1580156200426657600080fd5b505af11580156200427b573d6000803e3d6000fd5b5050601e54601c546040516370a0823160e01b81526001600160a01b038981166004830152928316945063095ea7b3935091169083906370a0823190602401602060405180830381865afa158015620042d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620042fe919062006a4b565b6040518363ffffffff1660e01b81526004016200431d929190620068b8565b6020604051808303816000875af11580156200433d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004363919062006a2d565b50601c546001600160a01b031663ea3bd5df836200438a86670de0b6b3a764000062006bfb565b6040516001600160e01b031960e085901b168152600481019290925260248201526001600160a01b03871660448201526064016020604051808303816000875af1158015620043dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004403919062006a4b565b90506000805160206200cc3883398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200445357600080fd5b505af115801562004468573d6000803e3d6000fd5b505050509392505050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b1790529151600092871691620044c99162006cb2565b600060405180830381855afa9150503d806000811462004506576040519150601f19603f3d011682016040523d82523d6000602084013e6200450b565b606091505b5091505060008180602001905181019062004527919062006a4b565b905062004561846200455a87620045536370a0823160e01b6200454c600c8d62004fef565b9062005019565b9062005037565b9062005060565b8215620038ff5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691620045ac919062006cb2565b600060405180830381855afa9150503d8060008114620045e9576040519150601f19603f3d011682016040523d82523d6000602084013e620045ee565b606091505b509150506000818060200190518101906200460a919062006a4b565b905082861015620046355762004621868462006bc2565b6200462d908262006bc2565b905062004650565b62004641838762006bc2565b6200464d908262006ce6565b90505b6200466e816200455a6318160ddd60e01b6200454c600c8d62004fef565b5050505050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80604051602001620046ac919062006cb2565b6040516020818303038152906040528051906020012082604051602001620046d5919062006cb2565b604051602081830303815290604052805190602001201462001bd8577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200475e9060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a16000805160206200cbf58339815191528260405162004786919062006fb8565b60405180910390a16000805160206200cbf583398151915281604051620047ae919062006fff565b60405180910390a162001bd86200506c565b806200309e577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620048269060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16200309e6200506c565b6200484262003a63565b601f5462004864906001600160a01b03166903635c9adc5dea00000062003a77565b5060205462004887906001600160a01b03166906c6b935b8bbd400000062003a77565b50602154620048aa906001600160a01b0316690a2a15d09519be00000062003a77565b50602254620048c6906001600160a01b0316600160006200420b565b50602354620048e2906001600160a01b0316600260006200420b565b506024546200309e906001600160a01b0316600a60006200420b565b60408051600480825260a08201909252600091602082016080803683370190505090506856bc75e2d6310000008160008151811062004941576200494162006cd0565b60200260200101818152505068537bcb10baf5900000816001815181106200496d576200496d62006cd0565b602002602001018181525050685150ae84a8cdf000008160028151811062004999576200499962006cd0565b602002602001018181525050684f2591f896a650000081600381518110620049c557620049c562006cd0565b60209081029190910101526000620049e14262093a8062006ce6565b604080518082018252600781526630354f4354323360c81b6020820152601c549151631d47ad9760e21b8152929350916001600160a01b039091169063751eb65c9062004a379086908690869060040162006d39565b600060405180830381600087803b15801562004a5257600080fd5b505af1158015620026b4573d6000803e3d6000fd5b60408051600480825260a08201909252600091602082016080803683370190505090506802f64846813f5800008160008151811062004aaa5762004aaa62006cd0565b602002602001018181525050680202969f8aaf7c00008160018151811062004ad65762004ad662006cd0565b60200260200101818152505068019f5cb86c8f7100008160028151811062004b025762004b0262006cd0565b6020026020010181815250506801473cfd115bb600008160038151811062004b2e5762004b2e62006cd0565b6020908102919091010152601c546040516351ab1b4760e11b81526001600160a01b039091169063a356368e9062004b6b9084906004016200702a565b600060405180830381600087803b15801562004b8657600080fd5b505af115801562004b9b573d6000803e3d6000fd5b5050601c5460405163ce7fa75d60e01b815260016004820181905260006024830181905290945092506001600160a01b039091169063ce7fa75d9060440160a060405180830381865afa15801562004bf7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004c1d919062006b31565b60800151601c5460405163ce7fa75d60e01b815260048101859052600160248201529192506000916001600160a01b039091169063ce7fa75d9060440160a060405180830381865afa15801562004c78573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004c9e919062006b31565b60800151601c5460405163ce7fa75d60e01b815260048101869052600260248201529192506000916001600160a01b039091169063ce7fa75d9060440160a060405180830381865afa15801562004cf9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004d1f919062006b31565b60800151601c5460405163ce7fa75d60e01b815260048101879052600360248201529192506000916001600160a01b039091169063ce7fa75d9060440160a060405180830381865afa15801562004d7a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004da0919062006b31565b60800151905062004dff8660008151811062004dc05762004dc062006cd0565b6020026020010151856040518060400160405280601781526020017611549493d48e881bdc1d1a5bdb88141c9a58d9481cd95d604a1b81525062003c5a565b62004e588660018151811062004e195762004e1962006cd0565b6020026020010151846040518060400160405280601781526020017611549493d48e881bdc1d1a5bdb88141c9a58d9481cd95d604a1b81525062003c5a565b62004eb18660028151811062004e725762004e7262006cd0565b6020026020010151836040518060400160405280601781526020017611549493d48e881bdc1d1a5bdb88141c9a58d9481cd95d604a1b81525062003c5a565b620038ff8660038151811062004ecb5762004ecb62006cd0565b6020026020010151826040518060400160405280601781526020017611549493d48e881bdc1d1a5bdb88141c9a58d9481cd95d604a1b81525062003c5a565b80821462001bd8577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162004f7d9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162004fb691906200703f565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620047ae919062007078565b6005820180546001600160a01b0319166001600160a01b0383161790556000825b90505b92915050565b60038201805463ffffffff191660e083901c17905560008262005010565b6002820180546001810182556000918252602082206001600160a01b0384169101558262005010565b62001bd8828262005170565b6000805160206200cbd58339815191523b156200515f576040516000906000805160206200cbd5833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620050da9083906519985a5b195960d21b90600190602001620070a3565b60408051601f1981840301815290829052620050fa929160200162006c7f565b60408051601f1981840301815290829052620051169162006cb2565b6000604051808303816000865af19150503d806000811462005155576040519150601f19603f3d011682016040523d82523d6000602084013e6200515a565b606091505b505050505b6007805461ff001916610100179055565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b9460009390929091830182828015620051e357602002820191906000526020600020905b815481526020019060010190808311620051ce575b50505050509050600083620051f883620054e0565b6040516020016200520b92919062006c7f565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916200525f918691889101620070c4565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200529a57620052988762005594565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391620052db918791899101620070c4565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162005322919062006cb2565b600060405180830381855afa9150503d80600081146200535f576040519150601f19603f3d011682016040523d82523d6000602084013e62005364565b606091505b509150620053819050816200537b88602062006bfb565b620055a1565b604051630667f9d760e41b8152909250600091506000805160206200cbd58339815191529063667f9d7090620053be908b908790600401620068b8565b602060405180830381865afa158015620053dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005402919062006a4b565b90508082146200542f5760405162461bcd60e51b8152600401620054269062007100565b60405180910390fd5b6040516370ca10bb60e01b81526000805160206200cbd5833981519152906370ca10bb9062005467908b9087908e90600401620070a3565b600060405180830381600087803b1580156200548257600080fd5b505af115801562005497573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff19169055620054cc60028b01600062006461565b896004016000905550505050505050505050565b6060600082516020620054f4919062006bfb565b67ffffffffffffffff8111156200550f576200550f62006907565b6040519080825280601f01601f1916602001820160405280156200553a576020820181803683370190505b50905060005b83518110156200558d57600084828151811062005561576200556162006cd0565b60200260200101519050808260200260200184015250808062005584906200719b565b91505062005540565b5092915050565b600062005013826200562b565b60008060006020855111620055b8578451620055bb565b60205b905060005b818110156200562157620055d681600862006bfb565b86620055e3838862006ce6565b81518110620055f657620055f662006cd0565b01602001516001600160f81b031916901c92909217918062005618816200719b565b915050620055c0565b5090949350505050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200569d57602002820191906000526020600020905b81548152602001906001019080831162005688575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620056e992508591879101620070c4565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562005788576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929162005758918591879101620070c4565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620057968362006326565b604051602001620057a992919062006c7f565b60405160208183030381529060405290506000805160206200cc3883398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200580857600080fd5b505af11580156200581d573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516200583e919062006cb2565b600060405180830381855afa9150503d80600081146200587b576040519150601f19603f3d011682016040523d82523d6000602084013e62005880565b606091505b5091506200589d9050816200589787602062006bfb565b620063d3565b6040516365bc948160e01b81526001600160a01b0389166004820152909250600091506000805160206200cbd5833981519152906365bc9481906024016000604051808303816000875af1158015620058fa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262005924919081019062007224565b509050805160010362005beb5760006000805160206200cc3883398151915260001c6001600160a01b031663667f9d7089846000815181106200596b576200596b62006cd0565b60200260200101516040518363ffffffff1660e01b815260040162005992929190620068b8565b602060405180830381865afa158015620059b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620059d6919062006a4b565b90508062005a3a577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062005a165762005a1662006cd0565b602002602001015160001c60405162005a31929190620068b8565b60405180910390a15b80831462005a5c5760405162461bcd60e51b8152600401620054269062007100565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162005a94929190620070c4565b604051602081830303815290604052805190602001208560008151811062005ac05762005ac062006cd0565b602002602001015160001c60405162005add94939291906200728f565b60405180910390a18160008151811062005afb5762005afb62006cd0565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262005b46918a918c9101620070c4565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162005bb0918a918c9101620070c4565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550620061a9565b600181511115620061385760005b8151811015620061315760006000805160206200cc3883398151915260001c6001600160a01b031663667f9d708a85858151811062005c3c5762005c3c62006cd0565b60200260200101516040518363ffffffff1660e01b815260040162005c63929190620068b8565b602060405180830381865afa15801562005c81573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005ca7919062006a4b565b90508062005d0a577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062005ce65762005ce662006cd0565b602002602001015160001c60405162005d01929190620068b8565b60405180910390a15b83811462005d1957506200611c565b82518119906000805160206200cbd5833981519152906370ca10bb908c9087908790811062005d4c5762005d4c62006cd0565b6020026020010151846040518463ffffffff1660e01b815260040162005d7593929190620070a3565b600060405180830381600087803b15801562005d9057600080fd5b505af115801562005da5573d6000803e3d6000fd5b50505050600060608b6001600160a01b03168860405162005dc7919062006cb2565b600060405180830381855afa9150503d806000811462005e04576040519150601f19603f3d011682016040523d82523d6000602084013e62005e09565b606091505b50909250905062005e2181620058978c602062006bfb565b96505080801562005e3157508186145b1562006084577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162005e6f929190620070c4565b6040516020818303038152906040528051906020012088888151811062005e9a5762005e9a62006cd0565b602002602001015160001c60405162005eb794939291906200728f565b60405180910390a184848151811062005ed45762005ed462006cd0565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262005f1f918d918f9101620070c4565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c60405160200162005fac929190620070c4565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206200cc3883398151915260001c6001600160a01b03166370ca10bb8c8787815181106200601e576200601e62006cd0565b6020026020010151866040518463ffffffff1660e01b81526004016200604793929190620070a3565b600060405180830381600087803b1580156200606257600080fd5b505af115801562006077573d6000803e3d6000fd5b5050505050505062006131565b6000805160206200cc3883398151915260001c6001600160a01b03166370ca10bb8c878781518110620060bb57620060bb62006cd0565b6020026020010151866040518463ffffffff1660e01b8152600401620060e493929190620070a3565b600060405180830381600087803b158015620060ff57600080fd5b505af115801562006114573d6000803e3d6000fd5b505050505050505b8062006128816200719b565b91505062005bf9565b50620061a9565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162005426565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620061ed9188918a9101620070c4565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200627c5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162005426565b6005890180546001600160a01b031916905560038901805463ffffffff19169055620062ad60028a01600062006461565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620062f39188918a9101620070c4565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b60606000825160206200633a919062006bfb565b67ffffffffffffffff81111562006355576200635562006907565b6040519080825280601f01601f19166020018201604052801562006380576020820181803683370190505b50905060005b83518110156200558d576000848281518110620063a757620063a762006cd0565b602002602001015190508082602002602001840152508080620063ca906200719b565b91505062006386565b60008060006020855111620063ea578451620063ed565b60205b905060005b8181101562005621576200640881600862006bfb565b8662006415838862006ce6565b8151811062006428576200642862006cd0565b01602001516001600160f81b031916901c9290921791806200644a816200719b565b915050620063f2565b6158f580620072c083390190565b50805460008255906000526020600020908101906200309e91905b808211156200649257600081556001016200647c565b5090565b6020808252825182820181905260009190848201906040850190845b81811015620064d95783516001600160a01b031683529284019291840191600101620064b2565b50909695505050505050565b60005b8381101562006502578181015183820152602001620064e8565b50506000910152565b6000815180845262006525816020860160208601620064e5565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015620065ef57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015620065d857605f19898503018352620065c58486516200650b565b948e01949350918d0191600101620065a6565b505050978a01979450509188019160010162006560565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620066a757898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620066915783516001600160e01b0319168252928b019260019290920191908b019062006665565b50978a0197955050509187019160010162006627565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200670f57603f19888603018452620066fc8583516200650b565b94509285019290850190600101620066dd565b5092979650505050505050565b6020815260006200501060208301846200650b565b600181811c908216806200674657607f821691505b6020821081036200676757634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c90808316806200678857607f831692505b60208084108203620067aa57634e487b7160e01b600052602260045260246000fd5b83885260208801828015620067c85760018114620067df576200680c565b60ff198716825285151560051b820197506200680c565b60008981526020902060005b878110156200680657815484820152908601908401620067eb565b83019850505b5050505050505092915050565b60a08152601960a08201527f446f76205765656b6c792045544820507574204f7074696f6e0000000000000060c082015260e06020820152600e60e08201526d15d15152d3164b5155120b54155560921b610100820152600061012080604084015262006889818401876200676d565b905082810360608401526200689f81866200676d565b91505060018060a01b0383166080830152949350505050565b6001600160a01b03929092168252602082015260400190565b80516001600160a01b038116811462001fa857600080fd5b600060208284031215620068fc57600080fd5b6200501082620068d1565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171562006943576200694362006907565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171562006975576200697562006907565b604052919050565b6000602082840312156200699057600080fd5b815167ffffffffffffffff80821115620069a957600080fd5b818401915084601f830112620069be57600080fd5b815181811115620069d357620069d362006907565b620069e8601f8201601f191660200162006949565b915080825285602082850101111562006a0057600080fd5b62006a13816020840160208601620064e5565b50949350505050565b8051801515811462001fa857600080fd5b60006020828403121562006a4057600080fd5b620050108262006a1c565b60006020828403121562006a5e57600080fd5b5051919050565b60608082526018908201527f6265666f7265207772697465723127732062616c616e6365000000000000000060808201526020810192909252604082015260a00190565b60608082526018908201527f6265666f7265207772697465723227732062616c616e6365000000000000000060808201526020810192909252604082015260a00190565b60608082526018908201527f6265666f7265207772697465723327732062616c616e6365000000000000000060808201526020810192909252604082015260a00190565b600060a0828403121562006b4457600080fd5b60405160a0810181811067ffffffffffffffff8211171562006b6a5762006b6a62006907565b60405262006b7883620068d1565b8152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b634e487b7160e01b600052601160045260246000fd5b8181038181111562005013576200501362006bac565b60008262006bf657634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141762005013576200501362006bac565b60006080828403121562006c2857600080fd5b6040516080810181811067ffffffffffffffff8211171562006c4e5762006c4e62006907565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b6001600160e01b031983168152815160009062006ca4816004850160208701620064e5565b919091016004019392505050565b6000825162006cc6818460208701620064e5565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b8082018082111562005013576200501362006bac565b600081518084526020808501945080840160005b8381101562006d2e5781518752958201959082019060010162006d10565b509495945050505050565b60608152600062006d4e606083018662006cfc565b846020840152828103604084015262006d6881856200650b565b9695505050505050565b600067ffffffffffffffff82111562006d8f5762006d8f62006907565b5060051b60200190565b6000602080838503121562006dad57600080fd5b825167ffffffffffffffff8082111562006dc657600080fd5b9084019060c0828703121562006ddb57600080fd5b62006de56200691d565b62006df08362006a1c565b8152838301518482015260408301516040820152606083015160608201526080830151608082015260a08301518281111562006e2b57600080fd5b80840193505086601f84011262006e4157600080fd5b8251915062006e5a62006e548362006d72565b62006949565b82815260059290921b8301840191848101908884111562006e7a57600080fd5b938501935b8385101562006e9a5784518252938501939085019062006e7f565b60a0830152509695505050505050565b6060808252600e908201526d3830b4b2b210383932b6b4bab69d60911b60808201526020810192909252604082015260a00190565b60408152600062006ef460408301856200650b565b905060018060a01b03831660208301529392505050565b60408152600062006f2060408301856200650b565b828103602084015262006f3481856200650b565b95945050505050565b60408152600062006f5260408301856200650b565b905082151560208301529392505050565b60408152600560408201526422b93937b960d91b60608201526080602082015260006200501060808301846200650b565b60408152600062006fa960408301856200650b565b90508260208301529392505050565b60408152600062006fe360408301600a8152690808080808081319599d60b21b602082015260400190565b828103602084015262006ff781856200650b565b949350505050565b60408152600062006fe360408301600a8152690808080808149a59da1d60b21b602082015260400190565b60208152600062005010602083018462006cfc565b6040815260006200706a60408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b6040815260006200706a60408301600a8152690808080808149a59da1d60b21b602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b825160009082906020808701845b83811015620070f057815185529382019390820190600101620070d2565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b600060018201620071b057620071b062006bac565b5060010190565b600082601f830112620071c957600080fd5b81516020620071dc62006e548362006d72565b82815260059290921b84018101918181019086841115620071fc57600080fd5b8286015b8481101562007219578051835291830191830162007200565b509695505050505050565b600080604083850312156200723857600080fd5b825167ffffffffffffffff808211156200725157600080fd5b6200725f86838701620071b7565b935060208501519150808211156200727657600080fd5b506200728585828601620071b7565b9150509250929050565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60806040523480156200001157600080fd5b50604051620058f5380380620058f583398101604081905262000034916200027d565b84846000620000448382620003e9565b506001620000538282620003e9565b506200006591506000905033620000f6565b6008620000738482620003e9565b506009620000828382620003e9565b50600780546001600160a01b0319166001600160a01b038316179055604051620000ac90620001aa565b604051809103906000f080158015620000c9573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039290921691909117905550620004b59350505050565b62000102828262000106565b5050565b60008281526006602090815260408083206001600160a01b038516845290915290205460ff16620001025760008281526006602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620001663390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b612371806200358483390190565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001e057600080fd5b81516001600160401b0380821115620001fd57620001fd620001b8565b604051601f8301601f19908116603f01168101908282118183101715620002285762000228620001b8565b816040528381526020925086838588010111156200024557600080fd5b600091505b838210156200026957858201830151818301840152908201906200024a565b600093810190920192909252949350505050565b600080600080600060a086880312156200029657600080fd5b85516001600160401b0380821115620002ae57600080fd5b620002bc89838a01620001ce565b96506020880151915080821115620002d357600080fd5b620002e189838a01620001ce565b95506040880151915080821115620002f857600080fd5b6200030689838a01620001ce565b945060608801519150808211156200031d57600080fd5b506200032c88828901620001ce565b608088015190935090506001600160a01b03811681146200034c57600080fd5b809150509295509295909350565b600181811c908216806200036f57607f821691505b6020821081036200039057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003e457600081815260208120601f850160051c81016020861015620003bf5750805b601f850160051c820191505b81811015620003e057828155600101620003cb565b5050505b505050565b81516001600160401b03811115620004055762000405620001b8565b6200041d816200041684546200035a565b8462000396565b602080601f8311600181146200045557600084156200043c5750858301515b600019600386901b1c1916600185901b178555620003e0565b600085815260208120601f198616915b82811015620004865788860151825594840194600190910190840162000465565b5085821015620004a55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6130bf80620004c56000396000f3fe608060405234801561001057600080fd5b50600436106102105760003560e01c80638dbdbe6d11610125578063bf81bf43116100ad578063d547741f1161007c578063d547741f146104f9578063d90a730e1461050c578063e985e9c514610514578063ea3bd5df14610550578063f36391381461056357600080fd5b8063bf81bf4314610472578063bf91179414610485578063c87b56dd1461048d578063ce7fa75d146104a057600080fd5b8063a217fddf116100f4578063a217fddf1461041e578063a22cb46514610426578063a356368e14610439578063b2016bd41461044c578063b88d4fde1461045f57600080fd5b80638dbdbe6d146103dd57806391aee9a8146103f057806391d148541461040357806395d89b411461041657600080fd5b8063248a9ca3116101a857806342966c681161017757806342966c68146103885780636352211e1461039b57806370a08231146103ae578063751eb65c146103c15780638a19c8bc146103d457600080fd5b8063248a9ca31461032c5780632f2ff15d1461034f57806336568abe1461036257806342842e0e1461037557600080fd5b806307ccd2a6116101e457806307ccd2a614610293578063081812fc146102d9578063095ea7b31461030457806323b872dd1461031957600080fd5b8062f714ce1461021557806301ffc9a71461023b57806306fdde031461025e5780630720da5214610273575b600080fd5b610228610223366004612736565b610576565b6040519081526020015b60405180910390f35b61024e610249366004612778565b610765565b6040519015158152602001610232565b610266610776565b60405161023291906127e5565b6102866102813660046127f8565b610808565b6040516102329190612811565b6102a66102a13660046127f8565b6108eb565b60405161023291908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b6102ec6102e73660046127f8565b61095b565b6040516001600160a01b039091168152602001610232565b610317610312366004612898565b610982565b005b6103176103273660046128c2565b610a9c565b61022861033a3660046127f8565b60009081526006602052604090206001015490565b61031761035d366004612736565b610ace565b610317610370366004612736565b610af3565b6103176103833660046128c2565b610b71565b6103176103963660046127f8565b610b8c565b6102ec6103a93660046127f8565b610bbd565b6102286103bc3660046128fe565b610c1d565b6103176103cf366004612a38565b610ca3565b610228600b5481565b6102286103eb366004612ab9565b610e30565b6102286103fe366004612aee565b611008565b61024e610411366004612736565b611251565b61026661127c565b610228600081565b610317610434366004612b3b565b61128b565b610317610447366004612b72565b611296565b6007546102ec906001600160a01b031681565b61031761046d366004612ba7565b611304565b6103176104803660046127f8565b61133c565b610266611379565b61026661049b3660046127f8565b611407565b6104b36104ae366004612c23565b61147b565b604051610232919081516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080918201519181019190915260a00190565b610317610507366004612736565b611515565b61026661153a565b61024e610522366004612c45565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61022861055e366004612ab9565b611547565b600a546102ec906001600160a01b031681565b600061058061186a565b6000838152600e602090815260408083208054600180830154600380850154600295860154858a52600c8952878a208084015490880154600d8b52898c20848d52909a52979099209384015491840154939095015493979196949591949193919290916105ec886118cd565b6105f5856118cd565b6105fe8c610b8c565b600061060a8385612c85565b61061c88670de0b6b3a7640000612c98565b6106269190612caf565b905060008987101561067f5760008a610647670de0b6b3a764000086612c98565b6106519190612caf565b9050670de0b6b3a7640000816106678a8e612c85565b6106719190612c98565b61067b9190612caf565b9150505b64e8d4a51000670de0b6b3a7640000836106998489612c85565b6106a39190612c98565b6106ad9190612caf565b6106b79190612caf565b9b50600760009054906101000a90046001600160a01b03166001600160a01b031663a9059cbb8e8e6040518363ffffffff1660e01b81526004016107109291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af115801561072f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107539190612cd1565b50505050505050505050505092915050565b60006107708261191d565b92915050565b60606000805461078590612cee565b80601f01602080910402602001604051908101604052809291908181526020018280546107b190612cee565b80156107fe5780601f106107d3576101008083540402835291602001916107fe565b820191906000526020600020905b8154815290600101906020018083116107e157829003601f168201915b5050505050905090565b6108436040518060c0016040528060001515815260200160008152602001600081526020016000815260200160008152602001606081525090565b6000828152600c6020908152604091829020825160c081018452815460ff161515815260018201548184015260028201548185015260038201546060820152600482015460808201526005820180548551818602810186019096528086529194929360a086019392908301828280156108db57602002820191906000526020600020905b8154815260200190600101908083116108c7575b5050505050815250509050919050565b6109166040518060800160405280600081526020016000815260200160008152602001600081525090565b506000908152600e6020908152604091829020825160808101845281548152600182015492810192909252600281015492820192909252600390910154606082015290565b600061096682611942565b506000908152600460205260409020546001600160a01b031690565b600061098d82610bbd565b9050806001600160a01b0316836001600160a01b0316036109ff5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610a1b5750610a1b8133610522565b610a8d5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016109f6565b610a9783836119a1565b505050565b610aa7335b82611a0f565b610ac35760405162461bcd60e51b81526004016109f690612d28565b610a97838383611a8e565b600082815260066020526040902060010154610ae981611bf2565b610a978383611bfc565b6001600160a01b0381163314610b635760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016109f6565b610b6d8282611c82565b5050565b610a9783838360405180602001604052806000815250611304565b610b9533610aa1565b610bb15760405162461bcd60e51b81526004016109f690612d28565b610bba81611ce9565b50565b6000818152600260205260408120546001600160a01b0316806107705760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016109f6565b60006001600160a01b038216610c875760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016109f6565b506001600160a01b031660009081526003602052604090205490565b6000610cae81611bf2565b6000600b546001610cbf9190612d75565b600b5490915015610ce857600b546000908152600c6020526040902054610ce89060ff16611d7e565b6000818152600c602090815260409091208651610d0d926005909201918801906126bf565b506000818152600c60205260408120426001820155600201859055600b82905580805b8751811015610e2657878181518110610d4b57610d4b612d88565b6020908102919091010151600a54909250610d6e906001600160a01b0316611dcb565b604051635edabd8b60e01b81529093506001600160a01b03841690635edabd8b90610dac90309060019087908d906008906009908f90600401612e42565b600060405180830381600087803b158015610dc657600080fd5b505af1158015610dda573d6000803e3d6000fd5b5050600b546000908152600d60209081526040808320868452909152902080546001600160a01b0319166001600160a01b03871617905550819050610e1e81612eab565b915050610d30565b5050505050505050565b6000610e3a611e65565b610e4261186a565b610e4b836118cd565b600b546000908152600c60205260408120600501805486908110610e7157610e71612d88565b90600052602060002001549050610e87816118cd565b6007546001600160a01b03166323b872dd3330670de0b6b3a7640000610eb089620f4240612c98565b610eba9190612caf565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610f0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f329190612cd1565b50600b546000908152600c602052604081206004018054869290610f57908490612d75565b9091555050600b546000908152600d6020908152604080832088845290915281206001018054869290610f8b908490612d75565b9091555050600f805492506001906000610fa58386612d75565b90915550610fb590508383611ebc565b60408051608081018252600b5481526020808201938452818301968752606082019788526000858152600e9091529190912090518155905160018201559251600284015592516003909201919091555090565b600061101261186a565b6000838152600c6020526040812060050180548790811061103557611035612d88565b600091825260208083209190910154868352600d825260408084208a8552909252918190205490516370a0823160e01b81523360048201529192506001600160a01b0316906110d390879083906370a0823190602401602060405180830381865afa1580156110a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cc9190612ec4565b1015611d7e565b60405163079cc67960e41b8152336004820152602481018790526001600160a01b038216906379cc679090604401600060405180830381600087803b15801561111b57600080fd5b505af115801561112f573d6000803e3d6000fd5b5050506000868152600c6020526040902060030154905082811061118a5760405162461bcd60e51b81526020600482015260126024820152710444f563a20596f757220706e6c20697320360741b60448201526064016109f6565b670de0b6b3a76400008761119e8386612c85565b6111a89190612c98565b6111b29190612caf565b6007549094506001600160a01b031663a9059cbb866111d664e8d4a5100088612caf565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611221573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112459190612cd1565b50505050949350505050565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606001805461078590612cee565b610b6d338383611ed6565b60006112a181611bf2565b6112a9611e65565b60005b8251811015610a97578281815181106112c7576112c7612d88565b602090810291909101810151600b546000908152600d835260408082208583529093529190912060040155806112fc81612eab565b9150506112ac565b61130e3383611a0f565b61132a5760405162461bcd60e51b81526004016109f690612d28565b61133684848484611fa4565b50505050565b600061134781611bf2565b61134f611e65565b50600b80546000908152600c6020526040808220805460ff19166001179055915481522060030155565b6009805461138690612cee565b80601f01602080910402602001604051908101604052809291908181526020018280546113b290612cee565b80156113ff5780601f106113d4576101008083540402835291602001916113ff565b820191906000526020600020905b8154815290600101906020018083116113e257829003601f168201915b505050505081565b606061141282611942565b600061142960408051602081019091526000815290565b905060008151116114495760405180602001604052806000815250611474565b8061145384611fd7565b604051602001611464929190612edd565b6040516020818303038152906040525b9392505050565b6114b66040518060a0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b506000918252600d6020908152604080842092845291815291819020815160a08101835281546001600160a01b031681526001820154938101939093526002810154918301919091526003810154606083015260040154608082015290565b60008281526006602052604090206001015461153081611bf2565b610a978383611c82565b6008805461138690612cee565b6000611551611e65565b61155961186a565b611562836118cd565b61156b8461206a565b600b546000908152600c602052604081206002810154600590910180549192918790811061159b5761159b612d88565b906000526020600020015490506115b1816118cd565b600b546000908152600d60209081526040808320898452909152812060028101546001909101546115e29190612c85565b90506000670de0b6b3a76400006115f98885612c98565b6116039190612caf565b90508082116116545760405162461bcd60e51b815260206004820152601a60248201527f444f563a206e6f7420656e6f75676820636f6c6c61746572616c00000000000060448201526064016109f6565b600b546000908152600d602090815260408083208b8452909152902060040154670de0b6b3a764000090611689908990612c98565b6116939190612caf565b6007549095506001600160a01b03166323b872dd3330670de0b6b3a76400006116bf8a620f4240612c98565b6116c99190612caf565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af115801561171d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117419190612cd1565b50600b546000908152600d602090815260408083208b845290915281206003018054879290611771908490612d75565b9091555050600b546000908152600d602090815260408083208b8452909152812060020180548392906117a5908490612d75565b9091555050600b546000908152600d602090815260408083208b8452909152812060010180548792906117d9908490612d75565b9091555050600b546000908152600d602090815260408083208b8452909152908190205490516340c10f1960e01b81526001600160a01b038881166004830152602482018a9052909116906340c10f1990604401600060405180830381600087803b15801561184757600080fd5b505af115801561185b573d6000803e3d6000fd5b50505050505050509392505050565b3332146118cb5760405162461bcd60e51b815260206004820152602960248201527f444f563a205468697320636f6e7472616374206f6e6c7920696e746572616374604482015268207769746820454f4160b81b60648201526084016109f6565b565b60008111610bba5760405162461bcd60e51b815260206004820152601e60248201527f444f563a2076616c7565206d7573742067726561746572207468616e2030000060448201526064016109f6565b60006001600160e01b03198216637965db0b60e01b14806107705750610770826120d1565b6000818152600260205260409020546001600160a01b0316610bba5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016109f6565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906119d682610bbd565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080611a1b83610bbd565b9050806001600160a01b0316846001600160a01b03161480611a6257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80611a865750836001600160a01b0316611a7b8461095b565b6001600160a01b0316145b949350505050565b826001600160a01b0316611aa182610bbd565b6001600160a01b031614611ac75760405162461bcd60e51b81526004016109f690612f0c565b6001600160a01b038216611b295760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016109f6565b826001600160a01b0316611b3c82610bbd565b6001600160a01b031614611b625760405162461bcd60e51b81526004016109f690612f0c565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610bba8133612121565b611c068282611251565b610b6d5760008281526006602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611c3e3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b611c8c8282611251565b15610b6d5760008281526006602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000611cf482610bbd565b9050611cff82610bbd565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b80610bba5760405162461bcd60e51b815260206004820152601c60248201527f444f563a20636f6e646974696f6e20646f65736e2774206d617463680000000060448201526064016109f6565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b038116611e605760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b60448201526064016109f6565b919050565b600b546000908152600c602052604090205460ff16156118cb5760405162461bcd60e51b81526020600482015260126024820152711113d58e881c9bdd5b9908195e1c1a5c995960721b60448201526064016109f6565b610b6d82826040518060200160405280600081525061217a565b816001600160a01b0316836001600160a01b031603611f375760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016109f6565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611faf848484611a8e565b611fbb848484846121ad565b6113365760405162461bcd60e51b81526004016109f690612f51565b60606000611fe4836122ae565b600101905060008167ffffffffffffffff81111561200457612004612919565b6040519080825280601f01601f19166020018201604052801561202e576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461203857509392505050565b600b546000908152600d602090815260408083208484529091528120600401549003610bba5760405162461bcd60e51b8152602060048201526016602482015275444f563a20737472696b65206e6f742061637469766560501b60448201526064016109f6565b60006001600160e01b031982166380ac58cd60e01b148061210257506001600160e01b03198216635b5e139f60e01b145b8061077057506301ffc9a760e01b6001600160e01b0319831614610770565b61212b8282611251565b610b6d5761213881612386565b612143836020612398565b604051602001612154929190612fa3565b60408051601f198184030181529082905262461bcd60e51b82526109f6916004016127e5565b6121848383612534565b61219160008484846121ad565b610a975760405162461bcd60e51b81526004016109f690612f51565b60006001600160a01b0384163b156122a357604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906121f1903390899088908890600401613018565b6020604051808303816000875af192505050801561222c575060408051601f3d908101601f1916820190925261222991810190613055565b60015b612289573d80801561225a576040519150601f19603f3d011682016040523d82523d6000602084013e61225f565b606091505b5080516000036122815760405162461bcd60e51b81526004016109f690612f51565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611a86565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106122ed5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310612319576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061233757662386f26fc10000830492506010015b6305f5e100831061234f576305f5e100830492506008015b612710831061236357612710830492506004015b60648310612375576064830492506002015b600a83106107705760010192915050565b60606107706001600160a01b03831660145b606060006123a7836002612c98565b6123b2906002612d75565b67ffffffffffffffff8111156123ca576123ca612919565b6040519080825280601f01601f1916602001820160405280156123f4576020820181803683370190505b509050600360fc1b8160008151811061240f5761240f612d88565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061243e5761243e612d88565b60200101906001600160f81b031916908160001a9053506000612462846002612c98565b61246d906001612d75565b90505b60018111156124e5576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106124a1576124a1612d88565b1a60f81b8282815181106124b7576124b7612d88565b60200101906001600160f81b031916908160001a90535060049490941c936124de81613072565b9050612470565b5083156114745760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016109f6565b6001600160a01b03821661258a5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016109f6565b6000818152600260205260409020546001600160a01b0316156125ef5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016109f6565b6000818152600260205260409020546001600160a01b0316156126545760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016109f6565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280548282559060005260206000209081019282156126fa579160200282015b828111156126fa5782518255916020019190600101906126df565b5061270692915061270a565b5090565b5b80821115612706576000815560010161270b565b80356001600160a01b0381168114611e6057600080fd5b6000806040838503121561274957600080fd5b823591506127596020840161271f565b90509250929050565b6001600160e01b031981168114610bba57600080fd5b60006020828403121561278a57600080fd5b813561147481612762565b60005b838110156127b0578181015183820152602001612798565b50506000910152565b600081518084526127d1816020860160208601612795565b601f01601f19169290920160200192915050565b60208152600061147460208301846127b9565b60006020828403121561280a57600080fd5b5035919050565b6000602080835260e0830184511515828501528185015160408501526040850151606085015260608501516080850152608085015160a085015260a085015160c080860152818151808452610100870191508483019350600092505b8083101561288d578351825292840192600192909201919084019061286d565b509695505050505050565b600080604083850312156128ab57600080fd5b6128b48361271f565b946020939093013593505050565b6000806000606084860312156128d757600080fd5b6128e08461271f565b92506128ee6020850161271f565b9150604084013590509250925092565b60006020828403121561291057600080fd5b6114748261271f565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561295857612958612919565b604052919050565b600082601f83011261297157600080fd5b8135602067ffffffffffffffff82111561298d5761298d612919565b8160051b61299c82820161292f565b92835284810182019282810190878511156129b657600080fd5b83870192505b848310156129d5578235825291830191908301906129bc565b979650505050505050565b600067ffffffffffffffff8311156129fa576129fa612919565b612a0d601f8401601f191660200161292f565b9050828152838383011115612a2157600080fd5b828260208301376000602084830101529392505050565b600080600060608486031215612a4d57600080fd5b833567ffffffffffffffff80821115612a6557600080fd5b612a7187838801612960565b9450602086013593506040860135915080821115612a8e57600080fd5b508401601f81018613612aa057600080fd5b612aaf868235602084016129e0565b9150509250925092565b600080600060608486031215612ace57600080fd5b8335925060208401359150612ae56040850161271f565b90509250925092565b60008060008060808587031215612b0457600080fd5b843593506020850135925060408501359150612b226060860161271f565b905092959194509250565b8015158114610bba57600080fd5b60008060408385031215612b4e57600080fd5b612b578361271f565b91506020830135612b6781612b2d565b809150509250929050565b600060208284031215612b8457600080fd5b813567ffffffffffffffff811115612b9b57600080fd5b611a8684828501612960565b60008060008060808587031215612bbd57600080fd5b612bc68561271f565b9350612bd46020860161271f565b925060408501359150606085013567ffffffffffffffff811115612bf757600080fd5b8501601f81018713612c0857600080fd5b612c17878235602084016129e0565b91505092959194509250565b60008060408385031215612c3657600080fd5b50508035926020909101359150565b60008060408385031215612c5857600080fd5b612c618361271f565b91506127596020840161271f565b634e487b7160e01b600052601160045260246000fd5b8181038181111561077057610770612c6f565b808202811582820484141761077057610770612c6f565b600082612ccc57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215612ce357600080fd5b815161147481612b2d565b600181811c90821680612d0257607f821691505b602082108103612d2257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b8082018082111561077057610770612c6f565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c9080831680612db857607f831692505b60208084108203612dd957634e487b7160e01b600052602260045260246000fd5b83885260208801828015612df45760018114612e0a57612e35565b60ff198716825285151560051b82019750612e35565b60008981526020902060005b87811015612e2f57815484820152908601908401612e16565b83019850505b5050505050505092915050565b60018060a01b0388168152861515602082015285604082015284606082015260e060808201526000612e7760e0830186612d9e565b82810360a0840152612e898186612d9e565b905082810360c0840152612e9d81856127b9565b9a9950505050505050505050565b600060018201612ebd57612ebd612c6f565b5060010190565b600060208284031215612ed657600080fd5b5051919050565b60008351612eef818460208801612795565b835190830190612f03818360208801612795565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612fdb816017850160208801612795565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161300c816028840160208801612795565b01602801949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061304b908301846127b9565b9695505050505050565b60006020828403121561306757600080fd5b815161147481612762565b60008161308157613081612c6f565b50600019019056fea264697066735822122045c7ec77f863af9bf9c1a5c7d0115c44322896ef52da10b156f23eeeeec690cd64736f6c6343000813003360806040523480156200001157600080fd5b5060408051602080820183526000808352835191820190935291825290818160056200003e8382620002b8565b5060066200004d8282620002b8565b50506007805460ff191690555062000067600033620000c7565b620000937f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620000c7565b620000bf7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33620000c7565b505062000384565b620000d38282620000d7565b5050565b620000e3828262000102565b6000828152600160205260409020620000fd9082620001a2565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620000d3576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200015e3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001b9836001600160a01b038416620001c2565b90505b92915050565b60008181526001830160205260408120546200020b57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620001bc565b506000620001bc565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200023f57607f821691505b6020821081036200026057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000fd57600081815260208120601f850160051c810160208610156200028f5750805b601f850160051c820191505b81811015620002b0578281556001016200029b565b505050505050565b81516001600160401b03811115620002d457620002d462000214565b620002ec81620002e584546200022a565b8462000266565b602080601f8311600181146200032457600084156200030b5750858301515b600019600386901b1c1916600185901b178555620002b0565b600085815260208120601f198616915b82811015620003555788860151825594840194600190910190840162000334565b5085821015620003745787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611fdd80620003946000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c806379cc679011610125578063bf911794116100ad578063d90a730e1161007c578063d90a730e1461046d578063dd62ed3e14610475578063e184c9be14610488578063e63ab1e914610491578063f3c274a6146104a657600080fd5b8063bf91179414610418578063ca15c87314610420578063d539139314610433578063d547741f1461045a57600080fd5b806395d89b41116100f457806395d89b41146103d9578063a217fddf146103e1578063a457c2d7146103e9578063a9059cbb146103fc578063ad8f50081461040f57600080fd5b806379cc6790146103985780638456cb59146103ab5780639010d07c146103b357806391d14854146103c657600080fd5b8063313ce567116101a857806340c10f191161017757806340c10f191461032b57806342966c681461033e5780635c975abb146103515780635edabd8b1461035c57806370a082311461036f57600080fd5b8063313ce567146102ee57806336568abe146102fd57806339509351146103105780633f4ba83a1461032357600080fd5b806318160ddd116101e457806318160ddd1461029157806323b872dd146102a3578063248a9ca3146102b65780632f2ff15d146102d957600080fd5b806301ffc9a71461021657806306fdde031461023e578063095ea7b3146102535780630af0ebf714610266575b600080fd5b6102296102243660046119cd565b6104b8565b60405190151581526020015b60405180910390f35b6102466104e3565b6040516102359190611a1b565b610229610261366004611a6a565b610575565b600a54610279906001600160a01b031681565b6040516001600160a01b039091168152602001610235565b6004545b604051908152602001610235565b6102296102b1366004611a94565b61058d565b6102956102c4366004611ad0565b60009081526020819052604090206001015490565b6102ec6102e7366004611ae9565b6105b1565b005b60405160128152602001610235565b6102ec61030b366004611ae9565b6105db565b61022961031e366004611a6a565b61065e565b6102ec610680565b6102ec610339366004611a6a565b610714565b6102ec61034c366004611ad0565b6107b3565b60075460ff16610229565b6102ec61036a366004611bb8565b6107c0565b61029561037d366004611c7c565b6001600160a01b031660009081526002602052604090205490565b6102ec6103a6366004611a6a565b610994565b6102ec6109a9565b6102796103c1366004611c97565b610a3b565b6102296103d4366004611ae9565b610a5a565b610246610a83565b610295600081565b6102296103f7366004611a6a565b610a92565b61022961040a366004611a6a565b610b0d565b61029560085481565b610246610b1b565b61029561042e366004611ad0565b610ba9565b6102957f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102ec610468366004611ae9565b610bc0565b610246610be5565b610295610483366004611cb9565b610bf2565b61029560095481565b610295600080516020611f8883398151915281565b60075461022990610100900460ff1681565b60006001600160e01b03198216635a05180f60e01b14806104dd57506104dd82610c1d565b92915050565b6060600580546104f290611ce3565b80601f016020809104026020016040519081016040528092919081815260200182805461051e90611ce3565b801561056b5780601f106105405761010080835404028352916020019161056b565b820191906000526020600020905b81548152906001019060200180831161054e57829003601f168201915b5050505050905090565b600033610583818585610c52565b5060019392505050565b60003361059b858285610d76565b6105a6858585610df0565b506001949350505050565b6000828152602081905260409020600101546105cc81610fa6565b6105d68383610fb0565b505050565b6001600160a01b03811633146106505760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61065a8282610fd2565b5050565b6000336105838185856106718383610bf2565b61067b9190611d33565b610c52565b610698600080516020611f8883398151915233610a5a565b61070a5760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e7061757365000000000000006064820152608401610647565b610712610ff4565b565b61073e7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610a5a565b6107a95760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b6064820152608401610647565b61065a8282611046565b6107bd3382611113565b50565b83421061080f5760405162461bcd60e51b815260206004820181905260248201527f43616e2774206465706c6f7920616e206578706972656420636f6e74726163746044820152606401610647565b600a80546001600160a01b0319166001600160a01b038916179055600b6108368482611d94565b50600c6108438382611d94565b506007805461ff00191661010088151502179055600885905560098490556040805180820190915260018152602d60f81b6020820152600090610887908590611253565b90506108938183611253565b90506108b881604051806040016040528060018152602001602d60f81b815250611253565b90506108e1816108dc670de0b6b3a76400006008546108d79190611e54565b61127f565b611253565b905061093b81600760019054906101000a900460ff1661091b57604051806040016040528060028152602001612d4360f01b815250611253565b6040518060400160405280600281526020016102d560f41b815250611253565b9050610948600033611312565b6109727f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633611312565b61098a600080516020611f8883398151915233611312565b5050505050505050565b61099f823383610d76565b61065a8282611113565b6109c1600080516020611f8883398151915233610a5a565b610a335760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f2070617573650000000000000000006064820152608401610647565b61071261131c565b6000828152600160205260408120610a539083611359565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546104f290611ce3565b60003381610aa08286610bf2565b905083811015610b005760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610647565b6105a68286868403610c52565b600033610583818585610df0565b600c8054610b2890611ce3565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5490611ce3565b8015610ba15780601f10610b7657610100808354040283529160200191610ba1565b820191906000526020600020905b815481529060010190602001808311610b8457829003601f168201915b505050505081565b60008181526001602052604081206104dd90611365565b600082815260208190526040902060010154610bdb81610fa6565b6105d68383610fd2565b600b8054610b2890611ce3565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60006001600160e01b03198216637965db0b60e01b14806104dd57506301ffc9a760e01b6001600160e01b03198316146104dd565b6001600160a01b038316610cb45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610647565b6001600160a01b038216610d155760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610647565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d828484610bf2565b90506000198114610dea5781811015610ddd5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610647565b610dea8484848403610c52565b50505050565b6001600160a01b038316610e545760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610647565b6001600160a01b038216610eb65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610647565b610ec183838361136f565b6001600160a01b03831660009081526002602052604090205481811015610f395760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610647565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f999086815260200190565b60405180910390a3610dea565b6107bd813361137a565b610fba82826113d3565b60008281526001602052604090206105d69082611457565b610fdc828261146c565b60008281526001602052604090206105d690826114d1565b610ffc6114e6565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661109c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610647565b6110a86000838361136f565b80600460008282546110ba9190611d33565b90915550506001600160a01b0382166000818152600260209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166111735760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610647565b61117f8260008361136f565b6001600160a01b038216600090815260026020526040902054818110156111f35760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610647565b6001600160a01b03831660008181526002602090815260408083208686039055600480548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60608282604051602001611268929190611e76565b604051602081830303815290604052905092915050565b6060600061128c8361152f565b600101905060008167ffffffffffffffff8111156112ac576112ac611b15565b6040519080825280601f01601f1916602001820160405280156112d6576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846112e057509392505050565b61065a8282610fb0565b611324611607565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110293390565b6000610a53838361164d565b60006104dd825490565b6105d6838383611677565b6113848282610a5a565b61065a57611391816116dd565b61139c8360206116ef565b6040516020016113ad929190611ea5565b60408051601f198184030181529082905262461bcd60e51b825261064791600401611a1b565b6113dd8282610a5a565b61065a576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556114133390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610a53836001600160a01b03841661188b565b6114768282610a5a565b1561065a576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610a53836001600160a01b0384166118da565b60075460ff166107125760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610647565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061156e5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061159a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106115b857662386f26fc10000830492506010015b6305f5e10083106115d0576305f5e100830492506008015b61271083106115e457612710830492506004015b606483106115f6576064830492506002015b600a83106104dd5760010192915050565b60075460ff16156107125760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610647565b600082600001828154811061166457611664611f1a565b9060005260206000200154905092915050565b60075460ff16156105d65760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610647565b60606104dd6001600160a01b03831660145b606060006116fe836002611f30565b611709906002611d33565b67ffffffffffffffff81111561172157611721611b15565b6040519080825280601f01601f19166020018201604052801561174b576020820181803683370190505b509050600360fc1b8160008151811061176657611766611f1a565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061179557611795611f1a565b60200101906001600160f81b031916908160001a90535060006117b9846002611f30565b6117c4906001611d33565b90505b600181111561183c576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106117f8576117f8611f1a565b1a60f81b82828151811061180e5761180e611f1a565b60200101906001600160f81b031916908160001a90535060049490941c9361183581611f47565b90506117c7565b508315610a535760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610647565b60008181526001830160205260408120546118d2575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104dd565b5060006104dd565b600081815260018301602052604081205480156119c35760006118fe600183611f5e565b855490915060009061191290600190611f5e565b905081811461197757600086600001828154811061193257611932611f1a565b906000526020600020015490508087600001848154811061195557611955611f1a565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061198857611988611f71565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104dd565b60009150506104dd565b6000602082840312156119df57600080fd5b81356001600160e01b031981168114610a5357600080fd5b60005b83811015611a125781810151838201526020016119fa565b50506000910152565b6020815260008251806020840152611a3a8160408501602087016119f7565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611a6557600080fd5b919050565b60008060408385031215611a7d57600080fd5b611a8683611a4e565b946020939093013593505050565b600080600060608486031215611aa957600080fd5b611ab284611a4e565b9250611ac060208501611a4e565b9150604084013590509250925092565b600060208284031215611ae257600080fd5b5035919050565b60008060408385031215611afc57600080fd5b82359150611b0c60208401611a4e565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611b3c57600080fd5b813567ffffffffffffffff80821115611b5757611b57611b15565b604051601f8301601f19908116603f01168101908282118183101715611b7f57611b7f611b15565b81604052838152866020858801011115611b9857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600060e0888a031215611bd357600080fd5b611bdc88611a4e565b965060208801358015158114611bf157600080fd5b95506040880135945060608801359350608088013567ffffffffffffffff80821115611c1c57600080fd5b611c288b838c01611b2b565b945060a08a0135915080821115611c3e57600080fd5b611c4a8b838c01611b2b565b935060c08a0135915080821115611c6057600080fd5b50611c6d8a828b01611b2b565b91505092959891949750929550565b600060208284031215611c8e57600080fd5b610a5382611a4e565b60008060408385031215611caa57600080fd5b50508035926020909101359150565b60008060408385031215611ccc57600080fd5b611cd583611a4e565b9150611b0c60208401611a4e565b600181811c90821680611cf757607f821691505b602082108103611d1757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104dd576104dd611d1d565b601f8211156105d657600081815260208120601f850160051c81016020861015611d6d5750805b601f850160051c820191505b81811015611d8c57828155600101611d79565b505050505050565b815167ffffffffffffffff811115611dae57611dae611b15565b611dc281611dbc8454611ce3565b84611d46565b602080601f831160018114611df75760008415611ddf5750858301515b600019600386901b1c1916600185901b178555611d8c565b600085815260208120601f198616915b82811015611e2657888601518255948401946001909101908401611e07565b5085821015611e445787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082611e7157634e487b7160e01b600052601260045260246000fd5b500490565b60008351611e888184602088016119f7565b835190830190611e9c8183602088016119f7565b01949350505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611edd8160178501602088016119f7565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611f0e8160288401602088016119f7565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176104dd576104dd611d1d565b600081611f5657611f56611d1d565b506000190190565b818103818111156104dd576104dd611d1d565b634e487b7160e01b600052603160045260246000fdfe65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862aa26469706673582212207bf66db47d8304edc9b1c21710de9b9134c046e5ce4b3cd35d2ff671073fd68f64736f6c63430008130033eb8ba43ced7537421946bd43e828b8b2b8428927aa8f801c13d934bf11aca57b0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583726f756e6420312c20737472696b65203120707572636861736520726563656970743a885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d7075726368617365207265636569707420636f6e7472616374206e6f7420696e697469616c697a65644552524f523a205772697465506f736974696f6e20636f6c6c61746572616c416d6f756e74a2646970667358221220d1bd18528afdfc162143634ec153b41ca4d4ebcbb730e3d13aa94d70722dde7364736f6c63430008130033",
    "sourceMap": "304:8453:53:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;985:911:54;;;:::i;:::-;;342:21;;;;;-1:-1:-1;;;;;342:21:54;;;;;;-1:-1:-1;;;;;198:32:55;;;180:51;;168:2;153:18;342:21:54;;;;;;;;744:37;;;;;-1:-1:-1;;;;;744:37:54;;;582;;;;;-1:-1:-1;;;;;582:37:54;;;2452:134:7;;;:::i;:::-;;;;;;;:::i;3360:151::-;;;:::i;:::-;;;;;;;:::i;3221:133::-;;;:::i;2922:141::-;;;:::i;539:37:54:-;;;;;-1:-1:-1;;;;;539:37:54;;;787;;;;;-1:-1:-1;;;;;787:37:54;;;369;;;;;-1:-1:-1;;;;;369:37:54;;;2738:178:7;;;:::i;:::-;;;;;;;:::i;353:630:53:-;;;:::i;6168:1330::-;;;:::i;2519:958::-;;;:::i;2592:140:7:-;;;:::i;:::-;;;;;;;:::i;432:69:54:-;;;;;-1:-1:-1;;;;;432:69:54;;;3069:146:7;;;:::i;2157:141::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;6558:14:55;;6551:22;6533:41;;6521:2;6506:18;1819:584:0;6393:187:55;938:39:54;;;:::i;:::-;;;;;;;:::i;701:37::-;;;;;-1:-1:-1;;;;;701:37:54;;;1015:1498:53;;;:::i;894:38:54:-;;;:::i;7726:1029:53:-;;;:::i;2304:142:7:-;;;:::i;4966:1196:53:-;;;:::i;7504:216::-;;;:::i;625:37:54:-;;;;;-1:-1:-1;;;;;625:37:54;;;851:36;;;;;-1:-1:-1;;;;;851:36:54;;;1572:26:0;;;;;;;;;3483:1477:53;;;:::i;985:911:54:-;1192:4;;1025:182;;1124:16;;1154;;-1:-1:-1;;;;;1192:4:54;;;;1025:182;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1019:3:54;:188;;-1:-1:-1;;;;;;1019:188:54;-1:-1:-1;;;;;1019:188:54;;;;;;1234:7;;1218:39;;-1:-1:-1;;;1218:39:54;;-1:-1:-1;;;;;;;;;;;1218:7:54;;;:39;;1234:7;;;1244:12;;1218:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1283:7:54;;1267:39;;-1:-1:-1;;;1267:39:54;;-1:-1:-1;;;;;;;;;;;1267:7:54;-1:-1:-1;1267:7:54;;-1:-1:-1;1267:39:54;;-1:-1:-1;;;;;1283:7:54;;1293:12;;1267:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1332:7:54;;1316:39;;-1:-1:-1;;;1316:39:54;;-1:-1:-1;;;;;;;;;;;1316:7:54;-1:-1:-1;1316:7:54;;-1:-1:-1;1316:39:54;;-1:-1:-1;;;;;1332:7:54;;1342:12;;1316:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1390:6:54;;1374:38;;-1:-1:-1;;;1374:38:54;;-1:-1:-1;;;;;;;;;;;1374:7:54;-1:-1:-1;1374:7:54;;-1:-1:-1;1374:38:54;;-1:-1:-1;;;;;1390:6:54;;1399:12;;1374:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1438:6:54;;1422:38;;-1:-1:-1;;;1422:38:54;;-1:-1:-1;;;;;;;;;;;1422:7:54;-1:-1:-1;1422:7:54;;-1:-1:-1;1422:38:54;;-1:-1:-1;;;;;1438:6:54;;1447:12;;1422:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1486:6:54;;1470:38;;-1:-1:-1;;;1470:38:54;;-1:-1:-1;;;;;;;;;;;1470:7:54;-1:-1:-1;1470:7:54;;-1:-1:-1;1470:38:54;;-1:-1:-1;;;;;1486:6:54;;1495:12;;1470:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1540:4:54;;1555:7;;1527:51;;-1:-1:-1;;;;;;1540:4:54;;;;-1:-1:-1;1555:7:54;1565:12;1527:4;:51::i;:::-;1601:4;;1616:7;;1588:51;;-1:-1:-1;;;;;1601:4:54;;;;1616:7;1626:12;1588:4;:51::i;:::-;1662:4;;1677:7;;1649:51;;-1:-1:-1;;;;;1662:4:54;;;;1677:7;1687:12;1649:4;:51::i;:::-;1732:4;;1747:6;;1719:50;;-1:-1:-1;;;;;1732:4:54;;;;1747:6;1756:12;1719:4;:50::i;:::-;1792:4;;1807:6;;1779:50;;-1:-1:-1;;;;;1792:4:54;;;;1807:6;1816:12;1779:4;:50::i;:::-;1852:4;;1867:6;;1839:50;;-1:-1:-1;;;;;1852:4:54;;;;1867:6;1876:12;1839:4;:50::i;:::-;985:911::o;2452:134:7:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:7;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;3221:133::-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:7;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:7;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;2738:178::-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;353:630:53;395:65;;;;;;;;;;;-1:-1:-1;;;395:65:53;;;;;;;;432:3;;:27;;-1:-1:-1;;;432:27:53;;;;395:65;;-1:-1:-1;;;;;432:3:53;;;;:25;;:27;;;;;;;;;;;:3;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;395:11;:65::i;:::-;470:46;;;;;;;;;;;;-1:-1:-1;;;470:46:53;;;;511:3;;470:46;;;-1:-1:-1;;;;;511:3:53;470:11;:46::i;:::-;526:56;;;;;;;;;;;-1:-1:-1;;;526:56:53;;;;559:3;;:22;;-1:-1:-1;;;559:22:53;;;;526:56;;-1:-1:-1;;;;;559:3:53;;;;:20;;:22;;;;;-1:-1:-1;;559:22:53;;;;;;;:3;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;559:22:53;;;;;;;;;;;;:::i;:::-;526:11;:56::i;:::-;592;;;;;;;;;;;-1:-1:-1;;;592:56:53;;;;625:3;;:22;;-1:-1:-1;;;625:22:53;;;;592:56;;-1:-1:-1;;;;;625:3:53;;;;:20;;:22;;;;;-1:-1:-1;;625:22:53;;;;;;;:3;:22;;;;;;;;;;;;;;592:56;658:68;;;;;;;;;;;-1:-1:-1;;;658:68:53;;;;693:3;;:32;;-1:-1:-1;;;693:32:53;;-1:-1:-1;693:32:53;;;11689:25:55;719:4:53;11730:18:55;;;11723:60;658:68:53;;-1:-1:-1;;;;;693:3:53;;:11;;11662:18:55;;693:32:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;658:11;:68::i;:::-;737:81;746:16;737:81;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;764:3:53;;:22;;;-1:-1:-1;;;764:22:53;;;;-1:-1:-1;;;;;764:3:53;;;;-1:-1:-1;764:20:53;;-1:-1:-1;764:22:53;;;;;-1:-1:-1;764:3:53;;:22;;;;;;:3;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;764:22:53;;;;;;;;;;;;:::i;:::-;737:81;;;;;;;;;;;;;;;;;:8;:81::i;:::-;828;837:16;828:81;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;855:3:53;;:22;;;-1:-1:-1;;;855:22:53;;;;-1:-1:-1;;;;;855:3:53;;;;-1:-1:-1;855:20:53;;-1:-1:-1;855:22:53;;;;;-1:-1:-1;855:3:53;;:22;;;;;;:3;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;855:22:53;;;;;;;;;;;;:::i;:::-;828:81;;;;;;;;;;;;;;;;;:8;:81::i;:::-;930:3;;:32;;-1:-1:-1;;;930:32:53;;:3;:32;;;11689:25:55;956:4:53;11730:18:55;;;11723:60;919:57:53;;-1:-1:-1;;;;;930:3:53;;:11;;11662:18:55;;930:32:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;919:57;;;;;;;;;;;;;-1:-1:-1;;;919:57:53;;;:10;:57::i;6168:1330::-;6272:4;;6295:7;;6272:32;;-1:-1:-1;;;6272:32:53;;-1:-1:-1;;;;;6295:7:53;;;6272:32;;;180:51:55;-1:-1:-1;;;;;;;;;;;6221:87:53;6272:4;;;;;:14;;153:18:55;;6272:32:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6306:1;6221:87;;;;;;;:::i;:::-;;;;;;;;6374:4;;6397:7;;6374:32;;-1:-1:-1;;;6374:32:53;;-1:-1:-1;;;;;6397:7:53;;;6374:32;;;180:51:55;-1:-1:-1;;;;;;;;;;;6323:87:53;6374:4;;;;;:14;;153:18:55;;6374:32:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6408:1;6323:87;;;;;;;:::i;:::-;;;;;;;;6476:4;;6499:7;;6476:32;;-1:-1:-1;;;6476:32:53;;-1:-1:-1;;;;;6499:7:53;;;6476:32;;;180:51:55;-1:-1:-1;;;;;;;;;;;6425:87:53;6476:4;;;;;:14;;153:18:55;;6476:32:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6510:1;6425:87;;;;;;;:::i;:::-;;;;;;;;6531:25;6544:11;6531:12;:25::i;:::-;6589:3;;:28;;-1:-1:-1;;;6589:28:53;;:3;:28;;;14070:25:55;6566:20:53;14111:18:55;;;14104:34;;;6566:20:53;-1:-1:-1;;;;;6589:3:53;;:22;;14043:18:55;;6589:28:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;;6785:7;;6589:44;;-1:-1:-1;6756:8:53;;6767:30;;-1:-1:-1;;;;;6785:7:53;6756:8;6767:9;:30::i;:::-;6756:41;-1:-1:-1;6807:84:53;6756:41;6857:4;6853:1;6820:29;6838:11;6820:15;:29;:::i;:::-;6819:35;;;;:::i;:::-;:42;;;;:::i;:::-;6818:51;6807:84;;;;;;;;;;;;;-1:-1:-1;;;6807:84:53;;;:10;:84::i;:::-;6925:7;;6907:30;;-1:-1:-1;;;;;6925:7:53;;6907:9;:30::i;:::-;6901:36;-1:-1:-1;6947:88:53;6901:36;7001:4;6997:1;6960:29;6978:11;6960:15;:29;:::i;:::-;6959:35;;6993:1;6959:35;:::i;6947:88::-;7069:7;;7051:30;;-1:-1:-1;;;;;7069:7:53;7079:1;7051:9;:30::i;:::-;7045:36;-1:-1:-1;7091:88:53;7045:36;7145:4;7141:1;7104:29;7122:11;7104:15;:29;:::i;:::-;7103:35;;7137:1;7103:35;:::i;7091:88::-;7253:4;;7276:7;;7253:32;;-1:-1:-1;;;7253:32:53;;-1:-1:-1;;;;;7276:7:53;;;7253:32;;;180:51:55;-1:-1:-1;;;;;;;;;;;7203:86:53;7253:4;;;;;:14;;153:18:55;;7253:32:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7203:86;;;15795:2:55;15777:21;;;15834:2;15814:18;;;15807:30;15874:25;15868:3;15853:19;;15846:54;15967:4;15952:20;;15945:36;;;;7287:1:53;15997:18:55;;;15990:34;15932:3;15917:19;7203:86:53;;;;;;;7354:4;;7377:7;;7354:32;;-1:-1:-1;;;7354:32:53;;-1:-1:-1;;;;;7377:7:53;;;7354:32;;;180:51:55;-1:-1:-1;;;;;;;;;;;7304:86:53;7354:4;;;;;:14;;153:18:55;;7354:32:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7304:86;;;16301:2:55;16283:21;;;16340:2;16320:18;;;16313:30;16380:25;16374:3;16359:19;;16352:54;16473:4;16458:20;;16451:36;;;;7388:1:53;16503:18:55;;;16496:34;16438:3;16423:19;7304:86:53;;;;;;;7455:4;;7478:7;;7455:32;;-1:-1:-1;;;7455:32:53;;-1:-1:-1;;;;;7478:7:53;;;7455:32;;;180:51:55;-1:-1:-1;;;;;;;;;;;7405:86:53;7455:4;;;;;:14;;153:18:55;;7455:32:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7405:86;;;16807:2:55;16789:21;;;16846:2;16826:18;;;16819:30;16886:25;16880:3;16865:19;;16858:54;16979:4;16964:20;;16957:36;;;;7489:1:53;17009:18:55;;;17002:34;16944:3;16929:19;7405:86:53;;;;;;;6206:1292;;6168:1330::o;2519:958::-;2561:15;:13;:15::i;:::-;2660:4;;2683:7;;2660:32;;-1:-1:-1;;;2660:32:53;;-1:-1:-1;;;;;2683:7:53;;;2660:32;;;180:51:55;-1:-1:-1;;;;;;;;;;;2600:96:53;2660:4;;;;;:14;;153:18:55;;2660:32:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2600:96;;;17313:2:55;17295:21;;;17352:2;17332:18;;;17325:30;17392:34;17386:3;17371:19;;17364:63;-1:-1:-1;;;17458:3:55;17443:19;;17436:32;17535:4;17520:20;;17513:36;;;;2694:1:53;17565:18:55;;;17558:34;17500:3;17485:19;2600:96:53;;;;;;;2738:7;;2706:12;;2721:38;;-1:-1:-1;;;;;2738:7:53;2748:10;2721:8;:38::i;:::-;2833:4;;2856:7;;2833:32;;-1:-1:-1;;;2833:32:53;;-1:-1:-1;;;;;2856:7:53;;;2833:32;;;180:51:55;2706:53:53;;-1:-1:-1;;;;;;;;;;;;2774:95:53;2833:4;;;:14;;153:18:55;;2833:32:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2774:95;;;17869:2:55;17851:21;;;17908:2;17888:18;;;17881:30;;;17948:34;17942:3;17927:19;;17920:63;18035:18;;18028:34;;;;2867:1:53;18078:18:55;;;18071:34;18015:3;18000:19;2774:95:53;;;;;;;2917:3;;:29;;-1:-1:-1;;;2917:29:53;;;;;18262:25:55;;;2880:34:53;;-1:-1:-1;;;;;2917:3:53;;:20;;18235:18:55;;2917:29:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2880:66;;2956:56;;;;;;;;;;;;;;-1:-1:-1;;;2956:56:53;;;2992:13;:19;;;2956:11;:56::i;:::-;3075:20;;;;;3027:73;;;19198:2:55;19180:21;;;19237:2;19217:18;;;19210:30;-1:-1:-1;;;19271:3:55;19256:19;;19249:52;19353:20;;;19346:36;;;;3097:2:53;19398:18:55;;;19391:34;3027:73:53;-1:-1:-1;;;;;;;;;;;3027:73:53;;;;19333:3:55;3027:73:53;;;-1:-1:-1;;;;;;;;;;;3173:13:53;:30;;;3205:2;3115:93;;;;;;19703:2:55;19685:21;;;19742:2;19722:18;;;19715:30;19782:33;19776:3;19761:19;;19754:62;19883:4;19868:20;;19861:36;;;;-1:-1:-1;19913:18:55;;19906:34;19848:3;19833:19;;19436:510;3115:93:53;;;;;;;;3219:62;3228:13;:19;;;3249:1;3219:62;;;;;;;;;;;;;;;;;:8;:62::i;:::-;3291:76;3300:13;:20;;;3322:11;3291:76;;;;;;;;;;;;;;;;;:8;:76::i;:::-;3377:93;3386:13;:30;;;3418:10;3377:93;;;;;;;;;;;;;;;;;:8;:93::i;:::-;2551:926;;2519:958::o;2592:140:7:-;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:146;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2157:141;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2985:55:0;3066:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:0;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:0;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:0;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;938:39:54:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1015:1498:53:-;1086:16;;;1100:1;1086:16;;;;;;;;;1059:24;;1086:16;;;;;;;;;;-1:-1:-1;1086:16:53;1059:43;;1125:11;1112:7;1120:1;1112:10;;;;;;;;:::i;:::-;;;;;;:24;;;;;1159:11;1146:7;1154:1;1146:10;;;;;;;;:::i;:::-;;;;;;:24;;;;;1193:11;1180:7;1188:1;1180:10;;;;;;;;:::i;:::-;;;;;;:24;;;;;1227:11;1214:7;1222:1;1214:10;;;;;;;;:::i;:::-;;;;;;;;;;:24;1249:14;1266:24;:15;1284:6;1266:24;:::i;:::-;1301:38;;;;;;;;;;;-1:-1:-1;;;1301:38:53;;;;1350:3;;:44;;-1:-1:-1;;;1350:44:53;;1249:41;;-1:-1:-1;1301:38:53;-1:-1:-1;;;;;1350:3:53;;;;:13;;:44;;1364:7;;1249:41;;1301:38;;1350:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1405:10;1418:3;;;;;;;;;-1:-1:-1;;;;;1418:3:53;-1:-1:-1;;;;;1418:16:53;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1475:3;;:23;;-1:-1:-1;;;1475:23:53;;;;;18262:25:55;;;1405:31:53;;-1:-1:-1;1446:26:53;;-1:-1:-1;;;;;1475:3:53;;;;:16;;18235:18:55;;1475:23:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1475:23:53;;;;;;;;;;;;:::i;:::-;1549:3;;:32;;-1:-1:-1;;;1549:32:53;;;;;14070:25:55;;;1549:3:53;14111:18:55;;;14104:34;1446:52:53;;-1:-1:-1;1508:38:53;;-1:-1:-1;;;;;1549:3:53;;;;:22;;14043:18:55;;1549:32:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1508:73;;1591:36;;;;;;;;;;;;;;-1:-1:-1;;;1591:36:53;;;1621:5;1591:11;:36::i;:::-;1637:52;;;;;;;;;;;;;;-1:-1:-1;;;1637:52:53;;;1669:9;:19;;;1637:11;:52::i;:::-;1699:46;;;;;;;;;;;;;;-1:-1:-1;;;1699:46:53;;;1728:9;:16;;;1699:11;:46::i;:::-;1756:35;1765:5;1772:1;1756:35;;;;;;;;;;;;;-1:-1:-1;;;1756:35:53;;;:8;:35::i;:::-;1801:69;1810:9;:19;;;1831:15;1801:69;;;;;;;;;;;;;-1:-1:-1;;;1801:69:53;;;:8;:69::i;:::-;1889:16;;;;1880:76;;1907:24;:15;1925:6;1907:24;:::i;:::-;1880:76;;;;;;;;;;;;;-1:-1:-1;;;1880:76:53;;;:8;:76::i;:::-;1977:9;:17;;;1967:27;;-1:-1:-1;;;;;;;;;;;2046:7:53;2054:1;2046:10;;;;;;;;:::i;:::-;;;;;;;2058:2;2009:52;;;;;;24263:2:55;24245:21;;;24302:2;24282:18;;;24275:30;-1:-1:-1;;;24336:3:55;24321:19;;24314:41;24422:4;24407:20;;24400:36;;;;-1:-1:-1;24452:18:55;;24445:34;24387:3;24372:19;;23996:489;2009:52:53;;;;;;;;-1:-1:-1;;;;;;;;;;;2113:7:53;2121:1;2113:10;;;;;;;;:::i;:::-;;;;;;;2125:2;2076:52;;;;;;24757:2:55;24739:21;;;24796:2;24776:18;;;24769:30;-1:-1:-1;;;24830:3:55;24815:19;;24808:41;24916:4;24901:20;;24894:36;;;;-1:-1:-1;24946:18:55;;24939:34;24881:3;24866:19;;24490:489;2076:52:53;;;;;;;;-1:-1:-1;;;;;;;;;;;2180:7:53;2188:1;2180:10;;;;;;;;:::i;:::-;;;;;;;2192:2;2143:52;;;;;;25251:2:55;25233:21;;;25290:2;25270:18;;;25263:30;-1:-1:-1;;;25324:3:55;25309:19;;25302:41;25410:4;25395:20;;25388:36;;;;-1:-1:-1;25440:18:55;;25433:34;25375:3;25360:19;;24984:489;2143:52:53;;;;;;;;-1:-1:-1;;;;;;;;;;;2247:7:53;2255:1;2247:10;;;;;;;;:::i;:::-;;;;;;;2259:2;2210:52;;;;;;25745:2:55;25727:21;;;25784:2;25764:18;;;25757:30;-1:-1:-1;;;25818:3:55;25803:19;;25796:41;25904:4;25889:20;;25882:36;;;;-1:-1:-1;25934:18:55;;25927:34;25869:3;25854:19;;25478:489;2210:52:53;;;;;;;;2299:31;;2340:67;;;;;;;;;;;;;;;;;;;;;2391:15;2340:11;:67::i;:::-;2417:89;2456:3;-1:-1:-1;;;;;2429:31:53;:15;-1:-1:-1;;;;;2429:31:53;;2417:89;;;;;;;;;;;;;;;;;:11;:89::i;:::-;1049:1464;;;;;;;1015:1498::o;894:38:54:-;;;;;;;:::i;7726:1029:53:-;7827:4;;7850:6;;7827:31;;-1:-1:-1;;;7827:31:53;;-1:-1:-1;;;;;7850:6:53;;;7827:31;;;180:51:55;-1:-1:-1;;;;;;;;;;;7777:85:53;7827:4;;;;;:14;;153:18:55;;7827:31:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7777:85;;;26238:2:55;26220:21;;;26277:2;26257:18;;;26250:30;26317:25;26311:3;26296:19;;26289:54;26410:4;26395:20;;26388:36;;;;7860:1:53;26440:18:55;;;26433:34;26375:3;26360:19;7777:85:53;;;;;;;7927:4;;7950:6;;7927:31;;-1:-1:-1;;;7927:31:53;;-1:-1:-1;;;;;7950:6:53;;;7927:31;;;180:51:55;-1:-1:-1;;;;;;;;;;;7877:85:53;7927:4;;;;;:14;;153:18:55;;7927:31:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7877:85;;;26744:2:55;26726:21;;;26783:2;26763:18;;;26756:30;26823:25;26817:3;26802:19;;26795:54;26916:4;26901:20;;26894:36;;;;7960:1:53;26946:18:55;;;26939:34;26881:3;26866:19;7877:85:53;;;;;;;8027:4;;8050:6;;;8027:31;;-1:-1:-1;;;8027:31:53;;-1:-1:-1;;;;;8050:6:53;;;8027:31;;;180:51:55;-1:-1:-1;;;;;;;;;;;7977:85:53;8027:4;;;;;:14;;153:18:55;8027:31:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7977:85;;;27250:2:55;27232:21;;;27289:2;27269:18;;;27262:30;27329:25;27323:3;27308:19;;27301:54;27422:4;27407:20;;27400:36;;;;8060:1:53;27452:18:55;;;27445:34;27387:3;27372:19;7977:85:53;;;;;;;8081:25;8094:11;8081:12;:25::i;:::-;8182:6;;8155:8;;8166:24;;-1:-1:-1;;;;;8182:6:53;8166:7;:24::i;:::-;8155:35;;8200:51;8209:3;8215:14;8200:51;;;;;;;;;;;;;-1:-1:-1;;;8200:51:53;;;:8;:51::i;:::-;8282:6;;8266:24;;-1:-1:-1;;;;;8282:6:53;8266:7;:24::i;:::-;8261:29;;8300:50;8309:3;8314:14;8300:50;;;;;;;;;;;;;-1:-1:-1;;;8300:50:53;;;:8;:50::i;:::-;8381:6;;8365:24;;-1:-1:-1;;;;;8381:6:53;8365:7;:24::i;:::-;8360:29;;8399:51;8408:3;8413:15;8399:51;;;;;;;;;;;;;-1:-1:-1;;;8399:51:53;;;:8;:51::i;:::-;8515:4;;8538:6;;8515:31;;-1:-1:-1;;;8515:31:53;;-1:-1:-1;;;;;8538:6:53;;;8515:31;;;180:51:55;-1:-1:-1;;;;;;;;;;;8466:84:53;8515:4;;;;;:14;;153:18:55;;8515:31:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8466:84;;;27756:2:55;27738:21;;;27795:2;27775:18;;;27768:30;-1:-1:-1;;;27829:3:55;27814:19;;27807:53;27927:4;27912:20;;27905:36;;;;8548:1:53;27957:18:55;;;27950:34;27892:3;27877:19;8466:84:53;;;;;;;8614:4;;8637:6;;8614:31;;-1:-1:-1;;;8614:31:53;;-1:-1:-1;;;;;8637:6:53;;;8614:31;;;180:51:55;-1:-1:-1;;;;;;;;;;;8565:84:53;8614:4;;;;;:14;;153:18:55;;8614:31:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8565:84;;;28261:2:55;28243:21;;;28300:2;28280:18;;;28273:30;-1:-1:-1;;;28334:3:55;28319:19;;28312:53;28432:4;28417:20;;28410:36;;;;8647:1:53;28462:18:55;;;28455:34;28397:3;28382:19;8565:84:53;;;;;;;8713:4;;8736:6;;;8713:31;;-1:-1:-1;;;8713:31:53;;-1:-1:-1;;;;;8736:6:53;;;8713:31;;;180:51:55;-1:-1:-1;;;;;;;;;;;8664:84:53;8713:4;;;;;:14;;153:18:55;8713:31:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8664:84;;;28766:2:55;28748:21;;;28805:2;28785:18;;;28778:30;-1:-1:-1;;;28839:3:55;28824:19;;28817:53;28937:4;28922:20;;28915:36;;;;8746:1:53;28967:18:55;;;28960:34;28902:3;28887:19;8664:84:53;;;;;;;7762:993;7726:1029::o;2304:142:7:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:7;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;4966:1196:53:-;5070:4;;5093:7;;5070:32;;-1:-1:-1;;;5070:32:53;;-1:-1:-1;;;;;5093:7:53;;;5070:32;;;180:51:55;-1:-1:-1;;;;;;;;;;;5019:87:53;5070:4;;;;;:14;;153:18:55;;5070:32:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5104:1;5019:87;;;;;;;:::i;:::-;;;;;;;;5172:4;;5195:7;;5172:32;;-1:-1:-1;;;5172:32:53;;-1:-1:-1;;;;;5195:7:53;;;5172:32;;;180:51:55;-1:-1:-1;;;;;;;;;;;5121:87:53;5172:4;;;;;:14;;153:18:55;;5172:32:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5206:1;5121:87;;;;;;;:::i;:::-;;;;;;;;5274:4;;5297:7;;5274:32;;-1:-1:-1;;;5274:32:53;;-1:-1:-1;;;;;5297:7:53;;;5274:32;;;180:51:55;-1:-1:-1;;;;;;;;;;;5223:87:53;5274:4;;;;;:14;;153:18:55;;5274:32:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5308:1;5223:87;;;;;;;:::i;:::-;;;;;;;;5321:25;5334:11;5321:12;:25::i;:::-;5380:3;;:28;;-1:-1:-1;;;5380:28:53;;:3;:28;;;14070:25:55;5357:20:53;14111:18:55;;;14104:34;;;5357:20:53;-1:-1:-1;;;;;5380:3:53;;:22;;14043:18:55;;5380:28:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;;5505:7;;5380:44;;-1:-1:-1;5476:8:53;;5487:30;;-1:-1:-1;;;;;5505:7:53;5476:8;5487:9;:30::i;:::-;5476:41;-1:-1:-1;5527:68:53;5476:41;5561:4;5539:19;5557:1;5539:15;:19;:::i;5527:68::-;5629:7;;5611:30;;-1:-1:-1;;;;;5629:7:53;;5611:9;:30::i;:::-;5605:36;-1:-1:-1;5651:72:53;5605:36;5689:4;5685:1;5663:19;:15;5681:1;5663:19;:::i;5651:72::-;5757:7;;5739:30;;-1:-1:-1;;;;;5757:7:53;5767:1;5739:9;:30::i;:::-;5733:36;-1:-1:-1;5779:72:53;5733:36;5817:4;5813:1;5791:19;:15;5809:1;5791:19;:::i;7504:216::-;7550:25;7563:11;7550:12;:25::i;:::-;7613:6;;7585:36;;-1:-1:-1;;;;;7613:6:53;7585:19;:36::i;:::-;-1:-1:-1;7659:6:53;;7631:36;;-1:-1:-1;;;;;7659:6:53;7631:19;:36::i;:::-;-1:-1:-1;7705:6:53;;7677:36;;-1:-1:-1;;;;;7705:6:53;7677:19;:36::i;:::-;;7504:216::o;3483:1477::-;3526:15;:13;:15::i;:::-;3568:7;;3551:44;;-1:-1:-1;;;;;3568:7:53;3578:16;3551:8;:44::i;:::-;-1:-1:-1;3622:7:53;;3605:44;;-1:-1:-1;;;;;3622:7:53;3632:16;3605:8;:44::i;:::-;-1:-1:-1;3676:7:53;;3659:44;;-1:-1:-1;;;;;3676:7:53;3686:16;3659:8;:44::i;:::-;-1:-1:-1;3764:6:53;;3714:12;;3746:32;;-1:-1:-1;;;;;3764:6:53;;3714:12;3746:9;:32::i;:::-;3736:42;;-1:-1:-1;;;;;;;;;;;3834:7:53;3843:2;3793:53;;;;;;;:::i;:::-;;;;;;;;3856:62;3865:7;3874:15;3856:62;;;;;;;;;;;;;-1:-1:-1;;;3856:62:53;;;:8;:62::i;:::-;3956:6;;3938:32;;-1:-1:-1;;;;;3956:6:53;3965:1;3956:6;3938:9;:32::i;:::-;3928:42;;-1:-1:-1;;;;;;;;;;;4026:7:53;4035:2;3985:53;;;;;;;:::i;:::-;;;;;;;;4048:62;4057:7;4066:15;4048:62;;;;;;;;;;;;;-1:-1:-1;;;4048:62:53;;;:8;:62::i;:::-;4148:6;;4130:33;;-1:-1:-1;;;;;4148:6:53;4157:2;4148:6;4130:9;:33::i;:::-;4120:43;;-1:-1:-1;;;;;;;;;;;4219:7:53;4228:2;4178:53;;;;;;;:::i;:::-;;;;;;;;4241:63;4250:7;4259:16;4241:63;;;;;;;;;;;;;-1:-1:-1;;;4241:63:53;;;:8;:63::i;:::-;4341:3;;:28;;-1:-1:-1;;;4341:28:53;;:3;:28;;;14070:25:55;4315:23:53;14111:18:55;;;14104:34;;;4315:23:53;-1:-1:-1;;;;;4341:3:53;;:22;;14043:18:55;;4341:28:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;4441:6;;4408:40;;-1:-1:-1;;;4408:40:53;;-1:-1:-1;;;;;4441:6:53;;;4408:40;;;180:51:55;4341:44:53;;-1:-1:-1;4341:44:53;;4408:32;;;;;;153:18:55;;4408:40:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4503:6;;4470:40;;-1:-1:-1;;;4470:40:53;;-1:-1:-1;;;;;4503:6:53;;;4470:40;;;180:51:55;4396:52:53;;-1:-1:-1;4458:9:53;;4470:32;;;;;;153:18:55;;4470:40:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4565:6;;;4532:40;;-1:-1:-1;;;4532:40:53;;-1:-1:-1;;;;;4565:6:53;;;4532:40;;;180:51:55;4458:52:53;;-1:-1:-1;4520:9:53;;4532:32;;;;;;153:18:55;4532:40:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4520:52;;-1:-1:-1;;;;;;;;;;;4631:4:53;4637:2;4588:52;;;;;;29770:2:55;29752:21;;;29809:2;29789:18;;;29782:30;-1:-1:-1;;;29843:3:55;29828:19;;29821:47;29935:4;29920:20;;29913:36;;;;-1:-1:-1;29965:18:55;;29958:34;29900:3;29885:19;;29503:495;4588:52:53;;;;;;;;4655;;;30270:2:55;30252:21;;;30309:2;30289:18;;;30282:30;-1:-1:-1;;;30343:3:55;30328:19;;30321:47;30435:4;30420:20;;30413:36;;;4704:2:53;30465:18:55;;;30458:34;4655:52:53;;-1:-1:-1;;;;;;;;;;;4655:52:53;;;;30400:3:55;4655:52:53;;;4722;;;30770:2:55;30752:21;;;30809:2;30789:18;;;30782:30;-1:-1:-1;;;30843:3:55;30828:19;;30821:47;30935:4;30920:20;;30913:36;;;4771:2:53;30965:18:55;;;30958:34;4722:52:53;;-1:-1:-1;;;;;;;;;;;4722:52:53;;;;30900:3:55;4722:52:53;;;4785:49;4794:4;4800:8;4785:49;;;;;;;;;;;;;-1:-1:-1;;;4785:49:53;;;:8;:49::i;:::-;4844;4853:4;4859:8;4844:49;;;;;;;;;;;;;-1:-1:-1;;;4844:49:53;;;:8;:49::i;:::-;4903:50;4912:4;4918:9;4903:50;;;;;;;;;;;;;-1:-1:-1;;;4903:50:53;;;:8;:50::i;:::-;3516:1444;;;;;3483:1477::o;26925:117:5:-;27007:28;27012:5;27019:2;27023:4;27029:5;27007:4;:28::i;:::-;26925:117;;;:::o;6994:145:15:-;7061:71;7124:2;7128;7077:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7077:54:15;;;;;;;;;;;;;;-1:-1:-1;;;;;7077:54:15;-1:-1:-1;;;7077:54:15;;;7061:15;:71::i;6693:150::-;6766:70;6828:2;6832;6782:53;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6782:53:15;;;;;;;;;;;;;;-1:-1:-1;;;;;6782:53:15;-1:-1:-1;;;6782:53:15;;;6766:15;:70::i;6849:139::-;6913:68;6973:2;6977;6929:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6929:51:15;;;;;;;;;;;;;;-1:-1:-1;;;;;6929:51:15;-1:-1:-1;;;6929:51:15;;;6913:15;:68::i;18251:254:0:-;18406:1;18389:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18379:30;;;;;;18372:1;18355:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18345:30;;;;;;:64;18341:158;;-1:-1:-1;;;;;;;;;;;18456:3:0;18430:30;;;;;;:::i;:::-;;;;;;;;18474:14;18483:1;18486;18474:8;:14::i;3425:191::-;3504:9;3499:111;;-1:-1:-1;;;;;;;;;;;3560:3:0;3534:30;;;;;;:::i;:::-;;;;;;;;3578:21;3589:9;3578:10;:21::i;4261:232:54:-;4324:9;:7;:9::i;:::-;4357:3;;:19;;-1:-1:-1;;;4357:19:54;;:3;:19;;;18262:25:55;4343:11:54;;-1:-1:-1;;;;;4357:3:54;;:16;;18235:18:55;;4357:19:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4357:19:54;;;;;;;;;;;;:::i;:::-;:26;;;;;4459:3;;:27;;-1:-1:-1;;;4459:27:54;;;;;18262:25:55;;;4357:26:54;;-1:-1:-1;;;;;;4459:3:54;;;;:10;;18235:18:55;;4459:27:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4314:179;4261:232;:::o;4499:213::-;4589:43;;-1:-1:-1;;;4589:43:54;;-1:-1:-1;;;;;33184:15:55;;4589:43:54;;;33166:34:55;;;33216:18;;;33209:43;4563:14:54;;-1:-1:-1;;;;;;;;;;;4589:13:54;;;33101:18:55;;4589:43:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4654:3:54;;:27;;-1:-1:-1;;;4654:27:54;;;;;11689:25:55;;;-1:-1:-1;;;;;11750:32:55;;;11730:18;;;11723:60;4654:3:54;;;;-1:-1:-1;4654:12:54;;-1:-1:-1;11662:18:55;;4654:27:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4642:39;;-1:-1:-1;;;;;;;;;;;309:37:1;;-1:-1:-1;;;;;4691:12:54;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4499:213;;;;:::o;3179:93::-;3223:12;:10;:12::i;:::-;3245:20;:18;:20::i;3282:284::-;3368:43;;-1:-1:-1;;;3368:43:54;;-1:-1:-1;;;;;33184:15:55;;3368:43:54;;;33166:34:55;;;33216:18;;;33209:43;3345:12:54;;-1:-1:-1;;;;;;;;;;;3368:13:54;;;33101:18:55;;3368:43:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3421:4:54;;3442:3;;3448:29;;-1:-1:-1;;;3448:29:54;;-1:-1:-1;;;;;198:32:55;;;3448:29:54;;;180:51:55;3421:4:54;;;;-1:-1:-1;3421:12:54;;-1:-1:-1;3442:3:54;;;3421:4;;3448:14;;153:18:55;;3448:29:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3421:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3498:3:54;;:37;;-1:-1:-1;;;3498:37:54;;:3;:37;;;34031:25:55;34072:18;;;34065:34;;;-1:-1:-1;;;;;34135:32:55;;;34115:18;;;34108:60;3498:3:54;;;;:11;;34004:18:55;;3498:37:54;33821:353:55;6548:139:15;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:15;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:15;-1:-1:-1;;;6628:51:15;;;6612:15;:68::i;5476:178:0:-;5557:1;5552;:6;5548:100;;-1:-1:-1;;;;;;;;;;;5605:3:0;5579:30;;;;;;:::i;:::-;;;;;;;;5623:14;5632:1;5635;5623:8;:14::i;676:107:3:-;754:22;766:4;765:5;772:3;754:10;:22::i;4719:412:54:-;4787:43;;-1:-1:-1;;;4787:43:54;;-1:-1:-1;;;;;33184:15:55;;4787:43:54;;;33166:34:55;;;33216:18;;;33209:43;4767:8:54;;-1:-1:-1;;;;;;;;;;;4787:13:54;;;33101:18:55;;4787:43:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4886:3:54;;:28;;-1:-1:-1;;;4886:28:54;;:3;:28;;;14070:25:55;4840:27:54;14111:18:55;;;14104:34;;;4840:27:54;-1:-1:-1;;;;;;4886:3:54;;;;-1:-1:-1;4886:22:54;;14043:18:55;;4886:28:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;4956:36;;-1:-1:-1;;;4956:36:54;;-1:-1:-1;;;;;198:32:55;;;4956:36:54;;;180:51:55;4886:44:54;;-1:-1:-1;4886:44:54;;4956:21;;;;;153:18:55;;4956:36:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5030:3;;5002:42;;-1:-1:-1;;;5002:42:54;;4941:51;;-1:-1:-1;;;;;;5002:19:54;;;;;;:42;;5030:3;;4941:51;;5002:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5060:3:54;;:40;;-1:-1:-1;;;5060:40:54;;:3;:40;;;34722:25:55;34763:18;;;34756:34;;;5060:3:54;34806:18:55;;;34799:34;-1:-1:-1;;;;;34869:32:55;;;34849:18;;;34842:60;5060:3:54;;;;:10;;34694:19:55;;5060:40:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5054:46;;-1:-1:-1;;;;;;;;;;;309:37:1;;-1:-1:-1;;;;;5110:12:54;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4777:354;;4719:412;;;:::o;5137:451::-;5217:43;;-1:-1:-1;;;5217:43:54;;-1:-1:-1;;;;;33184:15:55;;5217:43:54;;;33166:34:55;;;33216:18;;;33209:43;5197:8:54;;-1:-1:-1;;;;;;;;;;;5217:13:54;;;33101:18:55;;5217:43:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5316:3:54;;:28;;-1:-1:-1;;;5316:28:54;;:3;:28;;;14070:25:55;5270:27:54;14111:18:55;;;14104:34;;;5270:27:54;-1:-1:-1;;;;;;5316:3:54;;;;-1:-1:-1;5316:22:54;;14043:18:55;;5316:28:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;5386:36;;-1:-1:-1;;;5386:36:54;;-1:-1:-1;;;;;198:32:55;;;5386:36:54;;;180:51:55;5316:44:54;;-1:-1:-1;5316:44:54;;5386:21;;;;;153:18:55;;5386:36:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5460:3;;5432:42;;-1:-1:-1;;;5432:42:54;;5371:51;;-1:-1:-1;;;;;;5432:19:54;;;;;;:42;;5460:3;;5371:51;;5432:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;309:37:1;;-1:-1:-1;;;;;5484:15:54;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5517:3:54;;:40;;-1:-1:-1;;;5517:40:54;;:3;:40;;;34722:25:55;34763:18;;;34756:34;;;5517:3:54;34806:18:55;;;34799:34;-1:-1:-1;;;;;34869:32:55;;;34849:18;;;34842:60;5517:3:54;;;;-1:-1:-1;5517:10:54;;-1:-1:-1;34694:19:55;;5517:40:54;34475:433:55;3576:324:54;3683:43;;-1:-1:-1;;;3683:43:54;;-1:-1:-1;;;;;33184:15:55;;3683:43:54;;;33166:34:55;;;33216:18;;;33209:43;3659:12:54;;-1:-1:-1;;;;;;;;;;;3683:13:54;;;33101:18:55;;3683:43:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3736:4:54;;3757:3;;3763:29;;-1:-1:-1;;;3763:29:54;;-1:-1:-1;;;;;198:32:55;;;3763:29:54;;;180:51:55;3736:4:54;;;;-1:-1:-1;3736:12:54;;-1:-1:-1;3757:3:54;;;3736:4;;3763:14;;153:18:55;;3763:29:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3736:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3813:3:54;;-1:-1:-1;;;;;3813:3:54;:12;3826;3840:13;:6;3849:4;3840:13;:::i;:::-;3813:56;;-1:-1:-1;;;;;;3813:56:54;;;;;;;;;;34031:25:55;;;;34072:18;;;34065:34;-1:-1:-1;;;;;34135:32:55;;34115:18;;;34108:60;34004:18;;3813:56:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3803:66;;-1:-1:-1;;;;;;;;;;;309:37:1;;-1:-1:-1;;;;;3879:12:54;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3576:324;;;;;:::o;27321:837:5:-;27491:38;;;-1:-1:-1;;;;;198:32:55;;;27491:38:5;;;;180:51:55;;;;27491:38:5;;;;;;;;;;153:18:55;;;;27491:38:5;;;;;;;-1:-1:-1;;;;;27491:38:5;-1:-1:-1;;;27491:38:5;;;27474:56;;27450:20;;27474:16;;;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27447:83;;;27540:15;27569:7;27558:30;;;;;;;;;;;;:::i;:::-;27540:48;-1:-1:-1;27625:71:5;27691:4;27625:51;27673:2;27625:38;-1:-1:-1;;;27625:22:5;:8;27641:5;27625:15;:22::i;:::-;:26;;:38::i;:::-;:47;;:51::i;:::-;:65;;:71::i;:::-;27742:6;27738:414;;;27811:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27811:34:5;-1:-1:-1;;;27811:34:5;;;27794:52;;27767:23;;-1:-1:-1;;;;;27794:16:5;;;:52;;27811:34;27794:52;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27764:82;;;27860:14;27888:10;27877:33;;;;;;;;;;;;:::i;:::-;27860:50;;27935:7;27928:4;:14;27924:144;;;27973:14;27983:4;27973:7;:14;:::i;:::-;27962:26;;;;:::i;:::-;;;27924:144;;;28038:14;28045:7;28038:4;:14;:::i;:::-;28027:26;;;;:::i;:::-;;;27924:144;28081:60;28134:6;28081:38;-1:-1:-1;;;28081:22:5;:8;28097:5;28081:15;:22::i;:60::-;27750:402;;27406:752;;27321:837;;;;:::o;181:376:15:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;17902:344:0:-;18038:1;18021:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18011:30;;;;;;18004:1;17987:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;17977:30;;;;;;:64;17973:267;;18062:43;;;;;35465:2:55;35447:21;;;35504:2;35484:18;;;35477:30;35543:34;35538:2;35523:18;;35516:62;-1:-1:-1;;;35609:2:55;35594:18;;35587:34;35653:3;35638:19;;35263:400;18062:43:0;;;;;;;;-1:-1:-1;;;;;;;;;;;18155:1:0;18124:33;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;18207:1:0;18176:33;;;;;;:::i;:::-;;;;;;;;18223:6;:4;:6::i;3262:157::-;3322:9;3317:96;;3352:30;;;;;37088:2:55;37070:21;;;37127:2;37107:18;;;37100:30;37166:25;37161:2;37146:18;;37139:53;37224:2;37209:18;;36886:347;3352:30:0;;;;;;;;3396:6;:4;:6::i;3906:349:54:-;3944:15;:13;:15::i;:::-;3986:7;;3969:44;;-1:-1:-1;;;;;3986:7:54;3996:16;3969:8;:44::i;:::-;-1:-1:-1;4040:7:54;;4023:44;;-1:-1:-1;;;;;4040:7:54;4050:16;4023:8;:44::i;:::-;-1:-1:-1;4094:7:54;;4077:44;;-1:-1:-1;;;;;4094:7:54;4104:16;4077:8;:44::i;:::-;-1:-1:-1;4149:6:54;;4131:32;;-1:-1:-1;;;;;4149:6:54;;;4131:9;:32::i;:::-;-1:-1:-1;4191:6:54;;4173:32;;-1:-1:-1;;;;;4191:6:54;4200:1;4191:6;4173:9;:32::i;:::-;-1:-1:-1;4233:6:54;;4215:33;;-1:-1:-1;;;;;4233:6:54;4242:2;4233:6;4215:9;:33::i;1901:383::-;1969:16;;;1983:1;1969:16;;;;;;;;;1942:24;;1969:16;;;;;;;;;;-1:-1:-1;1969:16:54;1942:43;;2008:11;1995:7;2003:1;1995:10;;;;;;;;:::i;:::-;;;;;;:24;;;;;2042:11;2029:7;2037:1;2029:10;;;;;;;;:::i;:::-;;;;;;:24;;;;;2076:11;2063:7;2071:1;2063:10;;;;;;;;:::i;:::-;;;;;;:24;;;;;2110:11;2097:7;2105:1;2097:10;;;;;;;;:::i;:::-;;;;;;;;;;:24;2132:14;2149:24;:15;2167:6;2149:24;:::i;:::-;2184:38;;;;;;;;;;;-1:-1:-1;;;2184:38:54;;;;2233:3;;:44;;-1:-1:-1;;;2233:44:54;;2132:41;;-1:-1:-1;2184:38:54;-1:-1:-1;;;;;2233:3:54;;;;:13;;:44;;2247:7;;2132:41;;2184:38;;2233:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2290:883;2371:16;;;2385:1;2371:16;;;;;;;;;2339:29;;2371:16;;;;;;;;;;-1:-1:-1;2371:16:54;2339:48;;2415:11;2397:12;2410:1;2397:15;;;;;;;;:::i;:::-;;;;;;:29;;;;;2454:11;2436:12;2449:1;2436:15;;;;;;;;:::i;:::-;;;;;;:29;;;;;2493:11;2475:12;2488:1;2475:15;;;;;;;;:::i;:::-;;;;;;:29;;;;;2532:11;2514:12;2527:1;2514:15;;;;;;;;:::i;:::-;;;;;;;;;;:29;2554:3;;:35;;-1:-1:-1;;;2554:35:54;;-1:-1:-1;;;;;2554:3:54;;;;:21;;:35;;2576:12;;2554:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2637:3:54;;:32;;-1:-1:-1;;;2637:32:54;;2612:1;2637:32;;;14070:25:55;;;2599:10:54;14111:18:55;;;14104:34;;;2612:1:54;;-1:-1:-1;2599:10:54;-1:-1:-1;;;;;;2637:3:54;;;;:22;;14043:18:55;;2637:32:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;;2705:3;;:32;;-1:-1:-1;;;2705:32:54;;;;;14070:25:55;;;2705:3:54;14111:18:55;;;14104:34;2637:44:54;;-1:-1:-1;2691:11:54;;-1:-1:-1;;;;;2705:3:54;;;;:22;;14043:18:55;;2705:32:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;;2773:3;;:32;;-1:-1:-1;;;2773:32:54;;;;;14070:25:55;;;2803:1:54;14111:18:55;;;14104:34;2705:44:54;;-1:-1:-1;2759:11:54;;-1:-1:-1;;;;;2773:3:54;;;;:22;;14043:18:55;;2773:32:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;;2841:3;;:32;;-1:-1:-1;;;2841:32:54;;;;;14070:25:55;;;2871:1:54;14111:18:55;;;14104:34;2773:44:54;;-1:-1:-1;2827:11:54;;-1:-1:-1;;;;;2841:3:54;;;;:22;;14043:18:55;;2841:32:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;;2827:58;;2896:60;2905:12;2918:1;2905:15;;;;;;;;:::i;:::-;;;;;;;2922:6;2896:60;;;;;;;;;;;;;-1:-1:-1;;;2896:60:54;;;:8;:60::i;:::-;2966;2975:12;2988:1;2975:15;;;;;;;;:::i;:::-;;;;;;;2992:6;2966:60;;;;;;;;;;;;;-1:-1:-1;;;2966:60:54;;;:8;:60::i;:::-;3036;3045:12;3058:1;3045:15;;;;;;;;:::i;:::-;;;;;;;3062:6;3036:60;;;;;;;;;;;;;-1:-1:-1;;;3036:60:54;;;:8;:60::i;:::-;3106;3115:12;3128:1;3115:15;;;;;;;;:::i;:::-;;;;;;;3132:6;3106:60;;;;;;;;;;;;;-1:-1:-1;;;3106:60:54;;;:8;:60::i;5209:262:0:-;5271:1;5266;:6;5262:203;;5293:41;;;;;38489:2:55;38471:21;;;38528:2;38508:18;;;38501:30;38567:34;38562:2;38547:18;;38540:62;-1:-1:-1;;;38633:2:55;38618:18;;38611:32;38675:3;38660:19;;38287:398;5293:41:0;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;9231:156:10:-;4680:12;;;:22;;-1:-1:-1;;;;;;4680:22:10;-1:-1:-1;;;;;4680:22:10;;;;;-1:-1:-1;4680:12:10;9344:36;9337:43;;9231:156;;;;;:::o;9393:143::-;4835:9;;;:16;;-1:-1:-1;;4835:16:10;;;;;;;;-1:-1:-1;4835:9:10;9499:30;4736:143;9698:152;5151:10;;;:47;;;;;;;9772:18;5151:47;;;;;;-1:-1:-1;;;;;5175:21:10;;5151:47;;;9833:4;9809:34;5047:179;10474:120;10554:33;10568:4;10582:3;10554:13;:33::i;2409:432:0:-;-1:-1:-1;;;;;;;;;;;2985:55:0;3066:16;2452:359;;2652:67;;2489:11;;-1:-1:-1;;;;;;;;;;;1671:64:0;2586:43;;2652:67;;1671:64;;-1:-1:-1;;;2677:17:0;2712:4;;2652:67;;;:::i;:::-;;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;10966:1095:10:-;11060:12;;;;11096:9;;;;11137:11;;;;11181:10;;;11158:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11060:12:10;;;;11096:9;;;;;;11046:11;;11158:33;;11181:10;;11158:33;;11181:10;11158:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11202:17;11239:4;11245:12;11253:3;11245:7;:12::i;:::-;11222:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11222:36:10;;;;;;;;;-1:-1:-1;;;;;11273:15:10;;;;;;:10;;;11222:36;11273:15;;;;;;-1:-1:-1;;;;;;11273:21:10;;;;;;;;;11222:36;;-1:-1:-1;11273:21:10;;:15;;11305:34;;11322:3;;11327:11;;11305:34;;:::i;:::-;;;;-1:-1:-1;;11305:34:10;;;;;;;;;11295:45;;11305:34;11295:45;;;;11273:68;;;;;;;;;;-1:-1:-1;11273:68:10;;;;11268:110;;11357:10;11362:4;11357;:10::i;:::-;;11268:110;-1:-1:-1;;;;;11410:15:10;;11387:12;11410:15;;;;;;;;;;;-1:-1:-1;;;;;;11410:21:10;;;;;;;;;11442:34;;11410:21;;11387:12;;11442:34;;11459:3;;11464:11;;11442:34;;:::i;:::-;;;;;;;;;;;;;11432:45;;;;;;11410:68;;;;;;;;;;;;11402:77;;11387:92;;11490:12;11529:17;11550:3;-1:-1:-1;;;;;11550:14:10;11565:4;11550:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11526:44:10;-1:-1:-1;11591:38:10;;-1:-1:-1;11526:44:10;11612:16;11617:11;11612:2;:16;:::i;:::-;11591:14;:38::i;:::-;11664:18;;-1:-1:-1;;;11664:18:10;;11584:45;;-1:-1:-1;11649:12:10;;-1:-1:-1;;;;;;;;;;;;11664:7:10;;;:18;;11672:3;;11677:4;;11664:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11649:33;;11705:4;11697;:12;11693:218;;11725:175;;-1:-1:-1;;;11725:175:10;;;;;;;:::i;:::-;;;;;;;;;11920:24;;-1:-1:-1;;;11920:24:10;;-1:-1:-1;;;;;;;;;;;11920:8:10;;;:24;;11929:3;;11934:4;;11940:3;;11920:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11961:12:10;;;11954:19;;-1:-1:-1;;;;;;11954:19:10;;;-1:-1:-1;11990:9:10;;;11983:16;;-1:-1:-1;;11983:16:10;;;12009:17;-1:-1:-1;12016:10:10;;11961:12;12009:17;:::i;:::-;12043:4;:11;;12036:18;;;11036:1025;;;;;;;;10966:1095;;:::o;13395:393::-;13454:12;13478:19;13510:1;:8;13521:2;13510:13;;;;:::i;:::-;13500:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13500:24:10;;13478:46;;13539:9;13534:224;13558:1;:8;13554:1;:12;13534:224;;;13587:9;13599:1;13601;13599:4;;;;;;;;:::i;:::-;;;;;;;13587:16;;13732:1;13726;13722:2;13718:10;13714:2;13710:19;13702:6;13698:32;13691:43;13673:75;13568:3;;;;;:::i;:::-;;;;13534:224;;;-1:-1:-1;13775:6:10;13395:393;-1:-1:-1;;13395:393:10:o;9110:115::-;9167:7;9193:25;9213:4;9193:19;:25::i;13034:304::-;13112:7;13131:11;13153;13178:2;13167:1;:8;:13;:29;;13188:1;:8;13167:29;;;13183:2;13167:29;13153:43;;13211:9;13206:106;13230:3;13226:1;:7;13206:106;;;13295:5;:1;13299;13295:5;:::i;:::-;13269:1;13271:10;13280:1;13271:6;:10;:::i;:::-;13269:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;13269:13:10;13261:40;;13254:47;;;;;13235:3;;;;:::i;:::-;;;;13206:106;;;-1:-1:-1;13328:3:10;;13034:304;-1:-1:-1;;;;13034:304:10:o;1264:3304::-;1354:12;;;;1390:9;;;;1431:11;;;;1475:10;;;1452:33;;;;;;;;;;;;;;;;;;;1321:7;;-1:-1:-1;;;;;1354:12:10;;1390:9;;;1431:11;1321:7;;1452:33;;1475:10;;1452:33;;;1475:10;1452:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1536:15:10;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;1536:21:10;;;;;;;;;1568:34;;1452:33;;-1:-1:-1;1536:21:10;:15;;-1:-1:-1;1568:34:10;;-1:-1:-1;1452:33:10;;1590:11;;1568:34;;:::i;:::-;;;;-1:-1:-1;;1568:34:10;;;;;;;;;1558:45;;1568:34;1558:45;;;;1536:68;;;;;;;;;;-1:-1:-1;1536:68:10;;;;1532:174;;;-1:-1:-1;;;;;1627:15:10;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;1627:21:10;;;;;;;;;1659:34;;1627:21;;:10;1659:34;;1676:3;;1681:11;;1659:34;;:::i;:::-;;;;;;;;;;;;;1649:45;;;;;;1627:68;;;;;;;;;;;;1620:75;;;;;;1264:3304;;;:::o;1532:174::-;1715:17;1752:4;1758:12;1766:3;1758:7;:12::i;:::-;1735:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1715:56;;-1:-1:-1;;;;;;;;;;;580:37:10;;-1:-1:-1;;;;;1781:9:10;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:12;1841:17;1862:3;-1:-1:-1;;;;;1862:14:10;1877:4;1862:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1838:44:10;-1:-1:-1;1903:38:10;;-1:-1:-1;1838:44:10;1924:16;1929:11;1924:2;:16;:::i;:::-;1903:14;:38::i;:::-;1990:25;;-1:-1:-1;;;1990:25:10;;-1:-1:-1;;;;;198:32:55;;1990:25:10;;;180:51:55;1896:45:10;;-1:-1:-1;1963:22:10;;-1:-1:-1;;;;;;;;;;;;1990:11:10;;;153:18:55;;1990:25:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1990:25:10;;;;;;;;;;;;:::i;:::-;1962:53;;;2029:5;:12;2045:1;2029:17;2025:2167;;2062:12;-1:-1:-1;;;;;;;;;;;580:37:10;;-1:-1:-1;;;;;2077:7:10;;2085:3;2090:5;2096:1;2090:8;;;;;;;;:::i;:::-;;;;;;;2077:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2062:37;-1:-1:-1;2062:37:10;2113:106;;2160:44;2181:3;2194:5;2200:1;2194:8;;;;;;;;:::i;:::-;;;;;;;2186:17;;2160:44;;;;;;;:::i;:::-;;;;;;;;2113:106;2244:4;2236;:12;2232:238;;2268:187;;-1:-1:-1;;;2268:187:10;;;;;;;:::i;:::-;2488:86;2498:3;2503:4;2536:3;2541:11;2519:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2509:45;;;;;;2564:5;2570:1;2564:8;;;;;;;;:::i;:::-;;;;;;;2556:17;;2488:86;;;;;;;;;:::i;:::-;;;;;;;;2667:5;2673:1;2667:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2588:15:10;;2659:17;2588:15;;;;;;;;;;-1:-1:-1;;;;;;2588:21:10;;;;;;;;;2620:34;;2667:8;;2588:21;;2620:34;;2637:3;;2642:11;;2620:34;;:::i;:::-;;;;-1:-1:-1;;2620:34:10;;;;;;;;;2610:45;;2620:34;2610:45;;;;2588:68;;;;;;;;;;;;-1:-1:-1;2588:68:10;;;:88;;;;-1:-1:-1;;;;;2690:15:10;;;;2761:4;2690:10;;;:15;;;;;-1:-1:-1;;;;;;2690:21:10;;;;;;;;;2722:34;;2761:4;;-1:-1:-1;2722:34:10;;2739:3;;2744:11;;2722:34;;:::i;:::-;;;;;;;-1:-1:-1;;2722:34:10;;;;;;2712:45;;2722:34;2712:45;;;;2690:68;;;;;;;;;;-1:-1:-1;2690:68:10;:75;;-1:-1:-1;;2690:75:10;;;;;;;;;;-1:-1:-1;2025:2167:10;;;2801:1;2786:5;:12;:16;2782:1410;;;2823:9;2818:1259;2842:5;:12;2838:1;:16;2818:1259;;;2879:12;-1:-1:-1;;;;;;;;;;;580:37:10;;-1:-1:-1;;;;;2894:7:10;;2902:3;2907:5;2913:1;2907:8;;;;;;;;:::i;:::-;;;;;;;2894:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2879:37;-1:-1:-1;2879:37:10;2934:114;;2985:44;3006:3;3019:5;3025:1;3019:8;;;;;;;;:::i;:::-;;;;;;;3011:17;;2985:44;;;;;;;:::i;:::-;;;;;;;;2934:114;3077:4;3069;:12;3065:67;;3105:8;;;3065:67;3229:8;;3167:5;;;-1:-1:-1;;;;;;;;;;;3215:8:10;;;3224:3;;3229:5;;3235:1;;3229:8;;;;;;:::i;:::-;;;;;;;3239:7;3215:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3265:12;3317:17;3374:3;-1:-1:-1;;;;;3374:14:10;3389:4;3374:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3356:38:10;;-1:-1:-1;3356:38:10;-1:-1:-1;3423:38:10;3356;3444:16;3449:11;3444:2;:16;:::i;3423:38::-;3416:45;;3295:185;3502:7;:26;;;;;3521:7;3513:4;:15;3502:26;3498:518;;;3626:86;3636:3;3641:4;3674:3;3679:11;3657:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3647:45;;;;;;3702:5;3708:1;3702:8;;;;;;;;:::i;:::-;;;;;;;3694:17;;3626:86;;;;;;;;;:::i;:::-;;;;;;;;3813:5;3819:1;3813:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3734:15:10;;3805:17;3734:15;;;;;;;;;;-1:-1:-1;;;;;;3734:21:10;;;;;;;;;3766:34;;3813:8;;3734:21;;3766:34;;3783:3;;3788:11;;3766:34;;:::i;:::-;;;;;;;;;;;;;3756:45;;;;;;3734:68;;;;;;;;;;;:88;;;;3915:4;3844;:10;;:15;3855:3;-1:-1:-1;;;;;3844:15:10;-1:-1:-1;;;;;3844:15:10;;;;;;;;;;;;:21;3860:4;-1:-1:-1;;;;;3844:21:10;;-1:-1:-1;;;;;3844:21:10;;;;;;;;;;;;;:68;3893:3;3898:11;3876:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3866:45;;;;;;3844:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;580:37:10;;-1:-1:-1;;;;;3941:8:10;;3950:3;3955:5;3961:1;3955:8;;;;;;;;:::i;:::-;;;;;;;3965:4;3941:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3992:5;;;;;3498:518;-1:-1:-1;;;;;;;;;;;580:37:10;;-1:-1:-1;;;;;4033:8:10;;4042:3;4047:5;4053:1;4047:8;;;;;;;;:::i;:::-;;;;;;;4057:4;4033:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2861:1216;;;2818:1259;2856:3;;;;:::i;:::-;;;;2818:1259;;;;2782:1410;;;4107:74;;;-1:-1:-1;;;4107:74:10;;43183:2:55;4107:74:10;;;43165:21:55;43202:18;;;43195:30;;;;43261:34;43241:18;;;43234:62;43332:34;43312:18;;;43305:62;43384:19;;4107:74:10;42981:428:55;2782:1410:10;-1:-1:-1;;;;;4223:15:10;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;4223:21:10;;;;;;;;;4255:34;;4223:21;;:15;4255:34;;4272:3;;4277:11;;4255:34;;:::i;:::-;;;;-1:-1:-1;;4255:34:10;;;;;;;;;4245:45;;4255:34;4245:45;;;;4223:68;;;;;;;;;;-1:-1:-1;4223:68:10;;;;4202:162;;;;-1:-1:-1;;;4202:162:10;;43616:2:55;4202:162:10;;;43598:21:55;43655:2;43635:18;;;43628:30;43694:34;43674:18;;;43667:62;-1:-1:-1;;;43745:18:55;;;43738:45;43800:19;;4202:162:10;43414:411:55;4202:162:10;4382:12;;;4375:19;;-1:-1:-1;;;;;;4375:19:10;;;4411:9;;;4404:16;;-1:-1:-1;;4404:16:10;;;4430:17;-1:-1:-1;4437:10:10;;4382:12;4430:17;:::i;:::-;4457:18;4464:11;;;4457:18;;;-1:-1:-1;;;;;4493:15:10;;;;;;;;;;;;-1:-1:-1;;;;;;4493:21:10;;;;;;;;;4525:34;;4493:21;;4457:18;4525:34;;4542:3;;4547:11;;4525:34;;:::i;:::-;;;;;;;;;;;;;4515:45;;;;;;4493:68;;;;;;;;;;;;4486:75;;;;;;;;;1264:3304;;;:::o;8473:393::-;8532:12;8556:19;8588:1;:8;8599:2;8588:13;;;;:::i;:::-;8578:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8578:24:10;;8556:46;;8617:9;8612:224;8636:1;:8;8632:1;:12;8612:224;;;8665:9;8677:1;8679;8677:4;;;;;;;;:::i;:::-;;;;;;;8665:16;;8810:1;8804;8800:2;8796:10;8792:2;8788:19;8780:6;8776:32;8769:43;8751:75;8646:3;;;;;:::i;:::-;;;;8612:224;;8163:304;8241:7;8260:11;8282;8307:2;8296:1;:8;:13;:29;;8317:1;:8;8296:29;;;8312:2;8296:29;8282:43;;8340:9;8335:106;8359:3;8355:1;:7;8335:106;;;8424:5;:1;8428;8424:5;:::i;:::-;8398:1;8400:10;8409:1;8400:6;:10;:::i;:::-;8398:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;8398:13:10;8390:40;;8383:47;;;;;8364:3;;;;:::i;:::-;;;;8335:106;;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;616:658:55:-;787:2;839:21;;;909:13;;812:18;;;931:22;;;758:4;;787:2;1010:15;;;;984:2;969:18;;;758:4;1053:195;1067:6;1064:1;1061:13;1053:195;;;1132:13;;-1:-1:-1;;;;;1128:39:55;1116:52;;1223:15;;;;1188:12;;;;1164:1;1082:9;1053:195;;;-1:-1:-1;1265:3:55;;616:658;-1:-1:-1;;;;;;616:658:55:o;1279:250::-;1364:1;1374:113;1388:6;1385:1;1382:13;1374:113;;;1464:11;;;1458:18;1445:11;;;1438:39;1410:2;1403:10;1374:113;;;-1:-1:-1;;1521:1:55;1503:16;;1496:27;1279:250::o;1534:271::-;1576:3;1614:5;1608:12;1641:6;1636:3;1629:19;1657:76;1726:6;1719:4;1714:3;1710:14;1703:4;1696:5;1692:16;1657:76;:::i;:::-;1787:2;1766:15;-1:-1:-1;;1762:29:55;1753:39;;;;1794:4;1749:50;;1534:271;-1:-1:-1;;1534:271:55:o;1810:1742::-;2043:2;2095:21;;;2165:13;;2068:18;;;2187:22;;;2014:4;;2043:2;2228;;2246:18;;;;2283:1;2326:15;;;2311:31;;2307:40;;2370:15;;;2014:4;;2434:1089;2450:6;2445:3;2442:15;2434:1089;;;-1:-1:-1;;2519:22:55;;;2515:36;2503:49;;2575:13;;2662:9;;-1:-1:-1;;;;;2658:35:55;2643:51;;2733:11;;2727:18;2765:15;;;2758:27;;;2846:19;;2615:15;;;2878:24;;;3059:21;;;;2925:2;3007:17;;;2995:30;;2991:39;;;2949:15;;;;3104:1;3118:296;3134:8;3129:3;3126:17;3118:296;;;3240:2;3236:7;3227:6;3219;3215:19;3211:33;3204:5;3197:48;3272:42;3307:6;3296:8;3290:15;3272:42;:::i;:::-;3343:17;;;;3262:52;-1:-1:-1;3386:14:55;;;;3162:1;3153:11;3118:296;;;-1:-1:-1;;;3501:12:55;;;;3437:6;-1:-1:-1;;3466:15:55;;;;2476:1;2467:11;2434:1089;;;-1:-1:-1;3540:6:55;;1810:1742;-1:-1:-1;;;;;;;;;;1810:1742:55:o;3790:1567::-;3992:4;4021:2;4061;4050:9;4046:18;4091:2;4080:9;4073:21;4114:6;4149;4143:13;4180:6;4172;4165:22;4206:2;4196:12;;4239:2;4228:9;4224:18;4217:25;;4301:2;4291:6;4288:1;4284:14;4273:9;4269:30;4265:39;4339:2;4331:6;4327:15;4360:1;4381;4391:937;4407:6;4402:3;4399:15;4391:937;;;4476:22;;;-1:-1:-1;;4472:36:55;4460:49;;4532:13;;4619:9;;-1:-1:-1;;;;;4615:35:55;4600:51;;4690:11;;4684:18;4722:15;;;4715:27;;;4803:19;;4572:15;;;4835:24;;;4925:21;;;;4970:1;;4893:2;4881:15;;;4984:236;5000:8;4995:3;4992:17;4984:236;;;5081:15;;-1:-1:-1;;;;;;5077:42:55;5063:57;;5189:17;;;;5028:1;5019:11;;;;;5146:14;;;;4984:236;;;-1:-1:-1;5306:12:55;;;;5243:5;-1:-1:-1;;;5271:15:55;;;;4433:1;4424:11;4391:937;;;-1:-1:-1;5345:6:55;;3790:1567;-1:-1:-1;;;;;;;;;3790:1567:55:o;5362:803::-;5524:4;5553:2;5593;5582:9;5578:18;5623:2;5612:9;5605:21;5646:6;5681;5675:13;5712:6;5704;5697:22;5750:2;5739:9;5735:18;5728:25;;5812:2;5802:6;5799:1;5795:14;5784:9;5780:30;5776:39;5762:53;;5850:2;5842:6;5838:15;5871:1;5881:255;5895:6;5892:1;5889:13;5881:255;;;5988:2;5984:7;5972:9;5964:6;5960:22;5956:36;5951:3;5944:49;6016:40;6049:6;6040;6034:13;6016:40;:::i;:::-;6006:50;-1:-1:-1;6114:12:55;;;;6079:15;;;;5917:1;5910:9;5881:255;;;-1:-1:-1;6153:6:55;;5362:803;-1:-1:-1;;;;;;;5362:803:55:o;6585:220::-;6734:2;6723:9;6716:21;6697:4;6754:45;6795:2;6784:9;6780:18;6772:6;6754:45;:::i;6810:380::-;6889:1;6885:12;;;;6932;;;6953:61;;7007:4;6999:6;6995:17;6985:27;;6953:61;7060:2;7052:6;7049:14;7029:18;7026:38;7023:161;;7106:10;7101:3;7097:20;7094:1;7087:31;7141:4;7138:1;7131:15;7169:4;7166:1;7159:15;7023:161;;6810:380;;;:::o;7321:1081::-;7406:12;;7371:3;;7461:1;7481:18;;;;7534;;;;7561:61;;7615:4;7607:6;7603:17;7593:27;;7561:61;7641:2;7689;7681:6;7678:14;7658:18;7655:38;7652:161;;7735:10;7730:3;7726:20;7723:1;7716:31;7770:4;7767:1;7760:15;7798:4;7795:1;7788:15;7652:161;548:19;;;600:4;591:14;;7910:18;7937:132;;;;8083:1;8078:318;;;;7903:493;;7937:132;-1:-1:-1;;7972:24:55;;7958:39;;8042:14;;8035:22;8032:1;8028:30;8017:42;;;-1:-1:-1;7937:132:55;;8078:318;7268:1;7261:14;;;7305:4;7292:18;;8172:1;8186:167;8200:6;8197:1;8194:13;8186:167;;;8280:14;;8265:13;;;8258:37;8323:16;;;;8215:10;;8186:167;;;8373:13;;;-1:-1:-1;;7903:493:55;;;;;;;;7321:1081;;;;:::o;8407:996::-;8828:3;8817:9;8810:22;8869:2;8863:3;8852:9;8848:19;8841:31;8909:27;8903:3;8892:9;8888:19;8881:56;8975:3;8968:4;8957:9;8953:20;8946:33;9016:2;9010:3;8999:9;8995:19;8988:31;-1:-1:-1;;;9050:3:55;9039:9;9035:19;9028:45;8791:4;9092:3;9131:2;9126;9115:9;9111:18;9104:30;9157:53;9206:2;9195:9;9191:18;9183:6;9157:53;:::i;:::-;9143:67;;9258:9;9250:6;9246:22;9241:2;9230:9;9226:18;9219:50;9286:41;9320:6;9312;9286:41;:::i;:::-;9278:49;;;9393:1;9389;9384:3;9380:11;9376:19;9368:6;9364:32;9358:3;9347:9;9343:19;9336:61;8407:996;;;;;;:::o;9408:305::-;-1:-1:-1;;;;;9631:32:55;;;;9613:51;;9695:2;9680:18;;9673:34;9601:2;9586:18;;9408:305::o;9718:177::-;9797:13;;-1:-1:-1;;;;;9839:31:55;;9829:42;;9819:70;;9885:1;9882;9875:12;9900:208;9970:6;10023:2;10011:9;10002:7;9998:23;9994:32;9991:52;;;10039:1;10036;10029:12;9991:52;10062:40;10092:9;10062:40;:::i;10113:127::-;10174:10;10169:3;10165:20;10162:1;10155:31;10205:4;10202:1;10195:15;10229:4;10226:1;10219:15;10245:253;10317:2;10311:9;10359:4;10347:17;;10394:18;10379:34;;10415:22;;;10376:62;10373:88;;;10441:18;;:::i;:::-;10477:2;10470:22;10245:253;:::o;10503:275::-;10574:2;10568:9;10639:2;10620:13;;-1:-1:-1;;10616:27:55;10604:40;;10674:18;10659:34;;10695:22;;;10656:62;10653:88;;;10721:18;;:::i;:::-;10757:2;10750:22;10503:275;;-1:-1:-1;10503:275:55:o;10783:719::-;10863:6;10916:2;10904:9;10895:7;10891:23;10887:32;10884:52;;;10932:1;10929;10922:12;10884:52;10965:9;10959:16;10994:18;11035:2;11027:6;11024:14;11021:34;;;11051:1;11048;11041:12;11021:34;11089:6;11078:9;11074:22;11064:32;;11134:7;11127:4;11123:2;11119:13;11115:27;11105:55;;11156:1;11153;11146:12;11105:55;11185:2;11179:9;11207:2;11203;11200:10;11197:36;;;11213:18;;:::i;:::-;11255:53;11298:2;11279:13;;-1:-1:-1;;11275:27:55;11304:2;11271:36;11255:53;:::i;:::-;11242:66;;11331:2;11324:5;11317:17;11371:7;11366:2;11361;11357;11353:11;11349:20;11346:33;11343:53;;;11392:1;11389;11382:12;11343:53;11405:67;11469:2;11464;11457:5;11453:14;11448:2;11444;11440:11;11405:67;:::i;:::-;-1:-1:-1;11491:5:55;10783:719;-1:-1:-1;;;;10783:719:55:o;11794:164::-;11870:13;;11919;;11912:21;11902:32;;11892:60;;11948:1;11945;11938:12;11963:202;12030:6;12083:2;12071:9;12062:7;12058:23;12054:32;12051:52;;;12099:1;12096;12089:12;12051:52;12122:37;12149:9;12122:37;:::i;12170:184::-;12240:6;12293:2;12281:9;12272:7;12268:23;12264:32;12261:52;;;12309:1;12306;12299:12;12261:52;-1:-1:-1;12332:16:55;;12170:184;-1:-1:-1;12170:184:55:o;12359:502::-;12625:2;12607:21;;;12664:2;12644:18;;;12637:30;12704:26;12698:3;12683:19;;12676:55;12798:4;12783:20;;12776:36;;;;-1:-1:-1;12828:18:55;;12821:34;12763:3;12748:19;;12359:502::o;12866:::-;13132:2;13114:21;;;13171:2;13151:18;;;13144:30;13211:26;13205:3;13190:19;;13183:55;13305:4;13290:20;;13283:36;;;;-1:-1:-1;13335:18:55;;13328:34;13270:3;13255:19;;12866:502::o;13373:::-;13639:2;13621:21;;;13678:2;13658:18;;;13651:30;13718:26;13712:3;13697:19;;13690:55;13812:4;13797:20;;13790:36;;;;-1:-1:-1;13842:18:55;;13835:34;13777:3;13762:19;;13373:502::o;14149:715::-;14253:6;14306:3;14294:9;14285:7;14281:23;14277:33;14274:53;;;14323:1;14320;14313:12;14274:53;14356:2;14350:9;14398:3;14390:6;14386:16;14468:6;14456:10;14453:22;14432:18;14420:10;14417:34;14414:62;14411:88;;;14479:18;;:::i;:::-;14515:2;14508:22;14554:40;14584:9;14554:40;:::i;:::-;14546:6;14539:56;14649:2;14638:9;14634:18;14628:25;14623:2;14615:6;14611:15;14604:50;14708:2;14697:9;14693:18;14687:25;14682:2;14674:6;14670:15;14663:50;14767:2;14756:9;14752:18;14746:25;14741:2;14733:6;14729:15;14722:50;14827:3;14816:9;14812:19;14806:26;14800:3;14792:6;14788:16;14781:52;14852:6;14842:16;;;14149:715;;;;:::o;14869:127::-;14930:10;14925:3;14921:20;14918:1;14911:31;14961:4;14958:1;14951:15;14985:4;14982:1;14975:15;15001:128;15068:9;;;15089:11;;;15086:37;;;15103:18;;:::i;15134:217::-;15174:1;15200;15190:132;;15244:10;15239:3;15235:20;15232:1;15225:31;15279:4;15276:1;15269:15;15307:4;15304:1;15297:15;15190:132;-1:-1:-1;15336:9:55;;15134:217::o;15356:168::-;15429:9;;;15460;;15477:15;;;15471:22;;15457:37;15447:71;;15498:18;;:::i;18298:628::-;18400:6;18453:3;18441:9;18432:7;18428:23;18424:33;18421:53;;;18470:1;18467;18460:12;18421:53;18503:2;18497:9;18545:3;18537:6;18533:16;18615:6;18603:10;18600:22;18579:18;18567:10;18564:34;18561:62;18558:88;;;18626:18;;:::i;:::-;18666:10;18662:2;18655:22;;18707:9;18701:16;18693:6;18686:32;18772:2;18761:9;18757:18;18751:25;18746:2;18738:6;18734:15;18727:50;18831:2;18820:9;18816:18;18810:25;18805:2;18797:6;18793:15;18786:50;18890:2;18879:9;18875:18;18869:25;18864:2;18856:6;18852:15;18845:50;18914:6;18904:16;;;18298:628;;;;:::o;20230:384::-;-1:-1:-1;;;;;;20415:33:55;;20403:46;;20472:13;;20385:3;;20494:74;20472:13;20557:1;20548:11;;20541:4;20529:17;;20494:74;:::i;:::-;20588:16;;;;20606:1;20584:24;;20230:384;-1:-1:-1;;;20230:384:55:o;20619:287::-;20748:3;20786:6;20780:13;20802:66;20861:6;20856:3;20849:4;20841:6;20837:17;20802:66;:::i;:::-;20884:16;;;;;20619:287;-1:-1:-1;;20619:287:55:o;20911:127::-;20972:10;20967:3;20963:20;20960:1;20953:31;21003:4;21000:1;20993:15;21027:4;21024:1;21017:15;21043:125;21108:9;;;21129:10;;;21126:36;;;21142:18;;:::i;21173:435::-;21226:3;21264:5;21258:12;21291:6;21286:3;21279:19;21317:4;21346:2;21341:3;21337:12;21330:19;;21383:2;21376:5;21372:14;21404:1;21414:169;21428:6;21425:1;21422:13;21414:169;;;21489:13;;21477:26;;21523:12;;;;21558:15;;;;21450:1;21443:9;21414:169;;;-1:-1:-1;21599:3:55;;21173:435;-1:-1:-1;;;;;21173:435:55:o;21613:495::-;21868:2;21857:9;21850:21;21831:4;21894:56;21946:2;21935:9;21931:18;21923:6;21894:56;:::i;:::-;21986:6;21981:2;21970:9;21966:18;21959:34;22041:9;22033:6;22029:22;22024:2;22013:9;22009:18;22002:50;22069:33;22095:6;22087;22069:33;:::i;:::-;22061:41;21613:495;-1:-1:-1;;;;;;21613:495:55:o;22113:183::-;22173:4;22206:18;22198:6;22195:30;22192:56;;;22228:18;;:::i;:::-;-1:-1:-1;22273:1:55;22269:14;22285:4;22265:25;;22113:183::o;22301:1429::-;22399:6;22430:2;22473;22461:9;22452:7;22448:23;22444:32;22441:52;;;22489:1;22486;22479:12;22441:52;22522:9;22516:16;22551:18;22592:2;22584:6;22581:14;22578:34;;;22608:1;22605;22598:12;22578:34;22631:22;;;;22687:4;22669:16;;;22665:27;22662:47;;;22705:1;22702;22695:12;22662:47;22731:22;;:::i;:::-;22776:30;22803:2;22776:30;:::i;:::-;22769:5;22762:45;22853:2;22849;22845:11;22839:18;22834:2;22827:5;22823:14;22816:42;22904:2;22900;22896:11;22890:18;22885:2;22878:5;22874:14;22867:42;22955:2;22951;22947:11;22941:18;22936:2;22929:5;22925:14;22918:42;23007:3;23003:2;22999:12;22993:19;22987:3;22980:5;22976:15;22969:44;23052:3;23048:2;23044:12;23038:19;23082:2;23072:8;23069:16;23066:36;;;23098:1;23095;23088:12;23066:36;23129:8;23125:2;23121:17;23111:27;;;23176:7;23169:4;23165:2;23161:13;23157:27;23147:55;;23198:1;23195;23188:12;23147:55;23227:2;23221:9;23211:19;;23250:60;23266:43;23306:2;23266:43;:::i;:::-;23250:60;:::i;:::-;23344:15;;;23426:1;23422:10;;;;23414:19;;23410:28;;;23375:12;;;;23450:19;;;23447:39;;;23482:1;23479;23472:12;23447:39;23506:11;;;;23526:135;23542:6;23537:3;23534:15;23526:135;;;23608:10;;23596:23;;23559:12;;;;23639;;;;23526:135;;;23688:3;23677:15;;23670:30;-1:-1:-1;23681:5:55;22301:1429;-1:-1:-1;;;;;;22301:1429:55:o;29005:493::-;29272:2;29254:21;;;29311:2;29291:18;;;29284:30;-1:-1:-1;;;29345:3:55;29330:19;;29323:45;29435:4;29420:20;;29413:36;;;;-1:-1:-1;29465:18:55;;29458:34;29400:3;29385:19;;29005:493::o;31003:317::-;31180:2;31169:9;31162:21;31143:4;31200:45;31241:2;31230:9;31226:18;31218:6;31200:45;:::i;:::-;31192:53;;31310:1;31306;31301:3;31297:11;31293:19;31285:6;31281:32;31276:2;31265:9;31261:18;31254:60;31003:317;;;;;:::o;31325:383::-;31522:2;31511:9;31504:21;31485:4;31548:45;31589:2;31578:9;31574:18;31566:6;31548:45;:::i;:::-;31641:9;31633:6;31629:22;31624:2;31613:9;31609:18;31602:50;31669:33;31695:6;31687;31669:33;:::i;:::-;31661:41;31325:383;-1:-1:-1;;;;;31325:383:55:o;31713:301::-;31884:2;31873:9;31866:21;31847:4;31904:45;31945:2;31934:9;31930:18;31922:6;31904:45;:::i;:::-;31896:53;;31999:6;31992:14;31985:22;31980:2;31969:9;31965:18;31958:50;31713:301;;;;;:::o;32313:446::-;32563:2;32552:9;32545:21;32602:1;32597:2;32586:9;32582:18;32575:29;-1:-1:-1;;;32635:2:55;32624:9;32620:18;32613:35;32686:3;32679:4;32668:9;32664:20;32657:33;32526:4;32707:46;32748:3;32737:9;32733:19;32725:6;32707:46;:::i;34179:291::-;34356:2;34345:9;34338:21;34319:4;34376:45;34417:2;34406:9;34402:18;34394:6;34376:45;:::i;:::-;34368:53;;34457:6;34452:2;34441:9;34437:18;34430:34;34179:291;;;;;:::o;35832:440::-;36082:2;36071:9;36064:21;36045:4;36108:49;36153:2;36142:9;36138:18;35745:2;35733:15;;-1:-1:-1;;;35773:4:55;35764:14;;35757:36;35818:2;35809:12;;35668:159;36108:49;36205:9;36197:6;36193:22;36188:2;36177:9;36173:18;36166:50;36233:33;36259:6;36251;36233:33;:::i;:::-;36225:41;35832:440;-1:-1:-1;;;;35832:440:55:o;36441:::-;36691:2;36680:9;36673:21;36654:4;36717:49;36762:2;36751:9;36747:18;36354:2;36342:15;;-1:-1:-1;;;36382:4:55;36373:14;;36366:36;36427:2;36418:12;;36277:159;37238:261;37417:2;37406:9;37399:21;37380:4;37437:56;37489:2;37478:9;37474:18;37466:6;37437:56;:::i;38690:348::-;38920:2;38909:9;38902:21;38883:4;38940:49;38985:2;38974:9;38970:18;35745:2;35733:15;;-1:-1:-1;;;35773:4:55;35764:14;;35757:36;35818:2;35809:12;;35668:159;38940:49;38932:57;;39025:6;39020:2;39009:9;39005:18;38998:34;38690:348;;;;:::o;39043:::-;39273:2;39262:9;39255:21;39236:4;39293:49;39338:2;39327:9;39323:18;36354:2;36342:15;;-1:-1:-1;;;36382:4:55;36373:14;;36366:36;36427:2;36418:12;;36277:159;39396:345;-1:-1:-1;;;;;39616:32:55;;;;39598:51;;39680:2;39665:18;;39658:34;;;;39723:2;39708:18;;39701:34;39586:2;39571:18;;39396:345::o;39746:610::-;39992:13;;39935:3;;39966;;40045:4;40072:15;;;39935:3;40115:175;40129:6;40126:1;40123:13;40115:175;;;40192:13;;40178:28;;40228:14;;;;40265:15;;;;40151:1;40144:9;40115:175;;;-1:-1:-1;;40299:21:55;;;-1:-1:-1;40336:14:55;;;;;-1:-1:-1;;;39746:610:55:o;40550:556::-;40752:2;40734:21;;;40791:3;40771:18;;;40764:31;40831:34;40826:2;40811:18;;40804:62;40902:34;40897:2;40882:18;;40875:62;40974:34;40968:3;40953:19;;40946:63;-1:-1:-1;;;41040:3:55;41025:19;;41018:46;41096:3;41081:19;;40550:556::o;41111:135::-;41150:3;41171:17;;;41168:43;;41191:18;;:::i;:::-;-1:-1:-1;41238:1:55;41227:13;;41111:135::o;41251:659::-;41316:5;41369:3;41362:4;41354:6;41350:17;41346:27;41336:55;;41387:1;41384;41377:12;41336:55;41416:6;41410:13;41442:4;41466:60;41482:43;41522:2;41482:43;:::i;41466:60::-;41560:15;;;41646:1;41642:10;;;;41630:23;;41626:32;;;41591:12;;;;41670:15;;;41667:35;;;41698:1;41695;41688:12;41667:35;41734:2;41726:6;41722:15;41746:135;41762:6;41757:3;41754:15;41746:135;;;41828:10;;41816:23;;41859:12;;;;41779;;41746:135;;;-1:-1:-1;41899:5:55;41251:659;-1:-1:-1;;;;;;41251:659:55:o;41915:614::-;42044:6;42052;42105:2;42093:9;42084:7;42080:23;42076:32;42073:52;;;42121:1;42118;42111:12;42073:52;42154:9;42148:16;42183:18;42224:2;42216:6;42213:14;42210:34;;;42240:1;42237;42230:12;42210:34;42263:72;42327:7;42318:6;42307:9;42303:22;42263:72;:::i;:::-;42253:82;;42381:2;42370:9;42366:18;42360:25;42344:41;;42410:2;42400:8;42397:16;42394:36;;;42426:1;42423;42416:12;42394:36;;42449:74;42515:7;42504:8;42493:9;42489:24;42449:74;:::i;:::-;42439:84;;;41915:614;;;;;:::o;42534:442::-;-1:-1:-1;;;;;42781:32:55;;;;42763:51;;-1:-1:-1;;;;;;42850:33:55;;;;42845:2;42830:18;;42823:61;42915:2;42900:18;;42893:34;42958:2;42943:18;;42936:34;42750:3;42735:19;;42534:442::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "USDC()": "89a30271",
    "admin()": "f851a440",
    "buyer1()": "c3de84a4",
    "buyer2()": "17e26c59",
    "buyer3()": "50f30573",
    "collateralSymbol()": "bf911794",
    "dov()": "0af0ebf7",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "implementation()": "5c60da1b",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testBootstrap()": "cacab1dd",
    "testCreation()": "6e6e1d46",
    "testDeposit()": "7f924c4e",
    "testPurchase()": "fa7dfe77",
    "testSettle_1400()": "dc5eb6cb",
    "testSettle_1600()": "f0806764",
    "testWithdraw_1400()": "73add44b",
    "testWithdraw_1600()": "ecb9a103",
    "underlyingSymbol()": "d90a730e",
    "writer1()": "4674f19b",
    "writer2()": "19a7681f",
    "writer3()": "f711b162"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyer1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyer2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyer3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dov\",\"outputs\":[{\"internalType\":\"contract DovForTest\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"contract DovReceiptERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBootstrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCreation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testPurchase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSettle_1400\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSettle_1600\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testWithdraw_1400\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testWithdraw_1600\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"writer1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"writer2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"writer3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/FunctionTest.sol\":\"FunctionTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xae16bc69f791ce957604e0e82ee719ffb807f9949a090d98ba6e51efa1412a0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826d95d5f2374c678927260e85245bc3abf5affacb4b95214fb8bf67c214b85\",\"dweb:/ipfs/QmaSqPxNNvgd34HZFgnsmMimWzyVwnBeDWaBiUTnMf4Z5S\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x597ec6514703c8554e1d3d2952e0abdd6020cc133ec9844250ded37dcbb3a1a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b5c70198450103012fd6953d9572a43bae324aaa7c7d028a83693ae1f65a4f9\",\"dweb:/ipfs/QmdLfoAdh3fKiDFt7cT4jD5aQDuYJ95vC8VoiaFn5aTBJG\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts//contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b\",\"dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x52da94e59d870f54ca0eb4f485c3d9602011f668ba34d72c88124a1496ebaab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09656a37963a61e79df0b718ad0ec323cd29d409d6ead33dbb91d0770ff87fa4\",\"dweb:/ipfs/QmXLWCYoMpZ4SecK4kVaL53LZWXZNbQG8gUzACmZ6A64rE\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"src/Dov.sol\":{\"keccak256\":\"0x2ddb55c1a7029bcd50e9c28359722052624a7d15c8b31386cab3726cac6d3a0a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2580415d9816cf9bf8f9d881acaeaa4da916d28f95fc4b1852024362eff82b7f\",\"dweb:/ipfs/QmYkXTyVhBEZifahGRBj2SCStdk6GgKadt5xCxiCFa57L7\"]},\"src/DovForTest.sol\":{\"keccak256\":\"0x0d7d65645ba3fa01cc43bac44db4f7d083cfc0c3c2d316c44560f2868afa3e63\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8fcea441af3918a2848f804c67ae638048f0a0e329978d893f6cdc89a673865a\",\"dweb:/ipfs/QmPqMUdusQCx74626isgtFGzR4tKzSjoo1a9Jr8f7CqNPT\"]},\"src/DovReceiptERC20.sol\":{\"keccak256\":\"0x79d19b31e424f66fd14793f46209a56d55cc4374352e0e852ad17943fbfc513f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://24a60e6f950c7ec951f547b1152e31662f26c59a76634cce0a191b972c4655fc\",\"dweb:/ipfs/QmUE3PmxogkxBSUpBJgm9dPAgEu1ufQ6hNFDsCbZAikvmU\"]},\"src/DovState.sol\":{\"keccak256\":\"0xdd540fdbbfd49e819cd244f3475ed50144e478e55303be112149d5931d119c98\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ac6bfa01d5f8d59878693221effd9225015ebc049de2c5b8d39b12311e4e431d\",\"dweb:/ipfs/Qmds7fNCpynfxBiLUS3ZP9BAMjgXhJEUboemZHvuAyAgrK\"]},\"src/DovStruct.sol\":{\"keccak256\":\"0x49dd24f2a016e8c8a7b74cbb3b128ab7d561b4275aa3a376a3be541670439028\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://43223c6cb9c8ed20c84745c709daacb0b56282e2be3e0f0426dae66c25a7208b\",\"dweb:/ipfs/QmNi1gsRS9vrmqzJKG8pC3gTKHhUM7wpeqF3sHJPSWjc8b\"]},\"test/FunctionTest.sol\":{\"keccak256\":\"0x8c4a83d761c28277c4655f1237b9ef06ce93940025df605ce0e0b1ba0c69f8a1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f4cb59739a1dbd6b9a65400136580b5c3d1b38377fbb62194cf5a21dc62c066e\",\"dweb:/ipfs/QmP2KMn1x9ioKZCpqkQh6UFo937AkM81YzEsdYsvEi7YUv\"]},\"test/functions.sol\":{\"keccak256\":\"0xc7e62722c0e03ad9a8e648fee957e34c9fd56e46f8cd9f64778c3a76fac0b405\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c6a75d2426962cd279c39c04fd765ee747a76b96927d199dd2ae2e8595079f9b\",\"dweb:/ipfs/QmQZsx9i1iAkPv1okbcDNw4Aprnq7YxF4wfZ64xqqENn5Y\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USDC",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "buyer1",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "buyer2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "buyer3",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralSymbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dov",
          "outputs": [
            {
              "internalType": "contract DovForTest",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "implementation",
          "outputs": [
            {
              "internalType": "contract DovReceiptERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBootstrap"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCreation"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDeposit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testPurchase"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSettle_1400"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSettle_1600"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testWithdraw_1400"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testWithdraw_1600"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingSymbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "writer1",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "writer2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "writer3",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/FunctionTest.sol": "FunctionTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0xae16bc69f791ce957604e0e82ee719ffb807f9949a090d98ba6e51efa1412a0a",
        "urls": [
          "bzz-raw://0826d95d5f2374c678927260e85245bc3abf5affacb4b95214fb8bf67c214b85",
          "dweb:/ipfs/QmaSqPxNNvgd34HZFgnsmMimWzyVwnBeDWaBiUTnMf4Z5S"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x597ec6514703c8554e1d3d2952e0abdd6020cc133ec9844250ded37dcbb3a1a9",
        "urls": [
          "bzz-raw://7b5c70198450103012fd6953d9572a43bae324aaa7c7d028a83693ae1f65a4f9",
          "dweb:/ipfs/QmdLfoAdh3fKiDFt7cT4jD5aQDuYJ95vC8VoiaFn5aTBJG"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts//contracts/proxy/Clones.sol": {
        "keccak256": "0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999",
        "urls": [
          "bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb",
          "dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol": {
        "keccak256": "0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247",
        "urls": [
          "bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b",
          "dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
        "urls": [
          "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
          "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
        "keccak256": "0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b",
        "urls": [
          "bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d",
          "dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol": {
        "keccak256": "0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa",
        "urls": [
          "bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b",
          "dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff",
        "urls": [
          "bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005",
          "dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
        "keccak256": "0x52da94e59d870f54ca0eb4f485c3d9602011f668ba34d72c88124a1496ebaab1",
        "urls": [
          "bzz-raw://09656a37963a61e79df0b718ad0ec323cd29d409d6ead33dbb91d0770ff87fa4",
          "dweb:/ipfs/QmXLWCYoMpZ4SecK4kVaL53LZWXZNbQG8gUzACmZ6A64rE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
        "urls": [
          "bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
          "dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
        ],
        "license": "MIT"
      },
      "src/Dov.sol": {
        "keccak256": "0x2ddb55c1a7029bcd50e9c28359722052624a7d15c8b31386cab3726cac6d3a0a",
        "urls": [
          "bzz-raw://2580415d9816cf9bf8f9d881acaeaa4da916d28f95fc4b1852024362eff82b7f",
          "dweb:/ipfs/QmYkXTyVhBEZifahGRBj2SCStdk6GgKadt5xCxiCFa57L7"
        ],
        "license": "UNLICENSED"
      },
      "src/DovForTest.sol": {
        "keccak256": "0x0d7d65645ba3fa01cc43bac44db4f7d083cfc0c3c2d316c44560f2868afa3e63",
        "urls": [
          "bzz-raw://8fcea441af3918a2848f804c67ae638048f0a0e329978d893f6cdc89a673865a",
          "dweb:/ipfs/QmPqMUdusQCx74626isgtFGzR4tKzSjoo1a9Jr8f7CqNPT"
        ],
        "license": "UNLICENSED"
      },
      "src/DovReceiptERC20.sol": {
        "keccak256": "0x79d19b31e424f66fd14793f46209a56d55cc4374352e0e852ad17943fbfc513f",
        "urls": [
          "bzz-raw://24a60e6f950c7ec951f547b1152e31662f26c59a76634cce0a191b972c4655fc",
          "dweb:/ipfs/QmUE3PmxogkxBSUpBJgm9dPAgEu1ufQ6hNFDsCbZAikvmU"
        ],
        "license": "UNLICENSED"
      },
      "src/DovState.sol": {
        "keccak256": "0xdd540fdbbfd49e819cd244f3475ed50144e478e55303be112149d5931d119c98",
        "urls": [
          "bzz-raw://ac6bfa01d5f8d59878693221effd9225015ebc049de2c5b8d39b12311e4e431d",
          "dweb:/ipfs/Qmds7fNCpynfxBiLUS3ZP9BAMjgXhJEUboemZHvuAyAgrK"
        ],
        "license": "UNLICENSED"
      },
      "src/DovStruct.sol": {
        "keccak256": "0x49dd24f2a016e8c8a7b74cbb3b128ab7d561b4275aa3a376a3be541670439028",
        "urls": [
          "bzz-raw://43223c6cb9c8ed20c84745c709daacb0b56282e2be3e0f0426dae66c25a7208b",
          "dweb:/ipfs/QmNi1gsRS9vrmqzJKG8pC3gTKHhUM7wpeqF3sHJPSWjc8b"
        ],
        "license": "UNLICENSED"
      },
      "test/FunctionTest.sol": {
        "keccak256": "0x8c4a83d761c28277c4655f1237b9ef06ce93940025df605ce0e0b1ba0c69f8a1",
        "urls": [
          "bzz-raw://f4cb59739a1dbd6b9a65400136580b5c3d1b38377fbb62194cf5a21dc62c066e",
          "dweb:/ipfs/QmP2KMn1x9ioKZCpqkQh6UFo937AkM81YzEsdYsvEi7YUv"
        ],
        "license": "UNLICENSED"
      },
      "test/functions.sol": {
        "keccak256": "0xc7e62722c0e03ad9a8e648fee957e34c9fd56e46f8cd9f64778c3a76fac0b405",
        "urls": [
          "bzz-raw://c6a75d2426962cd279c39c04fd765ee747a76b96927d199dd2ae2e8595079f9b",
          "dweb:/ipfs/QmQZsx9i1iAkPv1okbcDNw4Aprnq7YxF4wfZ64xqqENn5Y"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/FunctionTest.sol",
    "id": 51630,
    "exportedSymbols": {
      "AccessControl": [
        43674
      ],
      "Clones": [
        52539
      ],
      "DSTest": [
        2291
      ],
      "Dov": [
        49279
      ],
      "DovForTest": [
        50170
      ],
      "DovReceiptERC20": [
        50331
      ],
      "DovState": [
        50378
      ],
      "ERC20": [
        44672
      ],
      "ERC721": [
        45919
      ],
      "ERC721Burnable": [
        46083
      ],
      "FunctionTest": [
        51629
      ],
      "Functions": [
        52459
      ],
      "IERC20": [
        44750
      ],
      "RoundData": [
        50394
      ],
      "RoundStrikeData": [
        50405
      ],
      "StdAssertions": [
        3823
      ],
      "StdChains": [
        4561
      ],
      "StdCheats": [
        7414
      ],
      "StdInvariant": [
        7739
      ],
      "StdStorage": [
        8489
      ],
      "StdStyle": [
        11339
      ],
      "StdUtils": [
        12187
      ],
      "Test": [
        12238
      ],
      "TestBase": [
        2357
      ],
      "Vm": [
        13931
      ],
      "WritePosition": [
        50414
      ],
      "console": [
        21995
      ],
      "console2": [
        30120
      ],
      "safeconsole": [
        43358
      ],
      "stdError": [
        7480
      ],
      "stdJson": [
        8315
      ],
      "stdMath": [
        8457
      ],
      "stdStorage": [
        10128
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:8718:53",
    "nodes": [
      {
        "id": 50527,
        "nodeType": "PragmaDirective",
        "src": "39:23:53",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 50528,
        "nodeType": "ImportDirective",
        "src": "64:28:53",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51630,
        "sourceUnit": 12239,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50530,
        "nodeType": "ImportDirective",
        "src": "93:77:53",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51630,
        "sourceUnit": 44673,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50529,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44672,
              "src": "101:5:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50531,
        "nodeType": "ImportDirective",
        "src": "172:24:53",
        "nodes": [],
        "absolutePath": "src/Dov.sol",
        "file": "../src/Dov.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51630,
        "sourceUnit": 49280,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50532,
        "nodeType": "ImportDirective",
        "src": "197:25:53",
        "nodes": [],
        "absolutePath": "test/functions.sol",
        "file": "./functions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51630,
        "sourceUnit": 52460,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50536,
        "nodeType": "ImportDirective",
        "src": "223:79:53",
        "nodes": [],
        "absolutePath": "src/DovStruct.sol",
        "file": "../src/DovStruct.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51630,
        "sourceUnit": 50415,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50533,
              "name": "RoundData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50394,
              "src": "231:9:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 50534,
              "name": "RoundStrikeData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50405,
              "src": "242:15:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 50535,
              "name": "WritePosition",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50414,
              "src": "259:13:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51629,
        "nodeType": "ContractDefinition",
        "src": "304:8453:53",
        "nodes": [
          {
            "id": 50623,
            "nodeType": "FunctionDefinition",
            "src": "353:630:53",
            "nodes": [],
            "body": {
              "id": 50622,
              "nodeType": "Block",
              "src": "385:598:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "526563656970742070726f7879207461726765743a",
                        "id": 50546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "407:23:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72cd50784652e091bb75ec73abb97fd8794abb6226911451fbcf2b42abcf24f3",
                          "typeString": "literal_string \"Receipt proxy target:\""
                        },
                        "value": "Receipt proxy target:"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 50547,
                            "name": "dov",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51645,
                            "src": "432:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DovForTest_$50170",
                              "typeString": "contract DovForTest"
                            }
                          },
                          "id": 50548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "436:21:53",
                          "memberName": "receiptImplementation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50347,
                          "src": "432:25:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 50549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "432:27:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_72cd50784652e091bb75ec73abb97fd8794abb6226911451fbcf2b42abcf24f3",
                          "typeString": "literal_string \"Receipt proxy target:\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50543,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21995,
                        "src": "395:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21995_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 50545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "403:3:53",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14690,
                      "src": "395:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 50550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "395:65:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50551,
                  "nodeType": "ExpressionStatement",
                  "src": "395:65:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "646f76206f70746f696e207661756c743a",
                        "id": 50555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "482:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4ca0f6c506a405ee42fc0829d78e26314aa7fba1ac9e0edfa3bccb744ef4056",
                          "typeString": "literal_string \"dov optoin vault:\""
                        },
                        "value": "dov optoin vault:"
                      },
                      {
                        "arguments": [
                          {
                            "id": 50558,
                            "name": "dov",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51645,
                            "src": "511:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DovForTest_$50170",
                              "typeString": "contract DovForTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DovForTest_$50170",
                              "typeString": "contract DovForTest"
                            }
                          ],
                          "id": 50557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "503:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50556,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "503:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "503:12:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c4ca0f6c506a405ee42fc0829d78e26314aa7fba1ac9e0edfa3bccb744ef4056",
                          "typeString": "literal_string \"dov optoin vault:\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50552,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21995,
                        "src": "470:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21995_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 50554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "478:3:53",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14690,
                      "src": "470:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 50560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "470:46:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50561,
                  "nodeType": "ExpressionStatement",
                  "src": "470:46:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "756e6465726c79696e6753796d626f6c3a",
                        "id": 50565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "538:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3609bf6575e307ac98c75b3b38bef192d80b4fdc55f6670de15e5baf81aabfcb",
                          "typeString": "literal_string \"underlyingSymbol:\""
                        },
                        "value": "underlyingSymbol:"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 50566,
                            "name": "dov",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51645,
                            "src": "559:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DovForTest_$50170",
                              "typeString": "contract DovForTest"
                            }
                          },
                          "id": 50567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "563:16:53",
                          "memberName": "underlyingSymbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50343,
                          "src": "559:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 50568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "559:22:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3609bf6575e307ac98c75b3b38bef192d80b4fdc55f6670de15e5baf81aabfcb",
                          "typeString": "literal_string \"underlyingSymbol:\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 50562,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21995,
                        "src": "526:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21995_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 50564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "534:3:53",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14656,
                      "src": "526:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory) view"
                      }
                    },
                    "id": 50569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "526:56:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50570,
                  "nodeType": "ExpressionStatement",
                  "src": "526:56:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "636f6c6c61746572616c53796d626f6c3a",
                        "id": 50574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "604:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09ef527a8e05caae61ed001acaf4a997fcf2db0d9b23205d683737d72b3828ae",
                          "typeString": "literal_string \"collateralSymbol:\""
                        },
                        "value": "collateralSymbol:"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 50575,
                            "name": "dov",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51645,
                            "src": "625:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DovForTest_$50170",
                              "typeString": "contract DovForTest"
                            }
                          },
                          "id": 50576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "629:16:53",
                          "memberName": "collateralSymbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50345,
                          "src": "625:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 50577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "625:22:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_09ef527a8e05caae61ed001acaf4a997fcf2db0d9b23205d683737d72b3828ae",
                          "typeString": "literal_string \"collateralSymbol:\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 50571,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21995,
                        "src": "592:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21995_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 50573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "600:3:53",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14656,
                      "src": "592:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory) view"
                      }
                    },
                    "id": 50578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "592:56:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50579,
                  "nodeType": "ExpressionStatement",
                  "src": "592:56:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "44454641554c542041444d494e20545255453a",
                        "id": 50583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "670:21:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f641123042d72541b8daf9c32a7d608486f645be5bf7099167c770afbaceef4",
                          "typeString": "literal_string \"DEFAULT ADMIN TRUE:\""
                        },
                        "value": "DEFAULT ADMIN TRUE:"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30783030",
                            "id": 50586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "705:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x00"
                          },
                          {
                            "arguments": [
                              {
                                "id": 50589,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "719:4:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FunctionTest_$51629",
                                  "typeString": "contract FunctionTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FunctionTest_$51629",
                                  "typeString": "contract FunctionTest"
                                }
                              ],
                              "id": 50588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "711:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50587,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "711:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "711:13:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 50584,
                            "name": "dov",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51645,
                            "src": "693:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DovForTest_$50170",
                              "typeString": "contract DovForTest"
                            }
                          },
                          "id": 50585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "697:7:53",
                          "memberName": "hasRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43438,
                          "src": "693:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view external returns (bool)"
                          }
                        },
                        "id": 50591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "693:32:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6f641123042d72541b8daf9c32a7d608486f645be5bf7099167c770afbaceef4",
                          "typeString": "literal_string \"DEFAULT ADMIN TRUE:\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 50580,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21995,
                        "src": "658:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21995_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 50582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "666:3:53",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14673,
                      "src": "658:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (string memory,bool) view"
                      }
                    },
                    "id": 50592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "658:68:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50593,
                  "nodeType": "ExpressionStatement",
                  "src": "658:68:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50595,
                        "name": "underlyingSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51699,
                        "src": "746:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 50596,
                            "name": "dov",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51645,
                            "src": "764:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DovForTest_$50170",
                              "typeString": "contract DovForTest"
                            }
                          },
                          "id": 50597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "768:16:53",
                          "memberName": "underlyingSymbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50343,
                          "src": "764:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 50598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "764:22:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "756e6465726c79696e672073796d626f6c206e6f74206d61746368",
                        "id": 50599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "788:29:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df45aa555faa1bae1b596179d6a11b50e8cd003180f152dd097ff224315d6a43",
                          "typeString": "literal_string \"underlying symbol not match\""
                        },
                        "value": "underlying symbol not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df45aa555faa1bae1b596179d6a11b50e8cd003180f152dd097ff224315d6a43",
                          "typeString": "literal_string \"underlying symbol not match\""
                        }
                      ],
                      "id": 50594,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 2047,
                      "src": "737:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 50600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "737:81:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50601,
                  "nodeType": "ExpressionStatement",
                  "src": "737:81:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50603,
                        "name": "collateralSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51702,
                        "src": "837:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 50604,
                            "name": "dov",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51645,
                            "src": "855:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DovForTest_$50170",
                              "typeString": "contract DovForTest"
                            }
                          },
                          "id": 50605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "859:16:53",
                          "memberName": "collateralSymbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50345,
                          "src": "855:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 50606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "855:22:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "636f6c6c61746572616c2073796d626f6c206e6f74206d61746368",
                        "id": 50607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "879:29:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f533afacbd768dccb61f004182639034c67e321e412973ddaee2e92ee2e5fb78",
                          "typeString": "literal_string \"collateral symbol not match\""
                        },
                        "value": "collateral symbol not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f533afacbd768dccb61f004182639034c67e321e412973ddaee2e92ee2e5fb78",
                          "typeString": "literal_string \"collateral symbol not match\""
                        }
                      ],
                      "id": 50602,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 2047,
                      "src": "828:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 50608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "828:81:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50609,
                  "nodeType": "ExpressionStatement",
                  "src": "828:81:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783030",
                            "id": 50613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "942:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x00"
                          },
                          {
                            "arguments": [
                              {
                                "id": 50616,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "956:4:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FunctionTest_$51629",
                                  "typeString": "contract FunctionTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FunctionTest_$51629",
                                  "typeString": "contract FunctionTest"
                                }
                              ],
                              "id": 50615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "948:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50614,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "948:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "948:13:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 50611,
                            "name": "dov",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51645,
                            "src": "930:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DovForTest_$50170",
                              "typeString": "contract DovForTest"
                            }
                          },
                          "id": 50612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "934:7:53",
                          "memberName": "hasRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43438,
                          "src": "930:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view external returns (bool)"
                          }
                        },
                        "id": 50618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "930:32:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6e2061646d696e",
                        "id": 50619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "964:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c3b6a3505a11eed1d387175d9b5e5e857bf7efa3f5b74daec84d61e860b0c0d",
                          "typeString": "literal_string \"Non admin\""
                        },
                        "value": "Non admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c3b6a3505a11eed1d387175d9b5e5e857bf7efa3f5b74daec84d61e860b0c0d",
                          "typeString": "literal_string \"Non admin\""
                        }
                      ],
                      "id": 50610,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 290,
                      "src": "919:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 50620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "919:57:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50621,
                  "nodeType": "ExpressionStatement",
                  "src": "919:57:53"
                }
              ]
            },
            "functionSelector": "6e6e1d46",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCreation",
            "nameLocation": "362:12:53",
            "parameters": {
              "id": 50541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "374:2:53"
            },
            "returnParameters": {
              "id": 50542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "385:0:53"
            },
            "scope": 51629,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50818,
            "nodeType": "FunctionDefinition",
            "src": "1015:1498:53",
            "nodes": [],
            "body": {
              "id": 50817,
              "nodeType": "Block",
              "src": "1049:1464:53",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50630
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50630,
                      "mutability": "mutable",
                      "name": "strikes",
                      "nameLocation": "1076:7:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 50817,
                      "src": "1059:24:53",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 50628,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1059:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 50629,
                        "nodeType": "ArrayTypeName",
                        "src": "1059:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50636,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 50634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1100:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 50633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1086:13:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 50631,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1090:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 50632,
                        "nodeType": "ArrayTypeName",
                        "src": "1090:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 50635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1086:16:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1059:43:53"
                },
                {
                  "expression": {
                    "id": 50643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50637,
                        "name": "strikes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50630,
                        "src": "1112:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 50639,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 50638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1120:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1112:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1600000000000000000000_by_1",
                        "typeString": "int_const 1600000000000000000000"
                      },
                      "id": 50642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "31363030",
                        "id": 50640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1125:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1600_by_1",
                          "typeString": "int_const 1600"
                        },
                        "value": "1600"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "31653138",
                        "id": 50641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1132:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      "src": "1125:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1600000000000000000000_by_1",
                        "typeString": "int_const 1600000000000000000000"
                      }
                    },
                    "src": "1112:24:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50644,
                  "nodeType": "ExpressionStatement",
                  "src": "1112:24:53"
                },
                {
                  "expression": {
                    "id": 50651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50645,
                        "name": "strikes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50630,
                        "src": "1146:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 50647,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 50646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1154:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1146:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1540000000000000000000_by_1",
                        "typeString": "int_const 1540000000000000000000"
                      },
                      "id": 50650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "31353430",
                        "id": 50648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1159:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1540_by_1",
                          "typeString": "int_const 1540"
                        },
                        "value": "1540"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "31653138",
                        "id": 50649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1166:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      "src": "1159:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1540000000000000000000_by_1",
                        "typeString": "int_const 1540000000000000000000"
                      }
                    },
                    "src": "1146:24:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50652,
                  "nodeType": "ExpressionStatement",
                  "src": "1146:24:53"
                },
                {
                  "expression": {
                    "id": 50659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50653,
                        "name": "strikes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50630,
                        "src": "1180:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 50655,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 50654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1188:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1180:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                        "typeString": "int_const 1500000000000000000000"
                      },
                      "id": 50658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "31353030",
                        "id": 50656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1193:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1500_by_1",
                          "typeString": "int_const 1500"
                        },
                        "value": "1500"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "31653138",
                        "id": 50657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1200:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      "src": "1193:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                        "typeString": "int_const 1500000000000000000000"
                      }
                    },
                    "src": "1180:24:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50660,
                  "nodeType": "ExpressionStatement",
                  "src": "1180:24:53"
                },
                {
                  "expression": {
                    "id": 50667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50661,
                        "name": "strikes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50630,
                        "src": "1214:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 50663,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 50662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1222:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1214:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1460000000000000000000_by_1",
                        "typeString": "int_const 1460000000000000000000"
                      },
                      "id": 50666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "31343630",
                        "id": 50664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1227:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1460_by_1",
                          "typeString": "int_const 1460"
                        },
                        "value": "1460"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "31653138",
                        "id": 50665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1234:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      "src": "1227:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1460000000000000000000_by_1",
                        "typeString": "int_const 1460000000000000000000"
                      }
                    },
                    "src": "1214:24:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50668,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:24:53"
                },
                {
                  "assignments": [
                    50670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50670,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "1257:6:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 50817,
                      "src": "1249:14:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50669,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1249:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50675,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 50671,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1266:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 50672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1272:9:53",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1266:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "363034383030",
                      "id": 50673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1284:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_604800_by_1",
                        "typeString": "int_const 604800"
                      },
                      "value": "604800"
                    },
                    "src": "1266:24:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1249:41:53"
                },
                {
                  "assignments": [
                    50677
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50677,
                      "mutability": "mutable",
                      "name": "expirySymbol",
                      "nameLocation": "1315:12:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 50817,
                      "src": "1301:26:53",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 50676,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1301:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50679,
                  "initialValue": {
                    "hexValue": "30354f43543233",
                    "id": 50678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1330:9:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7ee59fde6a34f79eca1b0ff7a1d9b1a9d4deaedf529d26179798eacca83e6e13",
                      "typeString": "literal_string \"05OCT23\""
                    },
                    "value": "05OCT23"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1301:38:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50683,
                        "name": "strikes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50630,
                        "src": "1364:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 50684,
                        "name": "expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50670,
                        "src": "1373:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50685,
                        "name": "expirySymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50677,
                        "src": "1381:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 50680,
                        "name": "dov",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51645,
                        "src": "1350:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DovForTest_$50170",
                          "typeString": "contract DovForTest"
                        }
                      },
                      "id": 50682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1354:9:53",
                      "memberName": "bootstrap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49479,
                      "src": "1350:13:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[] memory,uint256,string memory) external"
                      }
                    },
                    "id": 50686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1350:44:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50687,
                  "nodeType": "ExpressionStatement",
                  "src": "1350:44:53"
                },
                {
                  "assignments": [
                    50689
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50689,
                      "mutability": "mutable",
                      "name": "round",
                      "nameLocation": "1410:5:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 50817,
                      "src": "1405:10:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50688,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1405:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50693,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50690,
                        "name": "dov",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51645,
                        "src": "1418:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DovForTest_$50170",
                          "typeString": "contract DovForTest"
                        }
                      },
                      "id": 50691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1422:12:53",
                      "memberName": "currentRound",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50349,
                      "src": "1418:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 50692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1418:18:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1405:31:53"
                },
                {
                  "assignments": [
                    50696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50696,
                      "mutability": "mutable",
                      "name": "roundData",
                      "nameLocation": "1463:9:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 50817,
                      "src": "1446:26:53",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoundData_$50394_memory_ptr",
                        "typeString": "struct RoundData"
                      },
                      "typeName": {
                        "id": 50695,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50694,
                          "name": "RoundData",
                          "nameLocations": [
                            "1446:9:53"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 50394,
                          "src": "1446:9:53"
                        },
                        "referencedDeclaration": 50394,
                        "src": "1446:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RoundData_$50394_storage_ptr",
                          "typeString": "struct RoundData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50701,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50699,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50689,
                        "src": "1492:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 50697,
                        "name": "dov",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51645,
                        "src": "1475:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DovForTest_$50170",
                          "typeString": "contract DovForTest"
                        }
                      },
                      "id": 50698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1479:12:53",
                      "memberName": "getRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50123,
                      "src": "1475:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_RoundData_$50394_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct RoundData memory)"
                      }
                    },
                    "id": 50700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1475:23:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RoundData_$50394_memory_ptr",
                      "typeString": "struct RoundData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1446:52:53"
                },
                {
                  "assignments": [
                    50704
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50704,
                      "mutability": "mutable",
                      "name": "roundStrikeData",
                      "nameLocation": "1531:15:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 50817,
                      "src": "1508:38:53",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoundStrikeData_$50405_memory_ptr",
                        "typeString": "struct RoundStrikeData"
                      },
                      "typeName": {
                        "id": 50703,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50702,
                          "name": "RoundStrikeData",
                          "nameLocations": [
                            "1508:15:53"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 50405,
                          "src": "1508:15:53"
                        },
                        "referencedDeclaration": 50405,
                        "src": "1508:15:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RoundStrikeData_$50405_storage_ptr",
                          "typeString": "struct RoundStrikeData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50710,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50707,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50689,
                        "src": "1572:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 50708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1579:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 50705,
                        "name": "dov",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51645,
                        "src": "1549:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DovForTest_$50170",
                          "typeString": "contract DovForTest"
                        }
                      },
                      "id": 50706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1553:18:53",
                      "memberName": "getRoundStrikeData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50140,
                      "src": "1549:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_struct$_RoundStrikeData_$50405_memory_ptr_$",
                        "typeString": "function (uint256,uint256) view external returns (struct RoundStrikeData memory)"
                      }
                    },
                    "id": 50709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1549:32:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RoundStrikeData_$50405_memory_ptr",
                      "typeString": "struct RoundStrikeData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1508:73:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "63757272656e7420726f756e643a",
                        "id": 50714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1603:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cf3ac89a88d01b35ff6ce1764375f5160a7941320f6a187152a2ad7b0d955d7",
                          "typeString": "literal_string \"current round:\""
                        },
                        "value": "current round:"
                      },
                      {
                        "id": 50715,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50689,
                        "src": "1621:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1cf3ac89a88d01b35ff6ce1764375f5160a7941320f6a187152a2ad7b0d955d7",
                          "typeString": "literal_string \"current round:\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 50711,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21995,
                        "src": "1591:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21995_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 50713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1599:3:53",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14639,
                      "src": "1591:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 50716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1591:36:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50717,
                  "nodeType": "ExpressionStatement",
                  "src": "1591:36:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "726f756e6420737461727454696d653a",
                        "id": 50721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1649:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dabe098bf6d069d3ad16831a2d9b42997d38c469fa50d3d859dbb5a3871690b5",
                          "typeString": "literal_string \"round startTime:\""
                        },
                        "value": "round startTime:"
                      },
                      {
                        "expression": {
                          "id": 50722,
                          "name": "roundData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50696,
                          "src": "1669:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RoundData_$50394_memory_ptr",
                            "typeString": "struct RoundData memory"
                          }
                        },
                        "id": 50723,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1679:9:53",
                        "memberName": "startTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50384,
                        "src": "1669:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dabe098bf6d069d3ad16831a2d9b42997d38c469fa50d3d859dbb5a3871690b5",
                          "typeString": "literal_string \"round startTime:\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 50718,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21995,
                        "src": "1637:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21995_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 50720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1645:3:53",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14639,
                      "src": "1637:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 50724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:52:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50725,
                  "nodeType": "ExpressionStatement",
                  "src": "1637:52:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "726f756e64206578706972793a",
                        "id": 50729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1711:15:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56ffedc65d5c4ac749f095fc04a75f9d4c10319ce2a3d28897aa1d5cb5928193",
                          "typeString": "literal_string \"round expiry:\""
                        },
                        "value": "round expiry:"
                      },
                      {
                        "expression": {
                          "id": 50730,
                          "name": "roundData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50696,
                          "src": "1728:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RoundData_$50394_memory_ptr",
                            "typeString": "struct RoundData memory"
                          }
                        },
                        "id": 50731,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1738:6:53",
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50386,
                        "src": "1728:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_56ffedc65d5c4ac749f095fc04a75f9d4c10319ce2a3d28897aa1d5cb5928193",
                          "typeString": "literal_string \"round expiry:\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 50726,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21995,
                        "src": "1699:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21995_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 50728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1707:3:53",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14639,
                      "src": "1699:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 50732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1699:46:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50733,
                  "nodeType": "ExpressionStatement",
                  "src": "1699:46:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50735,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50689,
                        "src": "1765:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 50736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1772:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "726f756e64206e6f7420736574",
                        "id": 50737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1775:15:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba2251d2091c66619834ca3330eff3c6e0ab668efbb01c8d77f2984a9c0b310a",
                          "typeString": "literal_string \"round not set\""
                        },
                        "value": "round not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba2251d2091c66619834ca3330eff3c6e0ab668efbb01c8d77f2984a9c0b310a",
                          "typeString": "literal_string \"round not set\""
                        }
                      ],
                      "id": 50734,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "1756:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 50738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1756:35:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50739,
                  "nodeType": "ExpressionStatement",
                  "src": "1756:35:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50741,
                          "name": "roundData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50696,
                          "src": "1810:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RoundData_$50394_memory_ptr",
                            "typeString": "struct RoundData memory"
                          }
                        },
                        "id": 50742,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1820:9:53",
                        "memberName": "startTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50384,
                        "src": "1810:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 50743,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1831:5:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 50744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1837:9:53",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1831:15:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73746172742054696d65206e6f742073616d65",
                        "id": 50745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1848:21:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aaa069b685816ebb575fb1ace2754f2f2b6a133a94062c334c4e55f81d7cf37d",
                          "typeString": "literal_string \"start Time not same\""
                        },
                        "value": "start Time not same"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aaa069b685816ebb575fb1ace2754f2f2b6a133a94062c334c4e55f81d7cf37d",
                          "typeString": "literal_string \"start Time not same\""
                        }
                      ],
                      "id": 50740,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "1801:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 50746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:69:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50747,
                  "nodeType": "ExpressionStatement",
                  "src": "1801:69:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50749,
                          "name": "roundData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50696,
                          "src": "1889:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RoundData_$50394_memory_ptr",
                            "typeString": "struct RoundData memory"
                          }
                        },
                        "id": 50750,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1899:6:53",
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50386,
                        "src": "1889:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 50751,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1907:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 50752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1913:9:53",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1907:15:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "363034383030",
                          "id": 50753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1925:6:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_604800_by_1",
                            "typeString": "int_const 604800"
                          },
                          "value": "604800"
                        },
                        "src": "1907:24:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "6578706972792054696d65206e6f742073616d65",
                        "id": 50755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1933:22:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d2e532be0f011fd3893fccd052bc0ebd95875cc20d5a5b0b5d39ce5e343a581",
                          "typeString": "literal_string \"expiry Time not same\""
                        },
                        "value": "expiry Time not same"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d2e532be0f011fd3893fccd052bc0ebd95875cc20d5a5b0b5d39ce5e343a581",
                          "typeString": "literal_string \"expiry Time not same\""
                        }
                      ],
                      "id": 50748,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "1880:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 50756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1880:76:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50757,
                  "nodeType": "ExpressionStatement",
                  "src": "1880:76:53"
                },
                {
                  "expression": {
                    "id": 50761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50758,
                      "name": "strikes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50630,
                      "src": "1967:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 50759,
                        "name": "roundData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50696,
                        "src": "1977:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RoundData_$50394_memory_ptr",
                          "typeString": "struct RoundData memory"
                        }
                      },
                      "id": 50760,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1987:7:53",
                      "memberName": "strikes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50393,
                      "src": "1977:17:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "1967:27:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 50762,
                  "nodeType": "ExpressionStatement",
                  "src": "1967:27:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "737472696b65735b305d",
                        "id": 50764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2032:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_245495510b8e9233147ee758ed1aa6446abcf6039b7e4c671936ca3c90d9c9d1",
                          "typeString": "literal_string \"strikes[0]\""
                        },
                        "value": "strikes[0]"
                      },
                      {
                        "baseExpression": {
                          "id": 50765,
                          "name": "strikes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50630,
                          "src": "2046:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 50767,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 50766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2054:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2046:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 50768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2058:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_245495510b8e9233147ee758ed1aa6446abcf6039b7e4c671936ca3c90d9c9d1",
                          "typeString": "literal_string \"strikes[0]\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 50763,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "2009:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 50769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2009:52:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50770,
                  "nodeType": "EmitStatement",
                  "src": "2004:57:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "737472696b65735b315d",
                        "id": 50772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2099:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bff431650a67bd8c32a2b28200d53496a517c97653a19d391870e271ca069684",
                          "typeString": "literal_string \"strikes[1]\""
                        },
                        "value": "strikes[1]"
                      },
                      {
                        "baseExpression": {
                          "id": 50773,
                          "name": "strikes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50630,
                          "src": "2113:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 50775,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 50774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2121:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2113:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 50776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2125:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bff431650a67bd8c32a2b28200d53496a517c97653a19d391870e271ca069684",
                          "typeString": "literal_string \"strikes[1]\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 50771,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "2076:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 50777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:52:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50778,
                  "nodeType": "EmitStatement",
                  "src": "2071:57:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "737472696b65735b325d",
                        "id": 50780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2166:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1256ab2cc0338da31f773df1697fb0cfc963af83442c5efe294ad994077d1857",
                          "typeString": "literal_string \"strikes[2]\""
                        },
                        "value": "strikes[2]"
                      },
                      {
                        "baseExpression": {
                          "id": 50781,
                          "name": "strikes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50630,
                          "src": "2180:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 50783,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 50782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2188:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2180:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 50784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2192:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1256ab2cc0338da31f773df1697fb0cfc963af83442c5efe294ad994077d1857",
                          "typeString": "literal_string \"strikes[2]\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 50779,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "2143:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 50785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2143:52:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50786,
                  "nodeType": "EmitStatement",
                  "src": "2138:57:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "737472696b65735b335d",
                        "id": 50788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2233:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce82d23c2451356baadf1033f13b50fa114e361d7d696ba71606f9d6cacec95f",
                          "typeString": "literal_string \"strikes[3]\""
                        },
                        "value": "strikes[3]"
                      },
                      {
                        "baseExpression": {
                          "id": 50789,
                          "name": "strikes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50630,
                          "src": "2247:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 50791,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 50790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2255:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2247:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 50792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2259:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ce82d23c2451356baadf1033f13b50fa114e361d7d696ba71606f9d6cacec95f",
                          "typeString": "literal_string \"strikes[3]\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 50787,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "2210:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 50793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2210:52:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50794,
                  "nodeType": "EmitStatement",
                  "src": "2205:57:53"
                },
                {
                  "assignments": [
                    50796
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50796,
                      "mutability": "mutable",
                      "name": "purchaseReceipt",
                      "nameLocation": "2281:15:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 50817,
                      "src": "2273:23:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 50795,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2273:7:53",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50799,
                  "initialValue": {
                    "expression": {
                      "id": 50797,
                      "name": "roundStrikeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50704,
                      "src": "2299:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoundStrikeData_$50405_memory_ptr",
                        "typeString": "struct RoundStrikeData memory"
                      }
                    },
                    "id": 50798,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2315:15:53",
                    "memberName": "purchaseReceipt",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 50396,
                    "src": "2299:31:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2273:57:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "726f756e6420312c20737472696b65203120707572636861736520726563656970743a",
                        "id": 50803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2352:37:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_557943bd4d074cab99568666666ad10c389cb71135b3504d0c1f39f21af7fcde",
                          "typeString": "literal_string \"round 1, strike 1 purchase receipt:\""
                        },
                        "value": "round 1, strike 1 purchase receipt:"
                      },
                      {
                        "id": 50804,
                        "name": "purchaseReceipt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50796,
                        "src": "2391:15:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_557943bd4d074cab99568666666ad10c389cb71135b3504d0c1f39f21af7fcde",
                          "typeString": "literal_string \"round 1, strike 1 purchase receipt:\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50800,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21995,
                        "src": "2340:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21995_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 50802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2348:3:53",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14690,
                      "src": "2340:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 50805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2340:67:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50806,
                  "nodeType": "ExpressionStatement",
                  "src": "2340:67:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 50813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50808,
                          "name": "purchaseReceipt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50796,
                          "src": "2429:15:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 50811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2456:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 50810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2448:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50809,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2448:7:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2448:12:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2429:31:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7075726368617365207265636569707420636f6e7472616374206e6f7420696e697469616c697a6564",
                        "id": 50814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2462:43:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be6b62a5b2f11c03e9ff1d35df5692159cdd2e6a8ff8ea189b5effda1ab1705a",
                          "typeString": "literal_string \"purchase receipt contract not initialized\""
                        },
                        "value": "purchase receipt contract not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be6b62a5b2f11c03e9ff1d35df5692159cdd2e6a8ff8ea189b5effda1ab1705a",
                          "typeString": "literal_string \"purchase receipt contract not initialized\""
                        }
                      ],
                      "id": 50807,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2474,
                        2488
                      ],
                      "referencedDeclaration": 2488,
                      "src": "2417:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 50815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:89:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50816,
                  "nodeType": "ExpressionStatement",
                  "src": "2417:89:53"
                }
              ]
            },
            "functionSelector": "cacab1dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBootstrap",
            "nameLocation": "1024:13:53",
            "parameters": {
              "id": 50624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:2:53"
            },
            "returnParameters": {
              "id": 50625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1049:0:53"
            },
            "scope": 51629,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50916,
            "nodeType": "FunctionDefinition",
            "src": "2519:958:53",
            "nodes": [],
            "body": {
              "id": 50915,
              "nodeType": "Block",
              "src": "2551:926:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50821,
                      "name": "_roundSetting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52066,
                      "src": "2561:13:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2561:15:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50823,
                  "nodeType": "ExpressionStatement",
                  "src": "2561:15:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "4265666f7265204465706f736974207772697465723127732062616c616e63653a",
                        "id": 50825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2623:35:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ec2a85372a8387d25336dc904e09e37409f9cce924b3cd43cf61da863092cb1",
                          "typeString": "literal_string \"Before Deposit writer1's balance:\""
                        },
                        "value": "Before Deposit writer1's balance:"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 50830,
                                "name": "writer1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51660,
                                "src": "2683:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 50829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2675:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50828,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2675:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2675:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 50826,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "2660:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 50827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2665:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "2660:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 50832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2660:32:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 50833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2694:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1ec2a85372a8387d25336dc904e09e37409f9cce924b3cd43cf61da863092cb1",
                          "typeString": "literal_string \"Before Deposit writer1's balance:\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 50824,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "2600:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 50834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2600:96:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50835,
                  "nodeType": "EmitStatement",
                  "src": "2595:101:53"
                },
                {
                  "assignments": [
                    50837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50837,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "2711:7:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 50915,
                      "src": "2706:12:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50836,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2706:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50847,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50841,
                            "name": "writer1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51660,
                            "src": "2738:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 50840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2730:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50839,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2730:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2730:16:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "id": 50845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 50843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2748:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 50844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2754:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "2748:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 50838,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52122,
                      "src": "2721:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 50846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2721:38:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2706:53:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "4166746572204465706f736974207772697465723127732062616c616e63653a",
                        "id": 50849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2797:34:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_888b26a1e3cbf0d90a513d27112a8e91e76733ce8c75c9f85d40d74c0a5963f8",
                          "typeString": "literal_string \"After Deposit writer1's balance:\""
                        },
                        "value": "After Deposit writer1's balance:"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 50854,
                                "name": "writer1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51660,
                                "src": "2856:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 50853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2848:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50852,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2848:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2848:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 50850,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "2833:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 50851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2838:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "2833:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 50856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2833:32:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 50857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2867:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_888b26a1e3cbf0d90a513d27112a8e91e76733ce8c75c9f85d40d74c0a5963f8",
                          "typeString": "literal_string \"After Deposit writer1's balance:\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 50848,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "2774:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 50858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2774:95:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50859,
                  "nodeType": "EmitStatement",
                  "src": "2769:100:53"
                },
                {
                  "assignments": [
                    50862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50862,
                      "mutability": "mutable",
                      "name": "writePosition",
                      "nameLocation": "2901:13:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 50915,
                      "src": "2880:34:53",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WritePosition_$50414_memory_ptr",
                        "typeString": "struct WritePosition"
                      },
                      "typeName": {
                        "id": 50861,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50860,
                          "name": "WritePosition",
                          "nameLocations": [
                            "2880:13:53"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 50414,
                          "src": "2880:13:53"
                        },
                        "referencedDeclaration": 50414,
                        "src": "2880:13:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WritePosition_$50414_storage_ptr",
                          "typeString": "struct WritePosition"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50867,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50865,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50837,
                        "src": "2938:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 50863,
                        "name": "dov",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51645,
                        "src": "2917:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DovForTest_$50170",
                          "typeString": "contract DovForTest"
                        }
                      },
                      "id": 50864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2921:16:53",
                      "memberName": "getWritePosition",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50153,
                      "src": "2917:20:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_WritePosition_$50414_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct WritePosition memory)"
                      }
                    },
                    "id": 50866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2917:29:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WritePosition_$50414_memory_ptr",
                      "typeString": "struct WritePosition memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2880:66:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7772697465506f736974696f6e2e726f756e643a",
                        "id": 50871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2968:22:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5cfc17b07500159deb47405c2282d82d3f20f698b43738bd6b1543f6403f9d52",
                          "typeString": "literal_string \"writePosition.round:\""
                        },
                        "value": "writePosition.round:"
                      },
                      {
                        "expression": {
                          "id": 50872,
                          "name": "writePosition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50862,
                          "src": "2992:13:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WritePosition_$50414_memory_ptr",
                            "typeString": "struct WritePosition memory"
                          }
                        },
                        "id": 50873,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3006:5:53",
                        "memberName": "round",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50407,
                        "src": "2992:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5cfc17b07500159deb47405c2282d82d3f20f698b43738bd6b1543f6403f9d52",
                          "typeString": "literal_string \"writePosition.round:\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 50868,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21995,
                        "src": "2956:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21995_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 50870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2964:3:53",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14639,
                      "src": "2956:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 50874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2956:56:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50875,
                  "nodeType": "ExpressionStatement",
                  "src": "2956:56:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7772697465506f736974696f6e2e737472696b653a",
                        "id": 50877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3050:23:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf668fe94b1add8d84eb543b75e26bb6a98f04356e062be9a47ba27d9bd66365",
                          "typeString": "literal_string \"writePosition.strike:\""
                        },
                        "value": "writePosition.strike:"
                      },
                      {
                        "expression": {
                          "id": 50878,
                          "name": "writePosition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50862,
                          "src": "3075:13:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WritePosition_$50414_memory_ptr",
                            "typeString": "struct WritePosition memory"
                          }
                        },
                        "id": 50879,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3089:6:53",
                        "memberName": "strike",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50409,
                        "src": "3075:20:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 50880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3097:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_cf668fe94b1add8d84eb543b75e26bb6a98f04356e062be9a47ba27d9bd66365",
                          "typeString": "literal_string \"writePosition.strike:\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 50876,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "3027:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 50881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3027:73:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50882,
                  "nodeType": "EmitStatement",
                  "src": "3022:78:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7772697465506f736974696f6e2e636f6c6c61746572616c416d6f756e743a",
                        "id": 50884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3138:33:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cd0235ed1f630f4f5c377524cb094431c179113e14dbeec5b191bef68253d12",
                          "typeString": "literal_string \"writePosition.collateralAmount:\""
                        },
                        "value": "writePosition.collateralAmount:"
                      },
                      {
                        "expression": {
                          "id": 50885,
                          "name": "writePosition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50862,
                          "src": "3173:13:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WritePosition_$50414_memory_ptr",
                            "typeString": "struct WritePosition memory"
                          }
                        },
                        "id": 50886,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3187:16:53",
                        "memberName": "collateralAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50411,
                        "src": "3173:30:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 50887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3205:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1cd0235ed1f630f4f5c377524cb094431c179113e14dbeec5b191bef68253d12",
                          "typeString": "literal_string \"writePosition.collateralAmount:\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 50883,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "3115:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 50888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3115:93:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50889,
                  "nodeType": "EmitStatement",
                  "src": "3110:98:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50891,
                          "name": "writePosition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50862,
                          "src": "3228:13:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WritePosition_$50414_memory_ptr",
                            "typeString": "struct WritePosition memory"
                          }
                        },
                        "id": 50892,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3242:5:53",
                        "memberName": "round",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50407,
                        "src": "3228:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 50893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3249:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "4552524f523a205772697465506f736974696f6e20726f756e64",
                        "id": 50894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3252:28:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec95b1f4b30aa565be4a1d8ca51c627ec6046948e46090d3a6efbdc08ad294e7",
                          "typeString": "literal_string \"ERROR: WritePosition round\""
                        },
                        "value": "ERROR: WritePosition round"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec95b1f4b30aa565be4a1d8ca51c627ec6046948e46090d3a6efbdc08ad294e7",
                          "typeString": "literal_string \"ERROR: WritePosition round\""
                        }
                      ],
                      "id": 50890,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "3219:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 50895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3219:62:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50896,
                  "nodeType": "ExpressionStatement",
                  "src": "3219:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50898,
                          "name": "writePosition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50862,
                          "src": "3300:13:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WritePosition_$50414_memory_ptr",
                            "typeString": "struct WritePosition memory"
                          }
                        },
                        "id": 50899,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3314:6:53",
                        "memberName": "strike",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50409,
                        "src": "3300:20:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1600000000000000000000_by_1",
                          "typeString": "int_const 1600000000000000000000"
                        },
                        "id": 50902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31363030",
                          "id": 50900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3322:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1600_by_1",
                            "typeString": "int_const 1600"
                          },
                          "value": "1600"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 50901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3329:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "3322:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1600000000000000000000_by_1",
                          "typeString": "int_const 1600000000000000000000"
                        }
                      },
                      {
                        "hexValue": "4552524f523a205772697465506f736974696f6e20737472696b65",
                        "id": 50903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3337:29:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b099b388e005e68d2ea1b60ef7692ef37a90b018471369b1b90c6a791d66b3d",
                          "typeString": "literal_string \"ERROR: WritePosition strike\""
                        },
                        "value": "ERROR: WritePosition strike"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1600000000000000000000_by_1",
                          "typeString": "int_const 1600000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b099b388e005e68d2ea1b60ef7692ef37a90b018471369b1b90c6a791d66b3d",
                          "typeString": "literal_string \"ERROR: WritePosition strike\""
                        }
                      ],
                      "id": 50897,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "3291:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 50904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3291:76:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50905,
                  "nodeType": "ExpressionStatement",
                  "src": "3291:76:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50907,
                          "name": "writePosition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50862,
                          "src": "3386:13:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WritePosition_$50414_memory_ptr",
                            "typeString": "struct WritePosition memory"
                          }
                        },
                        "id": 50908,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3400:16:53",
                        "memberName": "collateralAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50411,
                        "src": "3386:30:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "id": 50911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 50909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3418:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 50910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3424:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "3418:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      },
                      {
                        "hexValue": "4552524f523a205772697465506f736974696f6e20636f6c6c61746572616c416d6f756e74",
                        "id": 50912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3430:39:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc4ce0abbf50429d3515580231737271834f4225d848f607f0c6bd1750d46fd4",
                          "typeString": "literal_string \"ERROR: WritePosition collateralAmount\""
                        },
                        "value": "ERROR: WritePosition collateralAmount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc4ce0abbf50429d3515580231737271834f4225d848f607f0c6bd1750d46fd4",
                          "typeString": "literal_string \"ERROR: WritePosition collateralAmount\""
                        }
                      ],
                      "id": 50906,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "3377:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 50913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3377:93:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50914,
                  "nodeType": "ExpressionStatement",
                  "src": "3377:93:53"
                }
              ]
            },
            "functionSelector": "7f924c4e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeposit",
            "nameLocation": "2528:11:53",
            "parameters": {
              "id": 50819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2539:2:53"
            },
            "returnParameters": {
              "id": 50820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2551:0:53"
            },
            "scope": 51629,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51121,
            "nodeType": "FunctionDefinition",
            "src": "3483:1477:53",
            "nodes": [],
            "body": {
              "id": 51120,
              "nodeType": "Block",
              "src": "3516:1444:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50919,
                      "name": "_roundSetting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52066,
                      "src": "3526:13:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3526:15:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50921,
                  "nodeType": "ExpressionStatement",
                  "src": "3526:15:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50925,
                            "name": "writer1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51660,
                            "src": "3568:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 50924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3560:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50923,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3560:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3560:16:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_16000000000000000000000_by_1",
                          "typeString": "int_const 16000000000000000000000"
                        },
                        "id": 50931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_16000_by_1",
                            "typeString": "int_const 16000"
                          },
                          "id": 50929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31363030",
                            "id": 50927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3578:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1600_by_1",
                              "typeString": "int_const 1600"
                            },
                            "value": "1600"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 50928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3585:2:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "3578:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16000_by_1",
                            "typeString": "int_const 16000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 50930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3590:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "3578:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_16000000000000000000000_by_1",
                          "typeString": "int_const 16000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_16000000000000000000000_by_1",
                          "typeString": "int_const 16000000000000000000000"
                        }
                      ],
                      "id": 50922,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52122,
                      "src": "3551:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 50932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3551:44:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50933,
                  "nodeType": "ExpressionStatement",
                  "src": "3551:44:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50937,
                            "name": "writer2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51666,
                            "src": "3622:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 50936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3614:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50935,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3614:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3614:16:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_32000000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000000"
                        },
                        "id": 50943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_32000_by_1",
                            "typeString": "int_const 32000"
                          },
                          "id": 50941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31363030",
                            "id": 50939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3632:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1600_by_1",
                              "typeString": "int_const 1600"
                            },
                            "value": "1600"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3230",
                            "id": 50940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3639:2:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20_by_1",
                              "typeString": "int_const 20"
                            },
                            "value": "20"
                          },
                          "src": "3632:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000_by_1",
                            "typeString": "int_const 32000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 50942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3644:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "3632:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_32000000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000000"
                        }
                      ],
                      "id": 50934,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52122,
                      "src": "3605:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 50944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3605:44:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50945,
                  "nodeType": "ExpressionStatement",
                  "src": "3605:44:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50949,
                            "name": "writer3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51672,
                            "src": "3676:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 50948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3668:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50947,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3668:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3668:16:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_48000000000000000000000_by_1",
                          "typeString": "int_const 48000000000000000000000"
                        },
                        "id": 50955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_48000_by_1",
                            "typeString": "int_const 48000"
                          },
                          "id": 50953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31363030",
                            "id": 50951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3686:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1600_by_1",
                              "typeString": "int_const 1600"
                            },
                            "value": "1600"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3330",
                            "id": 50952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3693:2:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_30_by_1",
                              "typeString": "int_const 30"
                            },
                            "value": "30"
                          },
                          "src": "3686:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_48000_by_1",
                            "typeString": "int_const 48000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 50954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3698:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "3686:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_48000000000000000000000_by_1",
                          "typeString": "int_const 48000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_48000000000000000000000_by_1",
                          "typeString": "int_const 48000000000000000000000"
                        }
                      ],
                      "id": 50946,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52122,
                      "src": "3659:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 50956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3659:44:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50957,
                  "nodeType": "ExpressionStatement",
                  "src": "3659:44:53"
                },
                {
                  "assignments": [
                    50959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50959,
                      "mutability": "mutable",
                      "name": "premium",
                      "nameLocation": "3719:7:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 51120,
                      "src": "3714:12:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50958,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3714:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50960,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3714:12:53"
                },
                {
                  "expression": {
                    "id": 50970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50961,
                      "name": "premium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50959,
                      "src": "3736:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 50965,
                              "name": "buyer1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51678,
                              "src": "3764:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 50964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3756:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50963,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3756:7:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3756:15:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 50967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3773:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "30",
                          "id": 50968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3776:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 50962,
                        "name": "_purchase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52182,
                        "src": "3746:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256) returns (uint256)"
                        }
                      },
                      "id": 50969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3746:32:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3736:42:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50971,
                  "nodeType": "ExpressionStatement",
                  "src": "3736:42:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7061696564207072656d69756d3a",
                        "id": 50973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3816:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2b1012a8ed59400db83cda4411f600b757a3287bafdfcc1c81513719401163c",
                          "typeString": "literal_string \"paied premium:\""
                        },
                        "value": "paied premium:"
                      },
                      {
                        "id": 50974,
                        "name": "premium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50959,
                        "src": "3834:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 50975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3843:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a2b1012a8ed59400db83cda4411f600b757a3287bafdfcc1c81513719401163c",
                          "typeString": "literal_string \"paied premium:\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 50972,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "3793:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 50976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3793:53:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50977,
                  "nodeType": "EmitStatement",
                  "src": "3788:58:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50979,
                        "name": "premium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50959,
                        "src": "3865:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_54640000000000000000_by_1",
                          "typeString": "int_const 54640000000000000000"
                        },
                        "id": 50984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_54640000000000000000_by_1",
                            "typeString": "int_const 54640000000000000000"
                          },
                          "id": 50982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "35343634",
                            "id": 50980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3874:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5464_by_1",
                              "typeString": "int_const 5464"
                            },
                            "value": "5464"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653136",
                            "id": 50981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3881:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000_by_1",
                              "typeString": "int_const 10000000000000000"
                            },
                            "value": "1e16"
                          },
                          "src": "3874:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_54640000000000000000_by_1",
                            "typeString": "int_const 54640000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 50983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3888:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3874:15:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_54640000000000000000_by_1",
                          "typeString": "int_const 54640000000000000000"
                        }
                      },
                      {
                        "hexValue": "4552524f523a207072656d69756d206e6f74206d61746368",
                        "id": 50985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3891:26:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72fcfaa2d0e81fb5c86b5cd5a7f63105447eac088869144f27823be3ed67a796",
                          "typeString": "literal_string \"ERROR: premium not match\""
                        },
                        "value": "ERROR: premium not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_54640000000000000000_by_1",
                          "typeString": "int_const 54640000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72fcfaa2d0e81fb5c86b5cd5a7f63105447eac088869144f27823be3ed67a796",
                          "typeString": "literal_string \"ERROR: premium not match\""
                        }
                      ],
                      "id": 50978,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "3856:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 50986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3856:62:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50987,
                  "nodeType": "ExpressionStatement",
                  "src": "3856:62:53"
                },
                {
                  "expression": {
                    "id": 50997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50988,
                      "name": "premium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50959,
                      "src": "3928:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 50992,
                              "name": "buyer2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51684,
                              "src": "3956:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 50991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3948:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50990,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3948:7:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3948:15:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "32",
                          "id": 50994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3965:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        {
                          "hexValue": "30",
                          "id": 50995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3968:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 50989,
                        "name": "_purchase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52182,
                        "src": "3938:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256) returns (uint256)"
                        }
                      },
                      "id": 50996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3938:32:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3928:42:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50998,
                  "nodeType": "ExpressionStatement",
                  "src": "3928:42:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7061696564207072656d69756d3a",
                        "id": 51000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4008:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2b1012a8ed59400db83cda4411f600b757a3287bafdfcc1c81513719401163c",
                          "typeString": "literal_string \"paied premium:\""
                        },
                        "value": "paied premium:"
                      },
                      {
                        "id": 51001,
                        "name": "premium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50959,
                        "src": "4026:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 51002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4035:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a2b1012a8ed59400db83cda4411f600b757a3287bafdfcc1c81513719401163c",
                          "typeString": "literal_string \"paied premium:\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 50999,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "3985:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3985:53:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51004,
                  "nodeType": "EmitStatement",
                  "src": "3980:58:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51006,
                        "name": "premium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50959,
                        "src": "4057:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_109280000000000000000_by_1",
                          "typeString": "int_const 109280000000000000000"
                        },
                        "id": 51011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_54640000000000000000_by_1",
                            "typeString": "int_const 54640000000000000000"
                          },
                          "id": 51009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "35343634",
                            "id": 51007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4066:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5464_by_1",
                              "typeString": "int_const 5464"
                            },
                            "value": "5464"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653136",
                            "id": 51008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4073:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000_by_1",
                              "typeString": "int_const 10000000000000000"
                            },
                            "value": "1e16"
                          },
                          "src": "4066:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_54640000000000000000_by_1",
                            "typeString": "int_const 54640000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 51010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4080:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "4066:15:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_109280000000000000000_by_1",
                          "typeString": "int_const 109280000000000000000"
                        }
                      },
                      {
                        "hexValue": "4552524f523a207072656d69756d206e6f74206d61746368",
                        "id": 51012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4083:26:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72fcfaa2d0e81fb5c86b5cd5a7f63105447eac088869144f27823be3ed67a796",
                          "typeString": "literal_string \"ERROR: premium not match\""
                        },
                        "value": "ERROR: premium not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_109280000000000000000_by_1",
                          "typeString": "int_const 109280000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72fcfaa2d0e81fb5c86b5cd5a7f63105447eac088869144f27823be3ed67a796",
                          "typeString": "literal_string \"ERROR: premium not match\""
                        }
                      ],
                      "id": 51005,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "4048:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 51013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4048:62:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51014,
                  "nodeType": "ExpressionStatement",
                  "src": "4048:62:53"
                },
                {
                  "expression": {
                    "id": 51024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51015,
                      "name": "premium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50959,
                      "src": "4120:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 51019,
                              "name": "buyer3",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51690,
                              "src": "4148:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 51018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4140:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 51017,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4140:7:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 51020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4140:15:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "3130",
                          "id": 51021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4157:2:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        {
                          "hexValue": "30",
                          "id": 51022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4161:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 51016,
                        "name": "_purchase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52182,
                        "src": "4130:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256) returns (uint256)"
                        }
                      },
                      "id": 51023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4130:33:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4120:43:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51025,
                  "nodeType": "ExpressionStatement",
                  "src": "4120:43:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7061696564207072656d69756d3a",
                        "id": 51027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4201:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2b1012a8ed59400db83cda4411f600b757a3287bafdfcc1c81513719401163c",
                          "typeString": "literal_string \"paied premium:\""
                        },
                        "value": "paied premium:"
                      },
                      {
                        "id": 51028,
                        "name": "premium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50959,
                        "src": "4219:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 51029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4228:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a2b1012a8ed59400db83cda4411f600b757a3287bafdfcc1c81513719401163c",
                          "typeString": "literal_string \"paied premium:\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 51026,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "4178:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4178:53:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51031,
                  "nodeType": "EmitStatement",
                  "src": "4173:58:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51033,
                        "name": "premium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50959,
                        "src": "4250:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_546400000000000000000_by_1",
                          "typeString": "int_const 546400000000000000000"
                        },
                        "id": 51038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_54640000000000000000_by_1",
                            "typeString": "int_const 54640000000000000000"
                          },
                          "id": 51036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "35343634",
                            "id": 51034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4259:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5464_by_1",
                              "typeString": "int_const 5464"
                            },
                            "value": "5464"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653136",
                            "id": 51035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4266:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000_by_1",
                              "typeString": "int_const 10000000000000000"
                            },
                            "value": "1e16"
                          },
                          "src": "4259:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_54640000000000000000_by_1",
                            "typeString": "int_const 54640000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 51037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4273:2:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "4259:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_546400000000000000000_by_1",
                          "typeString": "int_const 546400000000000000000"
                        }
                      },
                      {
                        "hexValue": "4552524f523a207072656d69756d206e6f74206d61746368",
                        "id": 51039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4277:26:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72fcfaa2d0e81fb5c86b5cd5a7f63105447eac088869144f27823be3ed67a796",
                          "typeString": "literal_string \"ERROR: premium not match\""
                        },
                        "value": "ERROR: premium not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_546400000000000000000_by_1",
                          "typeString": "int_const 546400000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72fcfaa2d0e81fb5c86b5cd5a7f63105447eac088869144f27823be3ed67a796",
                          "typeString": "literal_string \"ERROR: premium not match\""
                        }
                      ],
                      "id": 51032,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "4241:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 51040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4241:63:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51041,
                  "nodeType": "ExpressionStatement",
                  "src": "4241:63:53"
                },
                {
                  "assignments": [
                    51043
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51043,
                      "mutability": "mutable",
                      "name": "purchaseReceipt",
                      "nameLocation": "4323:15:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 51120,
                      "src": "4315:23:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 51042,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4315:7:53",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51050,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 51046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4364:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "30",
                          "id": 51047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4367:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 51044,
                          "name": "dov",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51645,
                          "src": "4341:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DovForTest_$50170",
                            "typeString": "contract DovForTest"
                          }
                        },
                        "id": 51045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4345:18:53",
                        "memberName": "getRoundStrikeData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50140,
                        "src": "4341:22:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_struct$_RoundStrikeData_$50405_memory_ptr_$",
                          "typeString": "function (uint256,uint256) view external returns (struct RoundStrikeData memory)"
                        }
                      },
                      "id": 51048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4341:28:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoundStrikeData_$50405_memory_ptr",
                        "typeString": "struct RoundStrikeData memory"
                      }
                    },
                    "id": 51049,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4370:15:53",
                    "memberName": "purchaseReceipt",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 50396,
                    "src": "4341:44:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4315:70:53"
                },
                {
                  "assignments": [
                    51052
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51052,
                      "mutability": "mutable",
                      "name": "bal1",
                      "nameLocation": "4401:4:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 51120,
                      "src": "4396:9:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51051,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4396:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51059,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 51057,
                        "name": "buyer1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51678,
                        "src": "4441:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 51054,
                            "name": "purchaseReceipt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51043,
                            "src": "4414:15:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 51053,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44672,
                          "src": "4408:5:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$44672_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 51055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4408:22:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$44672",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 51056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4431:9:53",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44184,
                      "src": "4408:32:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 51058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4408:40:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4396:52:53"
                },
                {
                  "assignments": [
                    51061
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51061,
                      "mutability": "mutable",
                      "name": "bal2",
                      "nameLocation": "4463:4:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 51120,
                      "src": "4458:9:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51060,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4458:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51068,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 51066,
                        "name": "buyer2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51684,
                        "src": "4503:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 51063,
                            "name": "purchaseReceipt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51043,
                            "src": "4476:15:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 51062,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44672,
                          "src": "4470:5:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$44672_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 51064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4470:22:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$44672",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 51065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4493:9:53",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44184,
                      "src": "4470:32:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 51067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4470:40:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4458:52:53"
                },
                {
                  "assignments": [
                    51070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51070,
                      "mutability": "mutable",
                      "name": "bal3",
                      "nameLocation": "4525:4:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 51120,
                      "src": "4520:9:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51069,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4520:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51077,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 51075,
                        "name": "buyer3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51690,
                        "src": "4565:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 51072,
                            "name": "purchaseReceipt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51043,
                            "src": "4538:15:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 51071,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44672,
                          "src": "4532:5:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$44672_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 51073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4532:22:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$44672",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 51074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4555:9:53",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44184,
                      "src": "4532:32:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 51076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4532:40:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4520:52:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "62757965723127732072656365697074",
                        "id": 51079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4611:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8443810cabf915b35ad200f35106b0ad2abf04ec2b5070ef74f369b01c35dc41",
                          "typeString": "literal_string \"buyer1's receipt\""
                        },
                        "value": "buyer1's receipt"
                      },
                      {
                        "id": 51080,
                        "name": "bal1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51052,
                        "src": "4631:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 51081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4637:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8443810cabf915b35ad200f35106b0ad2abf04ec2b5070ef74f369b01c35dc41",
                          "typeString": "literal_string \"buyer1's receipt\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 51078,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "4588:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4588:52:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51083,
                  "nodeType": "EmitStatement",
                  "src": "4583:57:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "62757965723227732072656365697074",
                        "id": 51085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4678:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce242f9d5d088fac3dfe87ad1c6a84189e5cbf14e3f9d16f9dff3f0790a7290c",
                          "typeString": "literal_string \"buyer2's receipt\""
                        },
                        "value": "buyer2's receipt"
                      },
                      {
                        "id": 51086,
                        "name": "bal2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51061,
                        "src": "4698:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 51087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4704:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ce242f9d5d088fac3dfe87ad1c6a84189e5cbf14e3f9d16f9dff3f0790a7290c",
                          "typeString": "literal_string \"buyer2's receipt\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 51084,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "4655:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4655:52:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51089,
                  "nodeType": "EmitStatement",
                  "src": "4650:57:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "62757965723327732072656365697074",
                        "id": 51091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4745:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b89d564286adb655ab5e8cedbc330bf4300ee500c3f033f4ccacf1247e78750",
                          "typeString": "literal_string \"buyer3's receipt\""
                        },
                        "value": "buyer3's receipt"
                      },
                      {
                        "id": 51092,
                        "name": "bal3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51070,
                        "src": "4765:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 51093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4771:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9b89d564286adb655ab5e8cedbc330bf4300ee500c3f033f4ccacf1247e78750",
                          "typeString": "literal_string \"buyer3's receipt\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 51090,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "4722:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4722:52:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51095,
                  "nodeType": "EmitStatement",
                  "src": "4717:57:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51097,
                        "name": "bal1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51052,
                        "src": "4794:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 51100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31",
                          "id": 51098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4800:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 51099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4804:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "4800:8:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      {
                        "hexValue": "7265636569707420646f65736e2774206d61746368",
                        "id": 51101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4810:23:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_809af468ca43820c8e27551ff5296e59c2df18b01ed04591522603b210cbabe6",
                          "typeString": "literal_string \"receipt doesn't match\""
                        },
                        "value": "receipt doesn't match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_809af468ca43820c8e27551ff5296e59c2df18b01ed04591522603b210cbabe6",
                          "typeString": "literal_string \"receipt doesn't match\""
                        }
                      ],
                      "id": 51096,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "4785:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 51102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4785:49:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51103,
                  "nodeType": "ExpressionStatement",
                  "src": "4785:49:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51105,
                        "name": "bal2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51061,
                        "src": "4853:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "id": 51108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 51106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4859:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 51107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4863:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "4859:8:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      },
                      {
                        "hexValue": "7265636569707420646f65736e2774206d61746368",
                        "id": 51109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4869:23:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_809af468ca43820c8e27551ff5296e59c2df18b01ed04591522603b210cbabe6",
                          "typeString": "literal_string \"receipt doesn't match\""
                        },
                        "value": "receipt doesn't match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_809af468ca43820c8e27551ff5296e59c2df18b01ed04591522603b210cbabe6",
                          "typeString": "literal_string \"receipt doesn't match\""
                        }
                      ],
                      "id": 51104,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "4844:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 51110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4844:49:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51111,
                  "nodeType": "ExpressionStatement",
                  "src": "4844:49:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51113,
                        "name": "bal3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51070,
                        "src": "4912:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "id": 51116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 51114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4918:2:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 51115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4923:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "4918:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      },
                      {
                        "hexValue": "7265636569707420646f65736e2774206d61746368",
                        "id": 51117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4929:23:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_809af468ca43820c8e27551ff5296e59c2df18b01ed04591522603b210cbabe6",
                          "typeString": "literal_string \"receipt doesn't match\""
                        },
                        "value": "receipt doesn't match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_809af468ca43820c8e27551ff5296e59c2df18b01ed04591522603b210cbabe6",
                          "typeString": "literal_string \"receipt doesn't match\""
                        }
                      ],
                      "id": 51112,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "4903:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 51118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4903:50:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51119,
                  "nodeType": "ExpressionStatement",
                  "src": "4903:50:53"
                }
              ]
            },
            "functionSelector": "fa7dfe77",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testPurchase",
            "nameLocation": "3492:12:53",
            "parameters": {
              "id": 50917,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3504:2:53"
            },
            "returnParameters": {
              "id": 50918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3516:0:53"
            },
            "scope": 51629,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51282,
            "nodeType": "FunctionDefinition",
            "src": "4966:1196:53",
            "nodes": [],
            "body": {
              "id": 51281,
              "nodeType": "Block",
              "src": "5004:1158:53",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6265666f7265207772697465723127732062616c616e6365",
                        "id": 51125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5042:26:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7eeb16b7860826025fad65daa2bdc7b0516851bc08e22d5712dae9323470ce0",
                          "typeString": "literal_string \"before writer1's balance\""
                        },
                        "value": "before writer1's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51130,
                                "name": "writer1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51660,
                                "src": "5093:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5085:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51128,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5085:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5085:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51126,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "5070:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5075:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "5070:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5070:32:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5104:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c7eeb16b7860826025fad65daa2bdc7b0516851bc08e22d5712dae9323470ce0",
                          "typeString": "literal_string \"before writer1's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51124,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "5019:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5019:87:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51135,
                  "nodeType": "EmitStatement",
                  "src": "5014:92:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6265666f7265207772697465723227732062616c616e6365",
                        "id": 51137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5144:26:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72589b9404a570a8f8488275dd5d3c2aeedda8aaa02b5f0e2a04b690ff4376e5",
                          "typeString": "literal_string \"before writer2's balance\""
                        },
                        "value": "before writer2's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51142,
                                "name": "writer2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51666,
                                "src": "5195:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5187:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51140,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5187:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5187:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51138,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "5172:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5177:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "5172:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5172:32:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5206:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_72589b9404a570a8f8488275dd5d3c2aeedda8aaa02b5f0e2a04b690ff4376e5",
                          "typeString": "literal_string \"before writer2's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51136,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "5121:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5121:87:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51147,
                  "nodeType": "EmitStatement",
                  "src": "5116:92:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6265666f7265207772697465723327732062616c616e6365",
                        "id": 51149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5246:26:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96692ed299c3c3f1315c49c183402f3d3e2ac3ae109aa0b69de40f226e47d743",
                          "typeString": "literal_string \"before writer3's balance\""
                        },
                        "value": "before writer3's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51154,
                                "name": "writer3",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51672,
                                "src": "5297:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5289:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51152,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5289:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5289:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51150,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "5274:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5279:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "5274:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5274:32:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5308:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96692ed299c3c3f1315c49c183402f3d3e2ac3ae109aa0b69de40f226e47d743",
                          "typeString": "literal_string \"before writer3's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51148,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "5223:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5223:87:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51159,
                  "nodeType": "EmitStatement",
                  "src": "5218:92:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1600000000000000000000_by_1",
                          "typeString": "int_const 1600000000000000000000"
                        },
                        "id": 51163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31363030",
                          "id": 51161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5334:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1600_by_1",
                            "typeString": "int_const 1600"
                          },
                          "value": "1600"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 51162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5341:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "5334:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1600000000000000000000_by_1",
                          "typeString": "int_const 1600000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1600000000000000000000_by_1",
                          "typeString": "int_const 1600000000000000000000"
                        }
                      ],
                      "id": 51160,
                      "name": "_expireRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52275,
                      "src": "5321:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 51164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5321:25:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51165,
                  "nodeType": "ExpressionStatement",
                  "src": "5321:25:53"
                },
                {
                  "assignments": [
                    51167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51167,
                      "mutability": "mutable",
                      "name": "totalCollateral",
                      "nameLocation": "5362:15:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 51281,
                      "src": "5357:20:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51166,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5357:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51174,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 51170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5403:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "30",
                          "id": 51171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5406:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 51168,
                          "name": "dov",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51645,
                          "src": "5380:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DovForTest_$50170",
                            "typeString": "contract DovForTest"
                          }
                        },
                        "id": 51169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5384:18:53",
                        "memberName": "getRoundStrikeData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50140,
                        "src": "5380:22:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_struct$_RoundStrikeData_$50405_memory_ptr_$",
                          "typeString": "function (uint256,uint256) view external returns (struct RoundStrikeData memory)"
                        }
                      },
                      "id": 51172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5380:28:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoundStrikeData_$50405_memory_ptr",
                        "typeString": "struct RoundStrikeData memory"
                      }
                    },
                    "id": 51173,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5409:15:53",
                    "memberName": "totalCollateral",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 50398,
                    "src": "5380:44:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5357:67:53"
                },
                {
                  "assignments": [
                    51176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51176,
                      "mutability": "mutable",
                      "name": "pnl",
                      "nameLocation": "5481:3:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 51281,
                      "src": "5476:8:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51175,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5476:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51184,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51180,
                            "name": "writer1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51660,
                            "src": "5505:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 51179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5497:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51178,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5497:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5497:16:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 51182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5515:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 51177,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52311,
                      "src": "5487:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 51183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5487:30:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5476:41:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 51190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 51188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 51186,
                                  "name": "totalCollateral",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51167,
                                  "src": "5539:15:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 51187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5557:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "5539:19:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "31653132",
                                "id": 51189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5561:4:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000_by_1",
                                  "typeString": "int_const 1000000000000"
                                },
                                "value": "1e12"
                              },
                              "src": "5539:26:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 51191,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5538:28:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 51192,
                          "name": "pnl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51176,
                          "src": "5570:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5538:35:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "706e6c20646f65736e2774206d61746368",
                        "id": 51194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5575:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        },
                        "value": "pnl doesn't match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        }
                      ],
                      "id": 51185,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 290,
                      "src": "5527:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 51195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5527:68:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51196,
                  "nodeType": "ExpressionStatement",
                  "src": "5527:68:53"
                },
                {
                  "expression": {
                    "id": 51205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51197,
                      "name": "pnl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51176,
                      "src": "5605:3:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 51201,
                              "name": "writer2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51666,
                              "src": "5629:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 51200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5621:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 51199,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5621:7:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 51202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5621:16:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 51203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5639:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 51198,
                        "name": "_withdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52311,
                        "src": "5611:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256) returns (uint256)"
                        }
                      },
                      "id": 51204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5611:30:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5605:36:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51206,
                  "nodeType": "ExpressionStatement",
                  "src": "5605:36:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 51214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 51212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 51210,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 51208,
                                    "name": "totalCollateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51167,
                                    "src": "5663:15:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 51209,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5681:1:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "5663:19:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 51211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5685:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "5663:23:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "31653132",
                                "id": 51213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5689:4:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000_by_1",
                                  "typeString": "int_const 1000000000000"
                                },
                                "value": "1e12"
                              },
                              "src": "5663:30:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 51215,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5662:32:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 51216,
                          "name": "pnl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51176,
                          "src": "5698:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5662:39:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "706e6c20646f65736e2774206d61746368",
                        "id": 51218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5703:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        },
                        "value": "pnl doesn't match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        }
                      ],
                      "id": 51207,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 290,
                      "src": "5651:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 51219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5651:72:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51220,
                  "nodeType": "ExpressionStatement",
                  "src": "5651:72:53"
                },
                {
                  "expression": {
                    "id": 51229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51221,
                      "name": "pnl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51176,
                      "src": "5733:3:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 51225,
                              "name": "writer3",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51672,
                              "src": "5757:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 51224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5749:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 51223,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5749:7:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 51226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5749:16:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "32",
                          "id": 51227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5767:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 51222,
                        "name": "_withdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52311,
                        "src": "5739:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256) returns (uint256)"
                        }
                      },
                      "id": 51228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5739:30:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5733:36:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51230,
                  "nodeType": "ExpressionStatement",
                  "src": "5733:36:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 51238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 51236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 51234,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 51232,
                                    "name": "totalCollateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51167,
                                    "src": "5791:15:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "33",
                                    "id": 51233,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5809:1:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  "src": "5791:19:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 51235,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5813:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "5791:23:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "31653132",
                                "id": 51237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5817:4:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000_by_1",
                                  "typeString": "int_const 1000000000000"
                                },
                                "value": "1e12"
                              },
                              "src": "5791:30:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 51239,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5790:32:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 51240,
                          "name": "pnl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51176,
                          "src": "5826:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5790:39:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "706e6c20646f65736e2774206d61746368",
                        "id": 51242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5831:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        },
                        "value": "pnl doesn't match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        }
                      ],
                      "id": 51231,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 290,
                      "src": "5779:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 51243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5779:72:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51244,
                  "nodeType": "ExpressionStatement",
                  "src": "5779:72:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6166746572207772697465723127732062616c616e6365",
                        "id": 51246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5890:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e146218211e23e797f1e3906f782074e1597b99129d68c831beaad54898220c3",
                          "typeString": "literal_string \"after writer1's balance\""
                        },
                        "value": "after writer1's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51251,
                                "name": "writer1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51660,
                                "src": "5940:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5932:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51249,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5932:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5932:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51247,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "5917:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5922:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "5917:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5917:32:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5951:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e146218211e23e797f1e3906f782074e1597b99129d68c831beaad54898220c3",
                          "typeString": "literal_string \"after writer1's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51245,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "5867:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5867:86:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51256,
                  "nodeType": "EmitStatement",
                  "src": "5862:91:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6166746572207772697465723227732062616c616e6365",
                        "id": 51258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5991:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc0cadb41b5a5b3c85173f047f92d1bed86ff90cc85f7fe46d5cf62f0091873d",
                          "typeString": "literal_string \"after writer2's balance\""
                        },
                        "value": "after writer2's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51263,
                                "name": "writer2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51666,
                                "src": "6041:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6033:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51261,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6033:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6033:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51259,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "6018:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6023:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "6018:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6018:32:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6052:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dc0cadb41b5a5b3c85173f047f92d1bed86ff90cc85f7fe46d5cf62f0091873d",
                          "typeString": "literal_string \"after writer2's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51257,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "5968:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5968:86:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51268,
                  "nodeType": "EmitStatement",
                  "src": "5963:91:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6166746572207772697465723327732062616c616e6365",
                        "id": 51270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6092:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6539175fab9297145c57859756ecb13467c8f2c37c90658ef4891744d5a00967",
                          "typeString": "literal_string \"after writer3's balance\""
                        },
                        "value": "after writer3's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51275,
                                "name": "writer3",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51672,
                                "src": "6142:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6134:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51273,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6134:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6134:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51271,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "6119:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6124:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "6119:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6119:32:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6153:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6539175fab9297145c57859756ecb13467c8f2c37c90658ef4891744d5a00967",
                          "typeString": "literal_string \"after writer3's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51269,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "6069:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6069:86:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51280,
                  "nodeType": "EmitStatement",
                  "src": "6064:91:53"
                }
              ]
            },
            "functionSelector": "ecb9a103",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdraw_1600",
            "nameLocation": "4975:17:53",
            "parameters": {
              "id": 51122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4992:2:53"
            },
            "returnParameters": {
              "id": 51123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5004:0:53"
            },
            "scope": 51629,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51458,
            "nodeType": "FunctionDefinition",
            "src": "6168:1330:53",
            "nodes": [],
            "body": {
              "id": 51457,
              "nodeType": "Block",
              "src": "6206:1292:53",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6265666f7265207772697465723127732062616c616e6365",
                        "id": 51286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6244:26:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7eeb16b7860826025fad65daa2bdc7b0516851bc08e22d5712dae9323470ce0",
                          "typeString": "literal_string \"before writer1's balance\""
                        },
                        "value": "before writer1's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51291,
                                "name": "writer1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51660,
                                "src": "6295:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6287:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51289,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6287:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6287:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51287,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "6272:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6277:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "6272:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6272:32:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6306:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c7eeb16b7860826025fad65daa2bdc7b0516851bc08e22d5712dae9323470ce0",
                          "typeString": "literal_string \"before writer1's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51285,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "6221:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6221:87:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51296,
                  "nodeType": "EmitStatement",
                  "src": "6216:92:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6265666f7265207772697465723227732062616c616e6365",
                        "id": 51298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6346:26:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72589b9404a570a8f8488275dd5d3c2aeedda8aaa02b5f0e2a04b690ff4376e5",
                          "typeString": "literal_string \"before writer2's balance\""
                        },
                        "value": "before writer2's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51303,
                                "name": "writer2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51666,
                                "src": "6397:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6389:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51301,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6389:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6389:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51299,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "6374:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6379:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "6374:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6374:32:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6408:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_72589b9404a570a8f8488275dd5d3c2aeedda8aaa02b5f0e2a04b690ff4376e5",
                          "typeString": "literal_string \"before writer2's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51297,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "6323:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6323:87:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51308,
                  "nodeType": "EmitStatement",
                  "src": "6318:92:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6265666f7265207772697465723327732062616c616e6365",
                        "id": 51310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6448:26:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96692ed299c3c3f1315c49c183402f3d3e2ac3ae109aa0b69de40f226e47d743",
                          "typeString": "literal_string \"before writer3's balance\""
                        },
                        "value": "before writer3's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51315,
                                "name": "writer3",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51672,
                                "src": "6499:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6491:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51313,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6491:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6491:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51311,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "6476:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6481:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "6476:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6476:32:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6510:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96692ed299c3c3f1315c49c183402f3d3e2ac3ae109aa0b69de40f226e47d743",
                          "typeString": "literal_string \"before writer3's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51309,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "6425:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6425:87:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51320,
                  "nodeType": "EmitStatement",
                  "src": "6420:92:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1400000000000000000000_by_1",
                          "typeString": "int_const 1400000000000000000000"
                        },
                        "id": 51324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31343030",
                          "id": 51322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6544:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1400_by_1",
                            "typeString": "int_const 1400"
                          },
                          "value": "1400"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 51323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6551:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "6544:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1400000000000000000000_by_1",
                          "typeString": "int_const 1400000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1400000000000000000000_by_1",
                          "typeString": "int_const 1400000000000000000000"
                        }
                      ],
                      "id": 51321,
                      "name": "_expireRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52275,
                      "src": "6531:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 51325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6531:25:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51326,
                  "nodeType": "ExpressionStatement",
                  "src": "6531:25:53"
                },
                {
                  "assignments": [
                    51328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51328,
                      "mutability": "mutable",
                      "name": "totalCollateral",
                      "nameLocation": "6571:15:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 51457,
                      "src": "6566:20:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51327,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6566:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51335,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 51331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6612:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "30",
                          "id": 51332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6615:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 51329,
                          "name": "dov",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51645,
                          "src": "6589:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DovForTest_$50170",
                            "typeString": "contract DovForTest"
                          }
                        },
                        "id": 51330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6593:18:53",
                        "memberName": "getRoundStrikeData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50140,
                        "src": "6589:22:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_struct$_RoundStrikeData_$50405_memory_ptr_$",
                          "typeString": "function (uint256,uint256) view external returns (struct RoundStrikeData memory)"
                        }
                      },
                      "id": 51333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6589:28:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoundStrikeData_$50405_memory_ptr",
                        "typeString": "struct RoundStrikeData memory"
                      }
                    },
                    "id": 51334,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6618:15:53",
                    "memberName": "totalCollateral",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 50398,
                    "src": "6589:44:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6566:67:53"
                },
                {
                  "assignments": [
                    51337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51337,
                      "mutability": "mutable",
                      "name": "pnl",
                      "nameLocation": "6761:3:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 51457,
                      "src": "6756:8:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51336,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6756:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51345,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51341,
                            "name": "writer1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51660,
                            "src": "6785:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 51340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6777:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51339,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6777:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6777:16:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 51343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6795:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 51338,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52311,
                      "src": "6767:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 51344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6767:30:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6756:41:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 51356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 51354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 51351,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 51347,
                                        "name": "totalCollateral",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 51328,
                                        "src": "6820:15:53",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_rational_2600000000000000000000_by_1",
                                          "typeString": "int_const 2600000000000000000000"
                                        },
                                        "id": 51350,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "32363030",
                                          "id": 51348,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "6838:4:53",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2600_by_1",
                                            "typeString": "int_const 2600"
                                          },
                                          "value": "2600"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "31653138",
                                          "id": 51349,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "6845:4:53",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                            "typeString": "int_const 1000000000000000000"
                                          },
                                          "value": "1e18"
                                        },
                                        "src": "6838:11:53",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2600000000000000000000_by_1",
                                          "typeString": "int_const 2600000000000000000000"
                                        }
                                      },
                                      "src": "6820:29:53",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 51352,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "6819:31:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 51353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6853:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "6819:35:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "31653132",
                                "id": 51355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6857:4:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000_by_1",
                                  "typeString": "int_const 1000000000000"
                                },
                                "value": "1e12"
                              },
                              "src": "6819:42:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 51357,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6818:44:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 51358,
                          "name": "pnl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51337,
                          "src": "6866:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6818:51:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "706e6c20646f65736e2774206d61746368",
                        "id": 51360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6871:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        },
                        "value": "pnl doesn't match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        }
                      ],
                      "id": 51346,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 290,
                      "src": "6807:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 51361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6807:84:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51362,
                  "nodeType": "ExpressionStatement",
                  "src": "6807:84:53"
                },
                {
                  "expression": {
                    "id": 51371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51363,
                      "name": "pnl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51337,
                      "src": "6901:3:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 51367,
                              "name": "writer2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51666,
                              "src": "6925:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 51366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6917:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 51365,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6917:7:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 51368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6917:16:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 51369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6935:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 51364,
                        "name": "_withdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52311,
                        "src": "6907:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256) returns (uint256)"
                        }
                      },
                      "id": 51370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6907:30:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6901:36:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51372,
                  "nodeType": "ExpressionStatement",
                  "src": "6901:36:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 51385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 51383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 51381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 51378,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 51374,
                                          "name": "totalCollateral",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 51328,
                                          "src": "6960:15:53",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_rational_2600000000000000000000_by_1",
                                            "typeString": "int_const 2600000000000000000000"
                                          },
                                          "id": 51377,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "32363030",
                                            "id": 51375,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "6978:4:53",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_2600_by_1",
                                              "typeString": "int_const 2600"
                                            },
                                            "value": "2600"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "hexValue": "31653138",
                                            "id": 51376,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "6985:4:53",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                              "typeString": "int_const 1000000000000000000"
                                            },
                                            "value": "1e18"
                                          },
                                          "src": "6978:11:53",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2600000000000000000000_by_1",
                                            "typeString": "int_const 2600000000000000000000"
                                          }
                                        },
                                        "src": "6960:29:53",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 51379,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "6959:31:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 51380,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6993:1:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "6959:35:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 51382,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6997:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "6959:39:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "31653132",
                                "id": 51384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7001:4:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000_by_1",
                                  "typeString": "int_const 1000000000000"
                                },
                                "value": "1e12"
                              },
                              "src": "6959:46:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 51386,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6958:48:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 51387,
                          "name": "pnl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51337,
                          "src": "7010:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6958:55:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "706e6c20646f65736e2774206d61746368",
                        "id": 51389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7015:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        },
                        "value": "pnl doesn't match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        }
                      ],
                      "id": 51373,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 290,
                      "src": "6947:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 51390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6947:88:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51391,
                  "nodeType": "ExpressionStatement",
                  "src": "6947:88:53"
                },
                {
                  "expression": {
                    "id": 51400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51392,
                      "name": "pnl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51337,
                      "src": "7045:3:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 51396,
                              "name": "writer3",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51672,
                              "src": "7069:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 51395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7061:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 51394,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7061:7:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 51397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7061:16:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "32",
                          "id": 51398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7079:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 51393,
                        "name": "_withdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52311,
                        "src": "7051:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256) returns (uint256)"
                        }
                      },
                      "id": 51399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7051:30:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7045:36:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51401,
                  "nodeType": "ExpressionStatement",
                  "src": "7045:36:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 51414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 51412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 51410,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 51407,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 51403,
                                          "name": "totalCollateral",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 51328,
                                          "src": "7104:15:53",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_rational_2600000000000000000000_by_1",
                                            "typeString": "int_const 2600000000000000000000"
                                          },
                                          "id": 51406,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "32363030",
                                            "id": 51404,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7122:4:53",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_2600_by_1",
                                              "typeString": "int_const 2600"
                                            },
                                            "value": "2600"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "hexValue": "31653138",
                                            "id": 51405,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7129:4:53",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                              "typeString": "int_const 1000000000000000000"
                                            },
                                            "value": "1e18"
                                          },
                                          "src": "7122:11:53",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2600000000000000000000_by_1",
                                            "typeString": "int_const 2600000000000000000000"
                                          }
                                        },
                                        "src": "7104:29:53",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 51408,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "7103:31:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "33",
                                    "id": 51409,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7137:1:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  "src": "7103:35:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 51411,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7141:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "7103:39:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "31653132",
                                "id": 51413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7145:4:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000_by_1",
                                  "typeString": "int_const 1000000000000"
                                },
                                "value": "1e12"
                              },
                              "src": "7103:46:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 51415,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7102:48:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 51416,
                          "name": "pnl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51337,
                          "src": "7154:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7102:55:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "706e6c20646f65736e2774206d61746368",
                        "id": 51418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7159:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        },
                        "value": "pnl doesn't match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        }
                      ],
                      "id": 51402,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 290,
                      "src": "7091:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 51419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7091:88:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51420,
                  "nodeType": "ExpressionStatement",
                  "src": "7091:88:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6166746572207772697465723127732062616c616e6365",
                        "id": 51422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7226:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e146218211e23e797f1e3906f782074e1597b99129d68c831beaad54898220c3",
                          "typeString": "literal_string \"after writer1's balance\""
                        },
                        "value": "after writer1's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51427,
                                "name": "writer1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51660,
                                "src": "7276:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7268:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51425,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7268:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7268:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51423,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "7253:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7258:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "7253:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7253:32:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7287:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e146218211e23e797f1e3906f782074e1597b99129d68c831beaad54898220c3",
                          "typeString": "literal_string \"after writer1's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51421,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "7203:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7203:86:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51432,
                  "nodeType": "EmitStatement",
                  "src": "7198:91:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6166746572207772697465723227732062616c616e6365",
                        "id": 51434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7327:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc0cadb41b5a5b3c85173f047f92d1bed86ff90cc85f7fe46d5cf62f0091873d",
                          "typeString": "literal_string \"after writer2's balance\""
                        },
                        "value": "after writer2's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51439,
                                "name": "writer2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51666,
                                "src": "7377:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7369:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51437,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7369:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7369:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51435,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "7354:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7359:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "7354:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7354:32:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7388:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dc0cadb41b5a5b3c85173f047f92d1bed86ff90cc85f7fe46d5cf62f0091873d",
                          "typeString": "literal_string \"after writer2's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51433,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "7304:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7304:86:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51444,
                  "nodeType": "EmitStatement",
                  "src": "7299:91:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6166746572207772697465723327732062616c616e6365",
                        "id": 51446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7428:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6539175fab9297145c57859756ecb13467c8f2c37c90658ef4891744d5a00967",
                          "typeString": "literal_string \"after writer3's balance\""
                        },
                        "value": "after writer3's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51451,
                                "name": "writer3",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51672,
                                "src": "7478:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7470:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51449,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7470:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7470:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51447,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "7455:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7460:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "7455:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7455:32:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7489:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6539175fab9297145c57859756ecb13467c8f2c37c90658ef4891744d5a00967",
                          "typeString": "literal_string \"after writer3's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51445,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "7405:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7405:86:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51456,
                  "nodeType": "EmitStatement",
                  "src": "7400:91:53"
                }
              ]
            },
            "functionSelector": "73add44b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdraw_1400",
            "nameLocation": "6177:17:53",
            "parameters": {
              "id": 51283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6194:2:53"
            },
            "returnParameters": {
              "id": 51284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6206:0:53"
            },
            "scope": 51629,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51489,
            "nodeType": "FunctionDefinition",
            "src": "7504:216:53",
            "nodes": [],
            "body": {
              "id": 51488,
              "nodeType": "Block",
              "src": "7540:180:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1601000000000000000000_by_1",
                          "typeString": "int_const 1601000000000000000000"
                        },
                        "id": 51464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31363031",
                          "id": 51462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7563:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1601_by_1",
                            "typeString": "int_const 1601"
                          },
                          "value": "1601"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 51463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7570:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "7563:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1601000000000000000000_by_1",
                          "typeString": "int_const 1601000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1601000000000000000000_by_1",
                          "typeString": "int_const 1601000000000000000000"
                        }
                      ],
                      "id": 51461,
                      "name": "_expireRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52275,
                      "src": "7550:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 51465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7550:25:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51466,
                  "nodeType": "ExpressionStatement",
                  "src": "7550:25:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51470,
                            "name": "buyer1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51678,
                            "src": "7613:6:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 51469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7605:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51468,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7605:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7605:15:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51467,
                      "name": "_settleExpectRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52458,
                      "src": "7585:19:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 51472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7585:36:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51473,
                  "nodeType": "ExpressionStatement",
                  "src": "7585:36:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51477,
                            "name": "buyer2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51684,
                            "src": "7659:6:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 51476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7651:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51475,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7651:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7651:15:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51474,
                      "name": "_settleExpectRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52458,
                      "src": "7631:19:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 51479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7631:36:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51480,
                  "nodeType": "ExpressionStatement",
                  "src": "7631:36:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51484,
                            "name": "buyer3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51690,
                            "src": "7705:6:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 51483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7697:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51482,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7697:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7697:15:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51481,
                      "name": "_settleExpectRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52458,
                      "src": "7677:19:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 51486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7677:36:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51487,
                  "nodeType": "ExpressionStatement",
                  "src": "7677:36:53"
                }
              ]
            },
            "functionSelector": "f0806764",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSettle_1600",
            "nameLocation": "7513:15:53",
            "parameters": {
              "id": 51459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7528:2:53"
            },
            "returnParameters": {
              "id": 51460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7540:0:53"
            },
            "scope": 51629,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51628,
            "nodeType": "FunctionDefinition",
            "src": "7726:1029:53",
            "nodes": [],
            "body": {
              "id": 51627,
              "nodeType": "Block",
              "src": "7762:993:53",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6265666f72652062757965723127732062616c616e6365",
                        "id": 51493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7800:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b593751b471a2f28e499b4894fec70549c5c9990608515bcb4fabb9f6a12b365",
                          "typeString": "literal_string \"before buyer1's balance\""
                        },
                        "value": "before buyer1's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51498,
                                "name": "buyer1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51678,
                                "src": "7850:6:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7842:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51496,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7842:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7842:15:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51494,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "7827:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7832:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "7827:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7827:31:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7860:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b593751b471a2f28e499b4894fec70549c5c9990608515bcb4fabb9f6a12b365",
                          "typeString": "literal_string \"before buyer1's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51492,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "7777:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7777:85:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51503,
                  "nodeType": "EmitStatement",
                  "src": "7772:90:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6265666f72652062757965723227732062616c616e6365",
                        "id": 51505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7900:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46128c7ce47af94f6557da8a8e019d0c3edd0c758628b7dbdb8b9f1e89e9c74d",
                          "typeString": "literal_string \"before buyer2's balance\""
                        },
                        "value": "before buyer2's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51510,
                                "name": "buyer2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51684,
                                "src": "7950:6:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7942:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51508,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7942:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7942:15:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51506,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "7927:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7932:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "7927:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7927:31:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7960:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_46128c7ce47af94f6557da8a8e019d0c3edd0c758628b7dbdb8b9f1e89e9c74d",
                          "typeString": "literal_string \"before buyer2's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51504,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "7877:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7877:85:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51515,
                  "nodeType": "EmitStatement",
                  "src": "7872:90:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6265666f72652062757965723327732062616c616e6365",
                        "id": 51517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8000:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24efa69d32140a070979e4b5b78c8b76fa687a686f0acb3fb77bdb8dace01745",
                          "typeString": "literal_string \"before buyer3's balance\""
                        },
                        "value": "before buyer3's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51522,
                                "name": "buyer3",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51690,
                                "src": "8050:6:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8042:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51520,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8042:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8042:15:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51518,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "8027:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8032:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "8027:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8027:31:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8060:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_24efa69d32140a070979e4b5b78c8b76fa687a686f0acb3fb77bdb8dace01745",
                          "typeString": "literal_string \"before buyer3's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51516,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "7977:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7977:85:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51527,
                  "nodeType": "EmitStatement",
                  "src": "7972:90:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1400000000000000000000_by_1",
                          "typeString": "int_const 1400000000000000000000"
                        },
                        "id": 51531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31343030",
                          "id": 51529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8094:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1400_by_1",
                            "typeString": "int_const 1400"
                          },
                          "value": "1400"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 51530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8101:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "8094:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1400000000000000000000_by_1",
                          "typeString": "int_const 1400000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1400000000000000000000_by_1",
                          "typeString": "int_const 1400000000000000000000"
                        }
                      ],
                      "id": 51528,
                      "name": "_expireRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52275,
                      "src": "8081:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 51532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8081:25:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51533,
                  "nodeType": "ExpressionStatement",
                  "src": "8081:25:53"
                },
                {
                  "assignments": [
                    51535
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51535,
                      "mutability": "mutable",
                      "name": "pnl",
                      "nameLocation": "8160:3:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 51627,
                      "src": "8155:8:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51534,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8155:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51542,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51539,
                            "name": "buyer1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51678,
                            "src": "8182:6:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 51538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8174:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51537,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8174:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8174:15:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51536,
                      "name": "_settle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52382,
                      "src": "8166:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 51541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8166:24:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8155:35:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51544,
                        "name": "pnl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51535,
                        "src": "8209:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "id": 51549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_200_by_1",
                            "typeString": "int_const 200"
                          },
                          "id": 51547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "323030",
                            "id": 51545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8215:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200_by_1",
                              "typeString": "int_const 200"
                            },
                            "value": "200"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 51546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8221:1:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "8215:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200_by_1",
                            "typeString": "int_const 200"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 51548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8225:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "8215:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      },
                      {
                        "hexValue": "706e6c20646f65736e2774206d61746368",
                        "id": 51550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8231:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        },
                        "value": "pnl doesn't match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        }
                      ],
                      "id": 51543,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "8200:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 51551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8200:51:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51552,
                  "nodeType": "ExpressionStatement",
                  "src": "8200:51:53"
                },
                {
                  "expression": {
                    "id": 51560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51553,
                      "name": "pnl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51535,
                      "src": "8261:3:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 51557,
                              "name": "buyer2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51684,
                              "src": "8282:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 51556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8274:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 51555,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8274:7:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 51558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8274:15:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 51554,
                        "name": "_settle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52382,
                        "src": "8266:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) returns (uint256)"
                        }
                      },
                      "id": 51559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8266:24:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8261:29:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51561,
                  "nodeType": "ExpressionStatement",
                  "src": "8261:29:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51563,
                        "name": "pnl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51535,
                        "src": "8309:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_400000000000000000000_by_1",
                          "typeString": "int_const 400000000000000000000"
                        },
                        "id": 51568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_400_by_1",
                            "typeString": "int_const 400"
                          },
                          "id": 51566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "323030",
                            "id": 51564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8314:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200_by_1",
                              "typeString": "int_const 200"
                            },
                            "value": "200"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 51565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8320:1:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "8314:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_400_by_1",
                            "typeString": "int_const 400"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 51567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8324:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "8314:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_400000000000000000000_by_1",
                          "typeString": "int_const 400000000000000000000"
                        }
                      },
                      {
                        "hexValue": "706e6c20646f65736e2774206d61746368",
                        "id": 51569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8330:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        },
                        "value": "pnl doesn't match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_400000000000000000000_by_1",
                          "typeString": "int_const 400000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        }
                      ],
                      "id": 51562,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "8300:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 51570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8300:50:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51571,
                  "nodeType": "ExpressionStatement",
                  "src": "8300:50:53"
                },
                {
                  "expression": {
                    "id": 51579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51572,
                      "name": "pnl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51535,
                      "src": "8360:3:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 51576,
                              "name": "buyer3",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51690,
                              "src": "8381:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 51575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8373:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 51574,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8373:7:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 51577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8373:15:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 51573,
                        "name": "_settle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52382,
                        "src": "8365:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) returns (uint256)"
                        }
                      },
                      "id": 51578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8365:24:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8360:29:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51580,
                  "nodeType": "ExpressionStatement",
                  "src": "8360:29:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51582,
                        "name": "pnl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51535,
                        "src": "8408:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000000"
                        },
                        "id": 51587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_2000_by_1",
                            "typeString": "int_const 2000"
                          },
                          "id": 51585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "323030",
                            "id": 51583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8413:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200_by_1",
                              "typeString": "int_const 200"
                            },
                            "value": "200"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 51584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8419:2:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "8413:8:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000_by_1",
                            "typeString": "int_const 2000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 51586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8424:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "8413:15:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "706e6c20646f65736e2774206d61746368",
                        "id": 51588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8430:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        },
                        "value": "pnl doesn't match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7b0c2333d4f39f472c30330edf5ce7a1f3ea4ff1dae259d63486a8c327c821b",
                          "typeString": "literal_string \"pnl doesn't match\""
                        }
                      ],
                      "id": 51581,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "8399:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 51589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8399:51:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51590,
                  "nodeType": "ExpressionStatement",
                  "src": "8399:51:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "61667465722062757965723127732062616c616e6365",
                        "id": 51592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8489:24:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6acc76388460caa800f79e624ee86e91fe198a432a3915354e8542197de536cc",
                          "typeString": "literal_string \"after buyer1's balance\""
                        },
                        "value": "after buyer1's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51597,
                                "name": "buyer1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51678,
                                "src": "8538:6:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8530:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51595,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8530:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8530:15:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51593,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "8515:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8520:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "8515:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8515:31:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8548:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6acc76388460caa800f79e624ee86e91fe198a432a3915354e8542197de536cc",
                          "typeString": "literal_string \"after buyer1's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51591,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "8466:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8466:84:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51602,
                  "nodeType": "EmitStatement",
                  "src": "8461:89:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "61667465722062757965723227732062616c616e6365",
                        "id": 51604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8588:24:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b14ce7a4b3f9566dc9308fe116ef1e6bf471c398d37d60aa9d3d1c62ad6eb329",
                          "typeString": "literal_string \"after buyer2's balance\""
                        },
                        "value": "after buyer2's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51609,
                                "name": "buyer2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51684,
                                "src": "8637:6:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8629:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51607,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8629:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8629:15:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51605,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "8614:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8619:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "8614:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8614:31:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8647:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b14ce7a4b3f9566dc9308fe116ef1e6bf471c398d37d60aa9d3d1c62ad6eb329",
                          "typeString": "literal_string \"after buyer2's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51603,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "8565:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8565:84:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51614,
                  "nodeType": "EmitStatement",
                  "src": "8560:89:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "61667465722062757965723327732062616c616e6365",
                        "id": 51616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8687:24:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ac74fd3119857a04bf81c04ab5060c2b3924121dcb20b120824abc28f7f1951",
                          "typeString": "literal_string \"after buyer3's balance\""
                        },
                        "value": "after buyer3's balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51621,
                                "name": "buyer3",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51690,
                                "src": "8736:6:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8728:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51619,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8728:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8728:15:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51617,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51654,
                            "src": "8713:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44672",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 51618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8718:9:53",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44184,
                          "src": "8713:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 51623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8713:31:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 51624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8746:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2ac74fd3119857a04bf81c04ab5060c2b3924121dcb20b120824abc28f7f1951",
                          "typeString": "literal_string \"after buyer3's balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 51615,
                      "name": "log_named_decimal_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "8664:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 51625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8664:84:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51626,
                  "nodeType": "EmitStatement",
                  "src": "8659:89:53"
                }
              ]
            },
            "functionSelector": "dc5eb6cb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSettle_1400",
            "nameLocation": "7735:15:53",
            "parameters": {
              "id": 51490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7750:2:53"
            },
            "returnParameters": {
              "id": 51491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7762:0:53"
            },
            "scope": 51629,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50537,
              "name": "Test",
              "nameLocations": [
                "329:4:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12238,
              "src": "329:4:53"
            },
            "id": 50538,
            "nodeType": "InheritanceSpecifier",
            "src": "329:4:53"
          },
          {
            "baseName": {
              "id": 50539,
              "name": "Functions",
              "nameLocations": [
                "335:9:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52459,
              "src": "335:9:53"
            },
            "id": 50540,
            "nodeType": "InheritanceSpecifier",
            "src": "335:9:53"
          }
        ],
        "canonicalName": "FunctionTest",
        "contractDependencies": [
          50170
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          51629,
          52459,
          12238,
          12187,
          7739,
          7414,
          6621,
          4561,
          3823,
          2291,
          2357,
          2354
        ],
        "name": "FunctionTest",
        "nameLocation": "313:12:53",
        "scope": 51630,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 53
}